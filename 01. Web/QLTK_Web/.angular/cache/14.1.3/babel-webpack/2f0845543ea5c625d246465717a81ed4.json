{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/button.j.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../core/component_registrator\";\nimport BaseComponent from \"../component_wrapper/button\";\nimport { Button as ButtonComponent, defaultOptions } from \"./button\";\nexport default class Button extends BaseComponent {\n  getProps() {\n    var props = super.getProps();\n    props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\n    return props;\n  }\n\n  focus() {\n    var _this$viewRef;\n\n    return null === (_this$viewRef = this.viewRef) || void 0 === _this$viewRef ? void 0 : _this$viewRef.focus(...arguments);\n  }\n\n  activate() {\n    var _this$viewRef2;\n\n    return null === (_this$viewRef2 = this.viewRef) || void 0 === _this$viewRef2 ? void 0 : _this$viewRef2.activate(...arguments);\n  }\n\n  deactivate() {\n    var _this$viewRef3;\n\n    return null === (_this$viewRef3 = this.viewRef) || void 0 === _this$viewRef3 ? void 0 : _this$viewRef3.deactivate(...arguments);\n  }\n\n  _getActionConfigs() {\n    return {\n      onClick: {\n        excludeValidators: [\"readOnly\"]\n      },\n      onSubmit: {}\n    };\n  }\n\n  get _propsInfo() {\n    return {\n      twoWay: [],\n      allowNull: [],\n      elements: [\"onSubmit\"],\n      templates: [\"template\", \"iconTemplate\"],\n      props: [\"activeStateEnabled\", \"hoverStateEnabled\", \"icon\", \"iconPosition\", \"onClick\", \"onSubmit\", \"pressed\", \"stylingMode\", \"template\", \"iconTemplate\", \"text\", \"type\", \"useInkRipple\", \"useSubmitBehavior\", \"templateData\", \"className\", \"accessKey\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"visible\", \"width\"]\n    };\n  }\n\n  get _viewComponent() {\n    return ButtonComponent;\n  }\n\n}\nregisterComponent(\"dxButton\", Button);\nButton.defaultOptions = defaultOptions;","map":null,"metadata":{},"sourceType":"module"}