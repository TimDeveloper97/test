{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../core/utils/date\";\nvar toMs = dateUtils.dateToMilliseconds;\n\nclass DateAdapterCore {\n  constructor(source) {\n    this._source = new Date(source.getTime ? source.getTime() : source);\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  result() {\n    return this._source;\n  }\n\n  getTimezoneOffset() {\n    var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n\n    var value = this._source.getTimezoneOffset();\n\n    if (\"minute\" === format) {\n      return value * toMs(\"minute\");\n    }\n\n    return value;\n  }\n\n  getTime() {\n    return this._source.getTime();\n  }\n\n  setTime(value) {\n    this._source.setTime(value);\n\n    return this;\n  }\n\n  addTime(value) {\n    this._source.setTime(this._source.getTime() + value);\n\n    return this;\n  }\n\n  setMinutes(value) {\n    this._source.setMinutes(value);\n\n    return this;\n  }\n\n  addMinutes(value) {\n    this._source.setMinutes(this._source.getMinutes() + value);\n\n    return this;\n  }\n\n  subtractMinutes(value) {\n    this._source.setMinutes(this._source.getMinutes() - value);\n\n    return this;\n  }\n\n}\n\nvar DateAdapter = date => new DateAdapterCore(date);\n\nexport default DateAdapter;","map":null,"metadata":{},"sourceType":"module"}