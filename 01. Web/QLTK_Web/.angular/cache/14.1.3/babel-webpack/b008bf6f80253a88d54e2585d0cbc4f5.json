{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_state.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getSelectedCells } from \"../../../renovation/ui/scheduler/workspaces/base/utils\";\nexport default class CellsSelectionState {\n  constructor(viewDataProvider) {\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n    this._prevFocusedCell = null;\n    this._prevSelectedCells = null;\n  }\n\n  get viewDataProvider() {\n    return this._viewDataProvider;\n  }\n\n  get focusedCell() {\n    var focusedCell = this._focusedCell;\n\n    if (!focusedCell) {\n      return;\n    }\n\n    var {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      allDay: allDay\n    } = focusedCell;\n    var cellInfo = {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      isAllDay: allDay,\n      index: focusedCell.index\n    };\n    var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\n    return {\n      coordinates: cellPosition,\n      cellData: focusedCell\n    };\n  }\n\n  setFocusedCell(rowIndex, columnIndex, isAllDay) {\n    if (rowIndex >= 0) {\n      var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n\n      this._focusedCell = cell;\n    }\n  }\n\n  setSelectedCells(lastCellCoordinates) {\n    var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n    var viewDataProvider = this._viewDataProvider;\n    var {\n      rowIndex: lastRowIndex,\n      columnIndex: lastColumnIndex,\n      allDay: isLastCellAllDay\n    } = lastCellCoordinates;\n\n    if (lastRowIndex < 0) {\n      return;\n    }\n\n    var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n    var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n    this._firstSelectedCell = firstCell;\n    this._selectedCells = getSelectedCells(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay);\n  }\n\n  setSelectedCellsByData(selectedCellsData) {\n    this._selectedCells = selectedCellsData;\n  }\n\n  getSelectedCells() {\n    return this._selectedCells;\n  }\n\n  releaseSelectedAndFocusedCells() {\n    this.releaseSelectedCells();\n    this.releaseFocusedCell();\n  }\n\n  releaseSelectedCells() {\n    this._prevSelectedCells = this._selectedCells;\n    this._prevFirstSelectedCell = this._firstSelectedCell;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n\n  releaseFocusedCell() {\n    this._prevFocusedCell = this._focusedCell;\n    this._focusedCell = null;\n  }\n\n  restoreSelectedAndFocusedCells() {\n    this._selectedCells = this._selectedCells || this._prevSelectedCells;\n    this._focusedCell = this._focusedCell || this._prevFocusedCell;\n    this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;\n    this._prevSelectedCells = null;\n    this._prevFirstSelectedCell = null;\n    this._prevFocusedCell = null;\n  }\n\n  clearSelectedAndFocusedCells() {\n    this._prevSelectedCells = null;\n    this._selectedCells = null;\n    this._prevFocusedCell = null;\n    this._focusedCell = null;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}