{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\nimport { BlockUI } from 'ng-block-ui';\nimport * as i0 from \"@angular/core\";\nexport class JwtInterceptor {\n  constructor() {\n    this._inProgressCount = 0;\n  }\n\n  intercept(request, next) {\n    if (this._inProgressCount <= 0) {\n      this.blockUI.start();\n    }\n\n    this._inProgressCount++; // add authorization header with jwt token if available\n\n    let userStore = localStorage.getItem('qltkcurrentUser');\n\n    if (userStore) {\n      let currentUser = JSON.parse(userStore);\n\n      if (currentUser && currentUser.access_token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: 'Bearer ' + currentUser.access_token\n          }\n        });\n      }\n    } // if (!request.headers.has('Content-Type')) {\n    //     request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n    // }\n\n\n    return next.handle(request).pipe(finalize(() => {\n      this._inProgressCount--;\n\n      if (this._inProgressCount === 0) {\n        this.blockUI.stop();\n      }\n    }));\n  }\n\n}\n\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n  return new (t || JwtInterceptor)();\n};\n\nJwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtInterceptor,\n  factory: JwtInterceptor.ɵfac,\n  providedIn: 'root'\n});\n\n__decorate([BlockUI()], JwtInterceptor.prototype, \"blockUI\", void 0);","map":null,"metadata":{},"sourceType":"module"}