{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchProduct(modelSearch) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/SearchProduct', modelSearch, httpOptions);\n      return tr;\n    }\n\n    searchProductError(modelSearch) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/SearchProductErrors', modelSearch, httpOptions);\n      return tr;\n    }\n\n    createProductSketches(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/AddProductSketches', model, httpOptions);\n      return tr;\n    }\n\n    getInfoSketches(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetProductSketchesInfo', model, httpOptions);\n      return tr;\n    }\n\n    importProductModule(file, productId) {\n      let formData = new FormData();\n      formData.append('File', file);\n      formData.append('ProductId', productId);\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/ImportProductModule', formData);\n      return tr;\n    }\n\n    deleteProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/DeleteProduct', model, httpOptions);\n      return tr;\n    }\n\n    deleteProductGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductGroups/DeleteProductGroup', model, httpOptions);\n      return tr;\n    }\n\n    uploadDesignDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/UploadDesignDocument', model, httpOptions);\n      return tr;\n    }\n\n    getListFolderProduct(productId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Product/GetListFolderProduct?productId=' + productId, httpOptions);\n      return tr;\n    }\n\n    getListFileProduct(folderId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Product/GetListFileProduct?folderId=' + folderId, httpOptions);\n      return tr;\n    }\n\n    getModulePrice(listModuleId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetModulePrice', listModuleId, httpOptions);\n      return tr;\n    }\n\n    synchronizedPractice(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/SynchronizedPractice', model, httpOptions);\n      return tr;\n    }\n\n    checkStatusProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/CheckStatusProduct', model, httpOptions);\n      return tr;\n    }\n\n    getListMatarial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetListMatarial', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    getContentProduct(productId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetContentProduct?productId=' + productId, httpOptions);\n      return tr;\n    }\n\n    updateContent(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/UpdateContent', model, httpOptions);\n      return tr;\n    }\n\n    importSyncSaleProduct(file, isConfirm) {\n      let formData = new FormData();\n      formData.append('File', file);\n      formData.append('isConfirm', isConfirm);\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/ImportFile', formData);\n      return tr;\n    }\n\n    syncSaleProduct(check, isConfirm, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/SyncSaleProduct?check=' + check + '&isConfirm=' + isConfirm, model, httpOptions);\n      return tr;\n    }\n\n    getModuleByProductId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetModuleByProduct', model, httpOptions);\n      return tr;\n    }\n\n    downAllDocumentProcess(model) {\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/DownAllDocumentProcess', model, httpOptions);\n      return tr;\n    }\n\n    updateNewPrice() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/UpdateNewPrice', httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}