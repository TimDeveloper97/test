{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/formats/link.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport { isObject } from \"../../../core/utils/type\";\nvar ExtLink = {};\n\nif (Quill) {\n  var Link = Quill.import(\"formats/link\");\n  ExtLink = class ExtLink extends Link {\n    static create(data) {\n      var HREF = data && data.href || data;\n      var node = super.create(HREF);\n\n      if (isObject(data)) {\n        if (data.text) {\n          node.innerText = data.text;\n        }\n\n        if (!data.target) {\n          node.removeAttribute(\"target\");\n        }\n      }\n\n      return node;\n    }\n\n    static formats(domNode) {\n      return {\n        href: domNode.getAttribute(\"href\"),\n        target: domNode.getAttribute(\"target\")\n      };\n    }\n\n    formats() {\n      var formats = super.formats();\n      var {\n        href: href,\n        target: target\n      } = ExtLink.formats(this.domNode);\n      formats.link = href;\n      formats.target = target;\n      return formats;\n    }\n\n    format(name, value) {\n      if (\"link\" === name && isObject(value)) {\n        if (value.text) {\n          this.domNode.innerText = value.text;\n        }\n\n        if (value.target) {\n          this.domNode.setAttribute(\"target\", \"_blank\");\n        } else {\n          this.domNode.removeAttribute(\"target\");\n        }\n\n        this.domNode.setAttribute(\"href\", value.href);\n      } else {\n        super.format(name, value);\n      }\n    }\n\n    static value(domNode) {\n      return {\n        href: domNode.getAttribute(\"href\"),\n        text: domNode.innerText,\n        target: !!domNode.getAttribute(\"target\")\n      };\n    }\n\n  };\n}\n\nexport default ExtLink;","map":null,"metadata":{},"sourceType":"module"}