{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ImportProfileService = /*#__PURE__*/(() => {\n  class ImportProfileService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchImportProfile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/Search', model, httpOptions);\n      return tr;\n    }\n\n    searchImportProfileFinish(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/SearchFinish', model, httpOptions);\n      return tr;\n    }\n\n    searchImportProfileKanban(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/SearchKanban', model, httpOptions);\n      return tr;\n    }\n\n    deleteImportProfile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/Delete', model, httpOptions);\n      return tr;\n    }\n\n    createImportProfile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/Create', model, httpOptions);\n      return tr;\n    }\n\n    updateImportProfile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/Update', model, httpOptions);\n      return tr;\n    }\n\n    getById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/GetById', model, httpOptions);\n      return tr;\n    }\n\n    getViewById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/GetViewById', model, httpOptions);\n      return tr;\n    }\n\n    nextStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/NextStep', model, httpOptions);\n      return tr;\n    }\n\n    backStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/BackStep', model, httpOptions);\n      return tr;\n    }\n\n    getListFile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/GetListFile', model, httpOptions);\n      return tr;\n    }\n\n    getImportProfileCode() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ImportProfile/GetImportProfileCode', httpOptions);\n      return tr;\n    }\n\n    downloadListFile(model) {\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/DownAllDocumentProcess', model, httpOptions);\n      return tr;\n    }\n\n    searchImportProfileProblemExist(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ReportProblemExist/SearchImportProfileProblemExist', model, httpOptions);\n      return tr;\n    }\n\n    createImportProblemExist(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ReportProblemExist/CreateImportProblemExist', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ImportProfileService.ɵfac = function ImportProfileService_Factory(t) {\n    return new (t || ImportProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ImportProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImportProfileService,\n    factory: ImportProfileService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImportProfileService;\n})();","map":null,"metadata":{},"sourceType":"module"}