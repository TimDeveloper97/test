{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/header/viewSwitcher.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatViews, getViewName, isOneView } from \"./utils\";\nvar VIEW_SWITCHER_CLASS = \"dx-scheduler-view-switcher\";\nvar VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS = \"dx-scheduler-view-switcher-dropdown-button\";\nvar VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS = \"dx-scheduler-view-switcher-dropdown-button-content\";\n\nvar getViewsAndSelectedView = header => {\n  var views = formatViews(header.views);\n  var selectedView = getViewName(header.currentView);\n  var isSelectedViewInViews = views.some(view => view.name === selectedView);\n  selectedView = isSelectedViewInViews ? selectedView : void 0;\n  return {\n    selectedView: selectedView,\n    views: views\n  };\n};\n\nexport var getViewSwitcher = (header, item) => {\n  var {\n    selectedView: selectedView,\n    views: views\n  } = getViewsAndSelectedView(header);\n  return _extends({\n    widget: \"dxButtonGroup\",\n    locateInMenu: \"auto\",\n    cssClass: VIEW_SWITCHER_CLASS,\n    options: {\n      items: views,\n      keyExpr: \"name\",\n      selectedItemKeys: [selectedView],\n      stylingMode: \"contained\",\n      onItemClick: e => {\n        var view = e.itemData.view;\n\n        header._updateCurrentView(view);\n      },\n      onContentReady: e => {\n        var viewSwitcher = e.component;\n\n        header._addEvent(\"currentView\", view => {\n          viewSwitcher.option(\"selectedItemKeys\", [getViewName(view)]);\n        });\n      }\n    }\n  }, item);\n};\nexport var getDropDownViewSwitcher = (header, item) => {\n  var {\n    selectedView: selectedView,\n    views: views\n  } = getViewsAndSelectedView(header);\n  var oneView = isOneView(views, selectedView);\n  return _extends({\n    widget: \"dxDropDownButton\",\n    locateInMenu: \"never\",\n    cssClass: VIEW_SWITCHER_CLASS,\n    options: {\n      items: views,\n      useSelectMode: true,\n      keyExpr: \"name\",\n      selectedItemKey: selectedView,\n      displayExpr: \"text\",\n      showArrowIcon: !oneView,\n      elementAttr: {\n        class: VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS\n      },\n      onItemClick: e => {\n        var view = e.itemData.view;\n\n        header._updateCurrentView(view);\n      },\n      onContentReady: e => {\n        var viewSwitcher = e.component;\n\n        header._addEvent(\"currentView\", view => {\n          var views = formatViews(header.views);\n\n          if (isOneView(views, view)) {\n            header.repaint();\n          }\n\n          viewSwitcher.option(\"selectedItemKey\", getViewName(view));\n        });\n      },\n      dropDownOptions: {\n        onShowing: e => {\n          if (oneView) {\n            e.cancel = true;\n          }\n        },\n        width: \"max-content\",\n        wrapperAttr: {\n          class: VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS\n        }\n      }\n    }\n  }, item);\n};","map":null,"metadata":{},"sourceType":"module"}