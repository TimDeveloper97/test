{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst padding = \"000000\";\nexport let NtscurrencyPipe = /*#__PURE__*/(() => {\n  class NtscurrencyPipe {\n    constructor() {\n      this.prefix = '';\n      this.suffix = '';\n      this.decimal_separator = '.';\n      this.thousands_separator = ',';\n    }\n\n    transform(value, fractionSize = 0) {\n      if (parseFloat(value) % 1 != 0) {\n        fractionSize = 2;\n      }\n\n      let [integer, fraction = \"\"] = (parseFloat(value).toString() || \"\").toString().split(\".\");\n      fraction = fractionSize > 0 ? this.decimal_separator + (fraction + padding).substring(0, fractionSize) : \"\";\n      integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousands_separator);\n\n      if (isNaN(parseFloat(integer))) {\n        integer = \"0\";\n      }\n\n      return this.prefix + integer + fraction + this.suffix;\n    }\n\n    parse(value, fractionSize = 0) {\n      let [integer, fraction = \"\"] = (value || \"\").replace(this.prefix, \"\").replace(this.suffix, \"\").split(this.decimal_separator);\n      integer = integer.replace(new RegExp(this.thousands_separator, \"g\"), \"\");\n      fraction = parseInt(fraction, 10) > 0 && fractionSize > 0 ? this.decimal_separator + (fraction + padding).substring(0, fractionSize) : \"\";\n      return integer + fraction;\n    }\n\n    setOptions(options) {\n      this.prefix = options.prefix;\n      this.suffix = options.suffix;\n      this.decimal_separator = options.decimal;\n      this.thousands_separator = options.thousands;\n    }\n\n  }\n\n  NtscurrencyPipe.ɵfac = function NtscurrencyPipe_Factory(t) {\n    return new (t || NtscurrencyPipe)();\n  };\n\n  NtscurrencyPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"ntscurrency\",\n    type: NtscurrencyPipe,\n    pure: true\n  });\n  return NtscurrencyPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}