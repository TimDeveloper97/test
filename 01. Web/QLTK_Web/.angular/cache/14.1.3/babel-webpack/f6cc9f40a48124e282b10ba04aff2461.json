{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let RawMaterialService = /*#__PURE__*/(() => {\n  class RawMaterialService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchRawMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/SearchRawMaterial', model, httpOptions);\n      return tr;\n    }\n\n    deleteRawMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/DeleteRawMaterial', model, httpOptions);\n      return tr;\n    }\n\n    createRawMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/AddRawMaterial', model, httpOptions);\n      return tr;\n    }\n\n    getRawMaterialInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/GetRawMaterialInfo', model, httpOptions);\n      return tr;\n    }\n\n    updateRawMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/UpdateMaterial', model, httpOptions);\n      return tr;\n    }\n\n    getCbbRawMaterial() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ComboboxCommon/GetListRawMaterial', httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'QLTKM/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    getListRawMaterial() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'RawMaterial/GetListRawMaterial', httpOptions);\n      return tr;\n    }\n\n  }\n\n  RawMaterialService.ɵfac = function RawMaterialService_Factory(t) {\n    return new (t || RawMaterialService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  RawMaterialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RawMaterialService,\n    factory: RawMaterialService.ɵfac,\n    providedIn: 'root'\n  });\n  return RawMaterialService;\n})();","map":null,"metadata":{},"sourceType":"module"}