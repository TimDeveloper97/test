{"ast":null,"code":"/**\r\n * DevExtreme (esm/file_management/custom_provider.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ensureDefined, noop } from \"../core/utils/common\";\nimport { isFunction } from \"../core/utils/type\";\nimport { compileGetter } from \"../core/utils/data\";\nimport FileSystemProviderBase from \"./provider_base\";\n\nclass CustomFileSystemProvider extends FileSystemProviderBase {\n  constructor(options) {\n    options = ensureDefined(options, {});\n    super(options);\n    this._hasSubDirsGetter = compileGetter(options.hasSubDirectoriesExpr || \"hasSubDirectories\");\n    this._getItemsFunction = this._ensureFunction(options.getItems, () => []);\n    this._renameItemFunction = this._ensureFunction(options.renameItem);\n    this._createDirectoryFunction = this._ensureFunction(options.createDirectory);\n    this._deleteItemFunction = this._ensureFunction(options.deleteItem);\n    this._moveItemFunction = this._ensureFunction(options.moveItem);\n    this._copyItemFunction = this._ensureFunction(options.copyItem);\n    this._uploadFileChunkFunction = this._ensureFunction(options.uploadFileChunk);\n    this._abortFileUploadFunction = this._ensureFunction(options.abortFileUpload);\n    this._downloadItemsFunction = this._ensureFunction(options.downloadItems);\n    this._getItemsContentFunction = this._ensureFunction(options.getItemsContent);\n  }\n\n  getItems(parentDir) {\n    var pathInfo = parentDir.getFullPathInfo();\n    return this._executeActionAsDeferred(() => this._getItemsFunction(parentDir), true).then(dataItems => this._convertDataObjectsToFileItems(dataItems, pathInfo));\n  }\n\n  renameItem(item, name) {\n    return this._executeActionAsDeferred(() => this._renameItemFunction(item, name));\n  }\n\n  createDirectory(parentDir, name) {\n    return this._executeActionAsDeferred(() => this._createDirectoryFunction(parentDir, name));\n  }\n\n  deleteItems(items) {\n    return items.map(item => this._executeActionAsDeferred(() => this._deleteItemFunction(item)));\n  }\n\n  moveItems(items, destinationDirectory) {\n    return items.map(item => this._executeActionAsDeferred(() => this._moveItemFunction(item, destinationDirectory)));\n  }\n\n  copyItems(items, destinationFolder) {\n    return items.map(item => this._executeActionAsDeferred(() => this._copyItemFunction(item, destinationFolder)));\n  }\n\n  uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\n    return this._executeActionAsDeferred(() => this._uploadFileChunkFunction(fileData, chunksInfo, destinationDirectory));\n  }\n\n  abortFileUpload(fileData, chunksInfo, destinationDirectory) {\n    return this._executeActionAsDeferred(() => this._abortFileUploadFunction(fileData, chunksInfo, destinationDirectory));\n  }\n\n  downloadItems(items) {\n    return this._executeActionAsDeferred(() => this._downloadItemsFunction(items));\n  }\n\n  getItemsContent(items) {\n    return this._executeActionAsDeferred(() => this._getItemsContentFunction(items));\n  }\n\n  _hasSubDirs(dataObj) {\n    var hasSubDirs = this._hasSubDirsGetter(dataObj);\n\n    return \"boolean\" === typeof hasSubDirs ? hasSubDirs : true;\n  }\n\n  _getKeyExpr(options) {\n    return options.keyExpr || \"key\";\n  }\n\n  _ensureFunction(functionObject, defaultFunction) {\n    defaultFunction = defaultFunction || noop;\n    return isFunction(functionObject) ? functionObject : defaultFunction;\n  }\n\n}\n\nexport default CustomFileSystemProvider;","map":null,"metadata":{},"sourceType":"module"}