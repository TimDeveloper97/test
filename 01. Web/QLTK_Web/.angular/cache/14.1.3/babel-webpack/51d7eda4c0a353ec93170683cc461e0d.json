{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport { calculateCellIndex } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { calculateStartViewDate } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\nimport { setOptionHour } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport dateUtils from \"../../../../core/utils/date\";\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\nexport class ViewDataGeneratorTimelineMonth extends ViewDataGenerator {\n  _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\n    return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount);\n  }\n\n  calculateEndDate(startDate, interval, endDayHour) {\n    return setOptionHour(startDate, endDayHour);\n  }\n\n  getInterval() {\n    return DAY_IN_MILLISECONDS;\n  }\n\n  _calculateStartViewDate(options) {\n    return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount);\n  }\n\n  getCellCount(options) {\n    var {\n      intervalCount: intervalCount,\n      currentDate: currentDate\n    } = options;\n    var cellCount = 0;\n\n    for (var i = 1; i <= intervalCount; i++) {\n      cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate();\n    }\n\n    return cellCount;\n  }\n\n  setHiddenInterval() {\n    this.hiddenInterval = 0;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}