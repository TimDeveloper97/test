{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProjectPhaseService = /*#__PURE__*/(() => {\n  class ProjectPhaseService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchProjectPhase(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectPhase/SearchProjectPhase', model, httpOptions);\n      return tr;\n    }\n\n    deleteProjectPhase(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectPhase/DeleteProjectPhase', model, httpOptions);\n      return tr;\n    }\n\n    createProjectPhase(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectPhase/AddProjectPhase', model, httpOptions);\n      return tr;\n    }\n\n    getProjectPhase(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectPhase/GetProjectPhase', model, httpOptions);\n      return tr;\n    }\n\n    updateProjectPhase(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectPhase/UpdateProjectPhase', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProjectPhaseService.ɵfac = function ProjectPhaseService_Factory(t) {\n    return new (t || ProjectPhaseService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProjectPhaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectPhaseService,\n    factory: ProjectPhaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectPhaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}