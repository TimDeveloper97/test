{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { BlockUI } from 'ng-block-ui';\nimport { BroadcastEventListener } from 'src/app/signalr/broadcast.event.listener';\nimport { DxTreeListComponent } from 'devextreme-angular';\nimport { HistoryVersionComponent } from 'src/app/shared/component/history-version/history-version.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared\";\nimport * as i2 from \"src/app/signalR/signal-r.service\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"../services/product.service\";\nimport * as i5 from \"src/app/shared/services/history-version.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"devextreme-angular/ui/nested\";\nimport * as i8 from \"devextreme-angular/ui/tree-list\";\nexport class ProductChooseFolderUploadModalComponent {\n  constructor(config, signalRService, activeModal, messageService, productService, modalService, constant, serviceHistory) {\n    this.config = config;\n    this.signalRService = signalRService;\n    this.activeModal = activeModal;\n    this.messageService = messageService;\n    this.productService = productService;\n    this.modalService = modalService;\n    this.constant = constant;\n    this.serviceHistory = serviceHistory;\n    this.onSendListFolder = new BroadcastEventListener('sendListFolder');\n    this.onUploadFolderProduct = new BroadcastEventListener('uploadFolderProduct');\n    this.checkSelect = false;\n    this.ListFolder = [];\n    this.ListFolderId = [];\n    this.selectedId = '';\n    this.listCodeRule = [];\n    this.productModel = {\n      ProductId: '',\n      FolderId: '',\n      Path: '',\n      ApiUrl: '',\n      Token: '',\n      DesignType: 0\n    };\n    this.folderModel = {\n      Id: '',\n      Path: '',\n      SelectPath: '',\n      ListFolder: []\n    };\n    this.uploadModel = {\n      ModuleId: '',\n      ListFile: [],\n      DesignType: 0,\n      LstError: [],\n      Status: false\n    };\n    this.searchCodeRuleModel = {\n      Code: ''\n    };\n  }\n\n  ngOnInit() {\n    this.getFolder();\n    this.signalRService.listen(this.onSendListFolder, false);\n    this.notiSub = this.onSendListFolder.subscribe(data => {\n      this.blockUI.stop();\n\n      if (data) {\n        this.folderModel.ListFolder = data.ListForder;\n\n        if (this.checkSelect) {\n          this.folderModel.SelectPath = data.Path;\n          this.selectPathForder();\n        }\n      }\n    });\n    this.signalRService.listen(this.onUploadFolderProduct, true);\n    this.uploadProductSub = this.onUploadFolderProduct.subscribe(data => {\n      this.blockUI.stop();\n\n      if (data) {\n        if (data.LstError && data.LstError.length > 0) {\n          var errorMessage = data.LstError.join(\"<br/>\");\n          this.messageService.showMessage(errorMessage);\n        } else {\n          data.ProductId = this.productId;\n          data.DesignType = this.productModel.DesignType;\n          this.productService.uploadDesignDocument(data).subscribe(data => {\n            this.messageService.showSuccess('Upload tài liệu thiết kế thành công!');\n          }, error => {\n            this.messageService.showError(error);\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.notiSub.unsubscribe();\n    this.uploadProductSub.unsubscribe();\n    this.signalRService.stopListening(this.onSendListFolder);\n    this.signalRService.stopListening(this.onUploadFolderProduct);\n  }\n\n  getFolder() {\n    this.signalRService.invoke('GetFolder', this.folderModel).subscribe(data => {\n      if (data) {\n        this.blockUI.start();\n      } else {\n        this.messageService.showMessage(\"Không kết nối được service\");\n      }\n    });\n  }\n\n  getLink(type) {\n    var model = {\n      ProductId: this.productId,\n      Token: '',\n      DesignType: type,\n      ApiUrl: this.config.ServerApi\n    };\n    this.checkSelect = true;\n    let currentUser = JSON.parse(localStorage.getItem('qltkcurrentUser'));\n\n    if (currentUser && currentUser.access_token) {\n      model.Token = currentUser.access_token;\n    }\n\n    this.signalRService.invoke('GetSelectFolderProduct', model).subscribe(data => {\n      if (data) {\n        this.blockUI.start();\n      } else {\n        this.messageService.showMessage(\"Không kết nối được service\");\n      }\n    });\n  }\n\n  selectPathForder() {\n    var data = this.folderModel.ListFolder.filter(i => i.Id == this.folderModel.SelectPath);\n\n    if (data.length > 0) {\n      this.selectedId = data[0].Id;\n      this.productModel.Path = data[0].Id;\n      this.folderModel.Path = data[0].Id;\n      this.treeView.selectedRowKeys = [this.selectedId];\n    }\n  }\n\n  onSelectionChanged(e) {\n    this.selectedId = e.selectedRowKeys[0];\n    this.productModel.Path = e.selectedRowKeys[0];\n    this.folderModel.Path = e.selectedRowKeys[0];\n  }\n\n  onRowExpanding(e) {\n    this.checkSelect = false;\n    this.folderModel.Id = e.key;\n    this.signalRService.invoke('GetFolder', this.folderModel).subscribe(data => {\n      if (data) {\n        this.blockUI.start();\n      } else {\n        this.messageService.showMessage(\"Không kết nối được service\");\n      }\n    }); // this.notiSub = this.onSendListFolder.subscribe((data: any) => {\n    //   this.folderModel.ListFolder = data;\n    // });\n  }\n\n  closeModal() {\n    this.activeModal.close(true);\n  }\n\n  chooseFolder() {\n    this.productModel.ProductId = this.productId;\n    this.productModel.ApiUrl = this.config.ServerApi;\n    let currentUser = JSON.parse(localStorage.getItem('qltkcurrentUser'));\n\n    if (currentUser && currentUser.access_token) {\n      this.productModel.Token = currentUser.access_token;\n    }\n\n    if (this.productModel.DesignType) {\n      this.signalRService.invoke('UploadProductDesignDocument', this.productModel).subscribe(data => {\n        if (data) {\n          this.blockUI.start();\n        } else {\n          this.messageService.showMessage(\"Không kết nối được service\");\n        }\n      });\n    } else {\n      this.messageService.showMessage(\"Chưa chọn loại thiết kế. Vui lòng kiểm tra lại!\");\n    }\n  }\n\n  showConfirmUploadVersion() {\n    this.messageService.showConfirmFile(\"Bạn có muốn thay đổi version không?\").then(data => __awaiter(this, void 0, void 0, function* () {\n      if (data) {\n        yield this.showEditContent();\n      } else {\n        this.chooseFolder();\n      }\n    }));\n  }\n\n  showEditContent() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let activeModal = this.modalService.open(HistoryVersionComponent, {\n        container: 'body',\n        windowClass: 'show-history-version-modal',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.id = this.productId;\n      activeModal.componentInstance.type = this.constant.HistoryVersion_Version_Product;\n      activeModal.result.then(result => __awaiter(this, void 0, void 0, function* () {\n        if (result) {\n          yield this.chooseFolder();\n          yield this.updateVersion(result);\n        }\n      }), reason => {});\n    });\n  }\n\n  updateVersion(model) {\n    this.serviceHistory.updateVersion(model).subscribe(() => {\n      this.messageService.showSuccess('Cập nhật version thành công!');\n    }, error => {\n      this.messageService.showError(error);\n    });\n  }\n\n}\n\nProductChooseFolderUploadModalComponent.ɵfac = function ProductChooseFolderUploadModalComponent_Factory(t) {\n  return new (t || ProductChooseFolderUploadModalComponent)(i0.ɵɵdirectiveInject(i1.Configuration), i0.ɵɵdirectiveInject(i2.SignalRService), i0.ɵɵdirectiveInject(i3.NgbActiveModal), i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i4.ProductService), i0.ɵɵdirectiveInject(i3.NgbModal), i0.ɵɵdirectiveInject(i1.Constants), i0.ɵɵdirectiveInject(i5.HistoryVersionService));\n};\n\nProductChooseFolderUploadModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductChooseFolderUploadModalComponent,\n  selectors: [[\"app-product-choose-folder-upload-modal\"]],\n  viewQuery: function ProductChooseFolderUploadModalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DxTreeListComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeView = _t.first);\n    }\n  },\n  decls: 46,\n  vars: 10,\n  consts: [[1, \"modal-header\"], [1, \"modal-title\", \"text-uppercase\", \"text-danger\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"padding-15\", 2, \"height\", \"600px\"], [\"name\", \"form\", \"novalidate\", \"\", 1, \"tab-form-demo\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-md-12\", \"col-sm-12\", \"col-lg-12\"], [1, \"form-group\"], [1, \"form-label\"], [1, \"controls\"], [\"type\", \"text\", \"name\", \"Pathchoosefolderupload\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"Path\", \"ngModel\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\", \"radio\"], [1, \"radio\"], [\"type\", \"radio\", \"name\", \"FileTypechoosefolderupload\", 3, \"value\", \"ngModel\", \"ngModelChange\", \"click\"], [1, \"checkround\"], [\"type\", \"radio\", \"name\", \"FileTypechoosefolderupload\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"id\", \"folder\", \"keyExpr\", \"Id\", \"parentIdExpr\", \"ParentId\", \"noDataText\", \" \", \"height\", \"450\", 3, \"dataSource\", \"showRowLines\", \"showBorders\", \"columnAutoWidth\", \"expandedRowKeys\", \"onSelectionChanged\", \"onRowExpanding\"], [\"mode\", \"single\"], [\"dataField\", \"Name\", \"caption\", \"Danh s\\u00E1ch th\\u01B0 m\\u1EE5c\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"fa\", \"fa-save\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa\", \"fa-power-off\"]],\n  template: function ProductChooseFolderUploadModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Upload t\\u00E0i li\\u1EC7u thi\\u1EBFt k\\u1EBF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ProductChooseFolderUploadModalComponent_Template_button_click_3_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵelementStart(4, \"span\", 3);\n      i0.ɵɵtext(5, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5, 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"\\u0110\\u01B0\\u1EDDng d\\u1EABn\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductChooseFolderUploadModalComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.folderModel.Path = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 8)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Lo\\u1EA1i thi\\u1EBFt k\\u1EBF\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Thi\\u1EBFt k\\u1EBF c\\u01A1 kh\\u00ED \");\n      i0.ɵɵelementStart(24, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductChooseFolderUploadModalComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.productModel.DesignType = $event;\n      })(\"click\", function ProductChooseFolderUploadModalComponent_Template_input_click_24_listener() {\n        return ctx.getLink(1);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"span\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"label\", 15);\n      i0.ɵɵtext(27, \"Thi\\u1EBFt k\\u1EBF \\u0111i\\u1EC7n \");\n      i0.ɵɵelementStart(28, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductChooseFolderUploadModalComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.productModel.DesignType = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"span\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 7)(31, \"div\", 8)(32, \"dx-tree-list\", 19);\n      i0.ɵɵlistener(\"onSelectionChanged\", function ProductChooseFolderUploadModalComponent_Template_dx_tree_list_onSelectionChanged_32_listener($event) {\n        return ctx.onSelectionChanged($event);\n      })(\"onRowExpanding\", function ProductChooseFolderUploadModalComponent_Template_dx_tree_list_onRowExpanding_32_listener($event) {\n        return ctx.onRowExpanding($event);\n      });\n      i0.ɵɵelement(33, \"dxo-selection\", 20)(34, \"dxi-column\", 21);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(35, \"div\", 22)(36, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function ProductChooseFolderUploadModalComponent_Template_button_click_36_listener() {\n        return ctx.showConfirmUploadVersion();\n      });\n      i0.ɵɵelement(37, \"i\", 24);\n      i0.ɵɵtext(38, \"\\u00A0 \");\n      i0.ɵɵelementStart(39, \"span\");\n      i0.ɵɵtext(40, \"Upload t\\u00E0i li\\u1EC7u\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function ProductChooseFolderUploadModalComponent_Template_button_click_41_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵelement(42, \"i\", 26);\n      i0.ɵɵtext(43, \" \\u00A0 \");\n      i0.ɵɵelementStart(44, \"span\");\n      i0.ɵɵtext(45, \" \\u0110\\u00F3ng \");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.folderModel.Path);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", 1)(\"ngModel\", ctx.productModel.DesignType);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", 2)(\"ngModel\", ctx.productModel.DesignType);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dataSource\", ctx.folderModel.ListFolder)(\"showRowLines\", true)(\"showBorders\", true)(\"columnAutoWidth\", true)(\"expandedRowKeys\", ctx.ListFolderId);\n    }\n  },\n  dependencies: [i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.RadioControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm, i7.DxiColumnComponent, i7.DxoSelectionComponent, i8.DxTreeListComponent]\n});\n\n__decorate([BlockUI()], ProductChooseFolderUploadModalComponent.prototype, \"blockUI\", void 0);","map":null,"metadata":{},"sourceType":"module"}