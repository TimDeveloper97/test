{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\nimport { createVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { format } from \"../../../core/utils/string\";\nimport messageLocalization from \"../../../localization/message\";\nimport { InternalPagerProps } from \"./common/pager_props\";\nexport var PAGER_INFO_CLASS = \"dx-info\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      rootElementRef: rootElementRef\n    },\n    text: text\n  } = _ref;\n  return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef);\n};\nexport var InfoTextProps = {};\nvar InfoTextPropsType = {\n  get pageIndex() {\n    return InternalPagerProps.pageIndex;\n  },\n\n  get pageCount() {\n    return InternalPagerProps.pageCount;\n  },\n\n  get totalCount() {\n    return InternalPagerProps.totalCount;\n  }\n\n};\nexport let InfoText = /*#__PURE__*/(() => {\n  class InfoText extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    get infoText() {\n      var _this$props$infoText;\n\n      return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")();\n    }\n\n    get text() {\n      var {\n        pageCount: pageCount,\n        pageIndex: pageIndex,\n        totalCount: totalCount\n      } = this.props;\n      return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString());\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        infoText: this.infoText,\n        text: this.text,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  InfoText.defaultProps = InfoTextPropsType;\n  return InfoText;\n})();","map":null,"metadata":{},"sourceType":"module"}