{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.name_editor.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport TextBox from \"../text_box\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR = \"dx-filemanager-dialog-name-editor\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP = \"dx-filemanager-dialog-name-editor-popup\";\n\nclass FileManagerNameEditorDialog extends FileManagerDialogBase {\n  show(name) {\n    name = name || \"\";\n\n    if (this._nameTextBox) {\n      this._nameTextBox.option(\"value\", name);\n    } else {\n      this._initialNameValue = name;\n    }\n\n    super.show();\n  }\n\n  _onPopupShown() {\n    if (!this._nameTextBox) {\n      return;\n    }\n\n    var $textBoxInput = this._nameTextBox._input();\n\n    $textBoxInput.length && $textBoxInput[0].select();\n\n    this._nameTextBox.focus();\n  }\n\n  _getDialogOptions() {\n    return extend(super._getDialogOptions(), {\n      title: this.option(\"title\"),\n      buttonText: this.option(\"buttonText\"),\n      contentCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR,\n      popupCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP\n    });\n  }\n\n  _createContentTemplate(element) {\n    super._createContentTemplate(element);\n\n    this._nameTextBox = this._createComponent($(\"<div>\"), TextBox, {\n      value: this._initialNameValue,\n      onEnterKey: () => this._hasCompositionJustEnded && this._applyDialogChanges(),\n      onKeyDown: e => this._checkCompositionEnded(e)\n    });\n\n    this._$contentElement.append(this._nameTextBox.$element());\n  }\n\n  _checkCompositionEnded(_ref) {\n    var {\n      event: event\n    } = _ref;\n    this._hasCompositionJustEnded = 229 !== event.which;\n  }\n\n  _getDialogResult() {\n    var nameValue = this._nameTextBox.option(\"value\");\n\n    return nameValue ? {\n      name: nameValue\n    } : null;\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      title: \"\",\n      buttonText: \"\"\n    });\n  }\n\n}\n\nexport default FileManagerNameEditorDialog;","map":null,"metadata":{},"sourceType":"module"}