{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/layout.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"addVerticalSizesClassToRows\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"tableRef\", \"topVirtualRowHeight\", \"viewData\", \"width\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/runtime/inferno\";\nimport { Table } from \"../table\";\nimport { DateTableBody } from \"./table_body\";\nimport { LayoutProps } from \"../layout_props\";\nimport { DateTableCellBase } from \"./cell\";\nexport var viewFunction = _ref => {\n  var {\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    classes: classes,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    props: {\n      addVerticalSizesClassToRows: addVerticalSizesClassToRows,\n      cellTemplate: cellTemplate,\n      dataCellTemplate: dataCellTemplate,\n      groupOrientation: groupOrientation,\n      tableRef: tableRef,\n      viewData: viewData,\n      width: width\n    },\n    restAttributes: restAttributes,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    topVirtualRowHeight: topVirtualRowHeight,\n    virtualCellsCount: virtualCellsCount\n  } = _ref;\n  return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\n    tableRef: tableRef,\n    topVirtualRowHeight: topVirtualRowHeight,\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    leftVirtualCellCount: viewData.leftVirtualCellCount,\n    rightVirtualCellCount: viewData.rightVirtualCellCount,\n    virtualCellsCount: virtualCellsCount,\n    className: classes,\n    width: width,\n    children: createComponentVNode(2, DateTableBody, {\n      cellTemplate: cellTemplate,\n      viewData: viewData,\n      dataCellTemplate: dataCellTemplate,\n      leftVirtualCellWidth: leftVirtualCellWidth,\n      rightVirtualCellWidth: rightVirtualCellWidth,\n      groupOrientation: groupOrientation,\n      addVerticalSizesClassToRows: addVerticalSizesClassToRows\n    })\n  })));\n};\nexport var DateTableLayoutProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(LayoutProps), Object.getOwnPropertyDescriptors({\n  cellTemplate: DateTableCellBase\n})));\nimport { createReRenderEffect } from \"@devextreme/runtime/inferno\";\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let DateTableLayoutBase = /*#__PURE__*/(() => {\n  class DateTableLayoutBase extends InfernoWrapperComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    createEffects() {\n      return [createReRenderEffect()];\n    }\n\n    get classes() {\n      var {\n        addDateTableClass: addDateTableClass\n      } = this.props;\n      return addDateTableClass ? \"dx-scheduler-date-table\" : void 0;\n    }\n\n    get topVirtualRowHeight() {\n      var _this$props$viewData$;\n\n      return null !== (_this$props$viewData$ = this.props.viewData.topVirtualRowHeight) && void 0 !== _this$props$viewData$ ? _this$props$viewData$ : 0;\n    }\n\n    get bottomVirtualRowHeight() {\n      var _this$props$viewData$2;\n\n      return null !== (_this$props$viewData$2 = this.props.viewData.bottomVirtualRowHeight) && void 0 !== _this$props$viewData$2 ? _this$props$viewData$2 : 0;\n    }\n\n    get leftVirtualCellWidth() {\n      var _this$props$viewData$3;\n\n      return null !== (_this$props$viewData$3 = this.props.viewData.leftVirtualCellWidth) && void 0 !== _this$props$viewData$3 ? _this$props$viewData$3 : 0;\n    }\n\n    get rightVirtualCellWidth() {\n      var _this$props$viewData$4;\n\n      return null !== (_this$props$viewData$4 = this.props.viewData.rightVirtualCellWidth) && void 0 !== _this$props$viewData$4 ? _this$props$viewData$4 : 0;\n    }\n\n    get virtualCellsCount() {\n      return this.props.viewData.groupedData[0].dateTable[0].cells.length;\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          cellTemplate: getTemplate(props.cellTemplate),\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        classes: this.classes,\n        topVirtualRowHeight: this.topVirtualRowHeight,\n        bottomVirtualRowHeight: this.bottomVirtualRowHeight,\n        leftVirtualCellWidth: this.leftVirtualCellWidth,\n        rightVirtualCellWidth: this.rightVirtualCellWidth,\n        virtualCellsCount: this.virtualCellsCount,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  DateTableLayoutBase.defaultProps = DateTableLayoutProps;\n  return DateTableLayoutBase;\n})();","map":null,"metadata":{},"sourceType":"module"}