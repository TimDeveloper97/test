{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/collection/ui.collection_widget.edit.strategy.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Class from \"../../core/class\";\nimport { equalByValue } from \"../../core/utils/common\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { isRenderer } from \"../../core/utils/type\";\nvar abstract = Class.abstract;\nvar EditStrategy = Class.inherit({\n  ctor: function (collectionWidget) {\n    this._collectionWidget = collectionWidget;\n  },\n  getIndexByItemData: abstract,\n  getItemDataByIndex: abstract,\n  getKeysByItems: abstract,\n  getItemsByKeys: abstract,\n  itemsGetter: abstract,\n  getKeyByIndex: function (index) {\n    var resultIndex = this._denormalizeItemIndex(index);\n\n    return this.getKeysByItems([this.getItemDataByIndex(resultIndex)])[0];\n  },\n  _equalKeys: function (key1, key2) {\n    if (this._collectionWidget._isKeySpecified()) {\n      return equalByValue(key1, key2);\n    } else {\n      return key1 === key2;\n    }\n  },\n  beginCache: function () {\n    this._cache = {};\n  },\n  endCache: function () {\n    this._cache = null;\n  },\n  getIndexByKey: abstract,\n  getNormalizedIndex: function (value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return value;\n    }\n\n    if (this._isItemIndex(value)) {\n      return this._normalizeItemIndex(value);\n    }\n\n    if (this._isNode(value)) {\n      return this._getNormalizedItemIndex(value);\n    }\n\n    return this._normalizeItemIndex(this.getIndexByItemData(value));\n  },\n  getIndex: function (value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return this._denormalizeItemIndex(value);\n    }\n\n    if (this._isItemIndex(value)) {\n      return value;\n    }\n\n    if (this._isNode(value)) {\n      return this._denormalizeItemIndex(this._getNormalizedItemIndex(value));\n    }\n\n    return this.getIndexByItemData(value);\n  },\n  getItemElement: function (value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return this._getItemByNormalizedIndex(value);\n    }\n\n    if (this._isItemIndex(value)) {\n      return this._getItemByNormalizedIndex(this._normalizeItemIndex(value));\n    }\n\n    if (this._isNode(value)) {\n      return $(value);\n    }\n\n    var normalizedItemIndex = this._normalizeItemIndex(this.getIndexByItemData(value));\n\n    return this._getItemByNormalizedIndex(normalizedItemIndex);\n  },\n  _isNode: el => domAdapter.isNode(el && isRenderer(el) ? el.get(0) : el),\n  deleteItemAtIndex: abstract,\n  itemPlacementFunc: function (movingIndex, destinationIndex) {\n    return this._itemsFromSameParent(movingIndex, destinationIndex) && movingIndex < destinationIndex ? \"after\" : \"before\";\n  },\n  moveItemAtIndexToIndex: abstract,\n  _isNormalizedItemIndex: function (index) {\n    return \"number\" === typeof index && Math.round(index) === index;\n  },\n  _isItemIndex: abstract,\n  _getNormalizedItemIndex: abstract,\n  _normalizeItemIndex: abstract,\n  _denormalizeItemIndex: abstract,\n  _getItemByNormalizedIndex: abstract,\n  _itemsFromSameParent: abstract\n});\nexport default EditStrategy;","map":null,"metadata":{},"sourceType":"module"}