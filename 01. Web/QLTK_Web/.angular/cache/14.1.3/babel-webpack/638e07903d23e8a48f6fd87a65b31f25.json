{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/common/config_provider.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"rtlEnabled\"];\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nexport var viewFunction = viewModel => viewModel.props.children;\nexport var ConfigProviderProps = {};\nexport let ConfigProvider = /*#__PURE__*/(() => {\n  class ConfigProvider extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n      this.__getterCache = {};\n    }\n\n    getChildContext() {\n      return _extends({}, this.context, {\n        ConfigContext: this.config\n      });\n    }\n\n    get config() {\n      if (void 0 !== this.__getterCache.config) {\n        return this.__getterCache.config;\n      }\n\n      return this.__getterCache.config = (() => ({\n        rtlEnabled: this.props.rtlEnabled\n      }))();\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    componentWillUpdate(nextProps, nextState, context) {\n      if (this.props.rtlEnabled !== nextProps.rtlEnabled) {\n        this.__getterCache.config = void 0;\n      }\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        config: this.config,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  ConfigProvider.defaultProps = ConfigProviderProps;\n  return ConfigProvider;\n})();","map":null,"metadata":{},"sourceType":"module"}