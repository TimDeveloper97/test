{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { DxTreeListComponent } from 'devextreme-angular';\nimport { PerfectScrollbarComponent } from 'ngx-perfect-scrollbar';\nimport { MessageService, Constants, AppSetting, ComboboxService, DateUtils, Configuration, PermissionService } from 'src/app/shared';\nimport * as moment from 'moment';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChooseStageModalComponent } from '../choose-stage-modal/choose-stage-modal.component';\nimport { WorkingReportComponent } from '../working-report/working-report.component';\nimport { OverallProjectComponent } from '../overall-project/overall-project.component';\nimport { DashboardPlanComponent } from '../dashboard-plan/dashboard-plan.component';\nimport { PopupSearchComponent } from '../popup-search/popup-search.component';\nimport { RiskProblemProjectComponent } from '../../risk-problem-project/risk-problem-project.component';\nimport { PlanAdjustmentComponent } from '../plan-adjustment/plan-adjustment.component';\nimport { PlanProjectCreateComponent } from '../plan-project-create/plan-project-create.component';\nimport { PlanEmployeeComponent } from '../plan-employee/plan-employee.component';\nimport { PlanCopyComponent } from '../plan-copy/plan-copy.component';\nimport { PlanHistoryComponent } from '../plan-history/plan-history.component';\nimport { ReportPlanByDateComponent } from '../report-plan-by-date/report-plan-by-date.component';\nimport { PlanCreateComponent } from '../plan-create/plan-create.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/schedule-project.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"../../service/plan.service\";\nconst _c0 = [\"split\"];\nconst _c1 = [\"area1\"];\nconst _c2 = [\"area2\"];\nconst _c3 = [\"scrollScheduleDate\"];\nconst _c4 = [\"scrollScheduleDateHeader\"];\nconst _c5 = [\"scrollScheduleDateContent\"];\nconst _c6 = [\"scrollTree\"];\n\nfunction ScheduleProjectComponent_ng_container_3_div_15_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 62);\n    i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_ng_container_3_div_15_ng_container_1_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.chooseStage(item_r13.data, item_r13.data.Id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\u00A0 \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 63);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"font-weight-bold\": a0,\n    \"font-weight-bold-sp\": a1\n  };\n};\n\nfunction ScheduleProjectComponent_ng_container_3_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleProjectComponent_ng_container_3_div_15_ng_container_1_Template, 3, 0, \"ng-container\", 3);\n    i0.ɵɵtemplate(2, ScheduleProjectComponent_ng_container_3_div_15_ng_container_2_Template, 2, 0, \"ng-container\", 3);\n    i0.ɵɵelementStart(3, \"span\", 61);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r13.data.DataType && !item_r13.data.PlanId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r13.data.Description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", item_r13.data.NameView);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c7, item_r13.data.DataType == 0, item_r13.data.DataType != 0 && !item_r13.data.PlanId));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\u00A0\", item_r13.data.NameView, \"\");\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_18_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 65);\n    i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_ng_container_3_div_18_ng_container_1_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const items_r19 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.showCreateUpdatePlan(items_r19.data, 1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\u00A0 \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_18_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\")(2, \"input\", 66);\n    i0.ɵɵlistener(\"ngModelChange\", function ScheduleProjectComponent_ng_container_3_div_18_ng_container_2_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const items_r19 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(items_r19.data.Checked = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(3, \"\\u00A0 \");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", items_r19.data.Checked);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleProjectComponent_ng_container_3_div_18_ng_container_1_Template, 3, 0, \"ng-container\", 3);\n    i0.ɵɵtemplate(2, ScheduleProjectComponent_ng_container_3_div_18_ng_container_2_Template, 4, 1, \"ng-container\", 3);\n    i0.ɵɵelementStart(3, \"span\", 64);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const items_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", items_r19.data.StageId && !items_r19.data.IsPlan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", items_r19.data.IsPlan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", items_r19.data.StageName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(items_r19.data.StageName);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_20_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 67);\n    i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_ng_container_3_div_20_ng_container_1_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const items_r29 = i0.ɵɵnextContext().$implicit;\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.showConfirmDeletePlan(items_r29.data.Id, items_r29.data.PlanName));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\u00A0 \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleProjectComponent_ng_container_3_div_20_ng_container_1_Template, 3, 0, \"ng-container\", 3);\n    i0.ɵɵelementStart(2, \"span\", 64);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const items_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", items_r29.data.IsPlan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", items_r29.data.PlanName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(items_r29.data.PlanName);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 68);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const status_r34 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(status_r34.NameView);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_34_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 69);\n    i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_ng_container_3_div_34_ng_container_1_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const items_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.showChooseEmployee(items_r35.data));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \"\\u00A0 \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ScheduleProjectComponent_ng_container_3_div_34_ng_container_1_Template, 3, 0, \"ng-container\", 3);\n    i0.ɵɵelementStart(2, \"span\", 64);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const items_r35 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", items_r35.data.IsPlan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", items_r35.data.ResponsiblePersionName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(items_r35.data.ResponsiblePersionName);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵelementStart(2, \"div\", 70);\n    i0.ɵɵelement(3, \"nts-status-badge\", 71);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r40 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r40.data.Status)(\"items\", ctx_r10.constant.Plan_Status);\n  }\n}\n\nfunction ScheduleProjectComponent_ng_container_3_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵelement(3, \"ngb-progressbar\", 72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r41 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", items_r41.data.DoneRatio)(\"showValue\", true);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\n\nfunction ScheduleProjectComponent_ng_container_3_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 73)(1, \"div\");\n    i0.ɵɵelement(2, \"span\", 73);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const e_r42 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c8, e_r42.disabled === true));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", e_r42.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\u00A0 \", e_r42.text, \" \");\n  }\n}\n\nconst _c9 = function (a0) {\n  return [a0];\n};\n\nconst _c10 = function () {\n  return [\"F060711\"];\n};\n\nfunction ScheduleProjectComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"as-split\", 27, 28);\n    i0.ɵɵlistener(\"dragEnd\", function ScheduleProjectComponent_ng_container_3_Template_as_split_dragEnd_1_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.dragEnd(\"percent\", $event));\n    });\n    i0.ɵɵelementStart(3, \"as-split-area\", 29, 30)(5, \"div\", 31)(6, \"div\", 32)(7, \"dx-tree-list\", 33, 34);\n    i0.ɵɵlistener(\"onRowExpanded\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onRowExpanded_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onRowExpanded($event));\n    })(\"onRowCollapsed\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onRowCollapsed_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.onRowCollapsed($event));\n    })(\"onSelectionChanged\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onSelectionChanged_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.onSelectionChanged($event));\n    })(\"onContentReady\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onContentReady_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.onContentReady($event));\n    })(\"onRowUpdated\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onRowUpdated_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.onRowUpdated($event));\n    })(\"onRowRemoved\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onRowRemoved_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.onRowRemoved($event));\n    })(\"onEditingStart\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onEditingStart_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onEditingStart($event));\n    })(\"onRowPrepared\", function ScheduleProjectComponent_ng_container_3_Template_dx_tree_list_onRowPrepared_7_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.onRowPrepared($event));\n    });\n    i0.ɵɵelement(9, \"dxo-selection\", 35)(10, \"dxo-editing\", 36)(11, \"dxo-column-fixing\", 37)(12, \"dxo-paging\", 37)(13, \"dxi-column\", 38)(14, \"dxi-column\", 39);\n    i0.ɵɵtemplate(15, ScheduleProjectComponent_ng_container_3_div_15_Template, 5, 8, \"div\", 40);\n    i0.ɵɵelement(16, \"dxi-column\", 41)(17, \"dxi-column\", 42);\n    i0.ɵɵtemplate(18, ScheduleProjectComponent_ng_container_3_div_18_Template, 5, 4, \"div\", 40);\n    i0.ɵɵelement(19, \"dxi-column\", 43);\n    i0.ɵɵtemplate(20, ScheduleProjectComponent_ng_container_3_div_20_Template, 4, 3, \"div\", 40);\n    i0.ɵɵelementStart(21, \"dxi-column\", 44);\n    i0.ɵɵelement(22, \"dxo-lookup\", 45)(23, \"dxi-validation-rule\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"dxi-column\", 47)(25, \"dxi-column\", 48)(26, \"dxi-column\", 49)(27, \"dxi-column\", 50)(28, \"dxi-column\", 51)(29, \"dxi-column\", 52);\n    i0.ɵɵelementStart(30, \"dxi-column\", 53);\n    i0.ɵɵelement(31, \"dxo-lookup\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(32, ScheduleProjectComponent_ng_container_3_div_32_Template, 3, 1, \"div\", 40);\n    i0.ɵɵelement(33, \"dxi-column\", 55);\n    i0.ɵɵtemplate(34, ScheduleProjectComponent_ng_container_3_div_34_Template, 4, 3, \"div\", 40);\n    i0.ɵɵelement(35, \"dxi-column\", 56)(36, \"dxi-column\", 57);\n    i0.ɵɵtemplate(37, ScheduleProjectComponent_ng_container_3_div_37_Template, 4, 2, \"div\", 40);\n    i0.ɵɵelement(38, \"dxi-column\", 58);\n    i0.ɵɵtemplate(39, ScheduleProjectComponent_ng_container_3_div_39_Template, 4, 2, \"div\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"dx-context-menu\", 59);\n    i0.ɵɵlistener(\"onItemClick\", function ScheduleProjectComponent_ng_container_3_Template_dx_context_menu_onItemClick_40_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.itemClick($event));\n    });\n    i0.ɵɵtemplate(41, ScheduleProjectComponent_ng_container_3_div_41_Template, 4, 5, \"div\", 60);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"direction\", ctx_r0.direction);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.listProjectProduct)(\"showRowLines\", true)(\"showBorders\", true)(\"columnAutoWidth\", false)(\"expandedRowKeys\", ctx_r0.listExplanedId)(\"height\", ctx_r0.scheduleHeight)(\"selectedRowKeys\", i0.ɵɵpureFunction1(55, _c9, ctx_r0.idStageSelect));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"allowUpdating\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"enabled\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"enabled\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listTemplateCode\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listTemplateStage\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"minWidth\", 260)(\"allowSorting\", false)(\"allowEditing\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listTemplatePlanName\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.Type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", !ctx_r0.permissionService.checkPermission(i0.ɵɵpureFunction0(57, _c10)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", !ctx_r0.permissionService.checkPermission(i0.ɵɵpureFunction0(58, _c10)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"editorOptions\", ctx_r0.editorOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.suppliers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"statusTemplate\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowSorting\", false)(\"allowEditing\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listTemplatePlanAssignment\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowEditing\", false)(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowEditing\", false)(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listStatus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"width\", 130)(\"allowEditing\", false)(\"allowSorting\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"listTemplateDone\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.items)(\"width\", 200);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dxTemplateOf\", \"item\");\n  }\n}\n\nfunction ScheduleProjectComponent_ul_39_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r55 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", item_r55.Name, \": \", item_r55.Value, \"\");\n  }\n}\n\nfunction ScheduleProjectComponent_ul_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, ScheduleProjectComponent_ul_39_li_1_Template, 3, 2, \"li\", 74);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ItemSearch);\n  }\n}\n\nexport let ScheduleProjectComponent = /*#__PURE__*/(() => {\n  class ScheduleProjectComponent {\n    constructor(messageService, permissionService, constant, router, scheduleProjectService, appSetting, modalService, service, routeA, config, comboboxService, dateUtils) {\n      this.messageService = messageService;\n      this.permissionService = permissionService;\n      this.constant = constant;\n      this.router = router;\n      this.scheduleProjectService = scheduleProjectService;\n      this.appSetting = appSetting;\n      this.modalService = modalService;\n      this.service = service;\n      this.routeA = routeA;\n      this.config = config;\n      this.comboboxService = comboboxService;\n      this.dateUtils = dateUtils;\n      this.itemsProduct = [{\n        Id: 6,\n        text: 'Copy',\n        icon: 'far fa-copy text-danger'\n      }, {\n        Id: 7,\n        text: 'Paste',\n        icon: 'fas fa-paste text-success',\n        disabled: true\n      }, {\n        Id: 4,\n        text: 'Thu gọn/Mở rộng',\n        icon: 'fa fa-arrows text-warning'\n      }];\n      this.itemsStage = [{\n        Id: 3,\n        text: 'Xóa công đoạn',\n        icon: 'fas fa-times text-danger'\n      }, {\n        Id: 10,\n        text: 'Copy công đoạn',\n        icon: 'far fa-copy text-danger'\n      }, {\n        Id: 6,\n        text: 'Copy',\n        icon: 'far fa-copy text-danger'\n      }, {\n        Id: 7,\n        text: 'Paste',\n        icon: 'fas fa-paste text-success',\n        disabled: true\n      }, {\n        Id: 4,\n        text: 'Thu gọn/Mở rộng',\n        icon: 'fa fa-arrows text-warning'\n      }];\n      this.itemsPlan = [{\n        Id: 9,\n        text: 'Sửa kế hoạch',\n        icon: 'fa fa-edit text-warning'\n      }, {\n        Id: 8,\n        text: 'Xóa kế hoạch',\n        icon: 'fas fa-times text-danger'\n      }, {\n        Id: 6,\n        text: 'Copy',\n        icon: 'far fa-copy text-danger'\n      }, {\n        Id: 11,\n        text: 'Tạm dừng',\n        icon: 'far fa-pause-circle text-info'\n      }, {\n        Id: 12,\n        text: 'Khôi phục',\n        icon: 'far fa-play-circle text-success'\n      }, {\n        Id: 13,\n        text: 'Cập nhật tiến độ',\n        icon: 'fa fa-percent text-warning'\n      }, {\n        Id: 4,\n        text: 'Thu gọn/Mở rộng',\n        icon: 'fa fa-arrows text-info'\n      }];\n      this.Type = [{\n        Id: 1,\n        Name: \"Theo kế hoạch\",\n        Code: \"KH\"\n      }, {\n        Id: 2,\n        Name: \"Phát sinh - tính phí (PC)\",\n        Code: \"PC\"\n      }, {\n        Id: 3,\n        Name: \"Phát sinh không tính phí\",\n        Code: \"PS\"\n      }];\n      this.StatusPlan = [{\n        Id: 1,\n        Name: \"Chậm tiến độ\"\n      }];\n      this.direction = 'horizontal';\n      this.ListStageOfProject = [];\n      this.ItemSearch = [];\n      this.modelSearchProject = {\n        ProjectId: this.routeA.snapshot.paramMap.get('id'),\n        Date: '',\n        SbuId: '',\n        DepartmentId: '',\n        EmployeeCode: '',\n        DateToV: '',\n        DateFromV: '',\n        DateStartV: '',\n        DateEndV: '',\n        ModuleCode: '',\n        ModuleContactCode: '',\n        StartDateStatus: null,\n        DoneRatio: null,\n        Status: '',\n        DoneType: 1,\n        ContractStartDateToV: null,\n        ContractStartDateFromV: null,\n        ContractDueDateToV: null,\n        ContractDueDateFromV: null,\n        PlanStartDateToV: null,\n        PlanStartDateFromV: null,\n        PlanDueDateToV: null,\n        PlanDueDateFromV: null,\n        EmployeeId: '',\n        WorkProgress: '',\n        StageId: '',\n        ImplementingAgenciesCode: '',\n        WorkClassify: '',\n        PlanStatus: '',\n        WorkStatus: '',\n        DateFrom: null,\n        DateTo: null\n      };\n      this.workModel = {\n        Id: '',\n        ProjectId: null,\n        ProjectProductId: null,\n        ParentId: null,\n        StageName: '',\n        PlanName: '',\n        BackgroundColor: '',\n        StageId: null,\n        ContractStartDate: null,\n        ContractDueDate: null,\n        PlanStartDate: null,\n        PlanDueDate: null,\n        DoneRatio: 0,\n        Color: '',\n        Weight: 1,\n        IsPlan: false,\n        EstimateTime: 0,\n        Status: null,\n        SupplierId: null,\n        Type: null,\n        Index: null,\n        CreateDate: null\n      };\n      this.listPlan = [];\n      this.daysOfMonth = [];\n      this.selectDateId = -1;\n      this.dayOfWeek = [];\n      this.listProjectProduct = [];\n      this.listExplanedId = [];\n      this.suppliers = [];\n      this.isEdit = 'row';\n      this.listUserId = [];\n      this.sizes = {\n        percent: {\n          area1: 40,\n          area2: 60\n        },\n        pixel: {\n          area1: 120,\n          area2: '*',\n          area3: 160\n        }\n      };\n      this.StatisticalProjectModel = {\n        TotalProject: 0,\n        TotalProjectDone: 0,\n        TotalProjectDoing: 0\n      };\n      this.scheduleHeight = 100;\n      this.mode = 'single';\n      this.ListData = [];\n      this.ListResult = [];\n      this.IsCollapsed = false;\n      this.listTask = [];\n      this.listDepartment = [];\n      this.listChild = [];\n      this.listRemove = [];\n      this.dateTime = new Date();\n      this.dataModel = {\n        ScheduleProject: {},\n        ListCopy: [],\n        ListCopyStage: []\n      };\n      this.items = [{\n        Id: 4,\n        text: 'Thu gọn/Mở rộng',\n        icon: ''\n      }];\n    }\n\n    ngOnInit() {\n      this.editorOptions = {\n        itemTemplate: 'statusTemplate',\n        width: 400\n      };\n      this.IsCollapsed = true;\n      this.scheduleHeight = window.innerHeight - 200;\n      this.modelSearchProject.Date = new Date();\n      this.searchSchedules();\n      this.getListSupplier();\n      this.getCBBDepartment();\n      this.getListTask();\n      console.log(this.idStageSelect);\n    }\n\n    getCBBDepartment() {\n      this.comboboxService.getCbbDepartment().subscribe(data => {\n        if (data) {\n          this.listDepartment = data;\n        }\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    getListTask() {\n      this.scheduleProjectService.getListTask().subscribe(data => {\n        this.listTask = data;\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    ngAfterViewInit() {// this.scrollScheduleDate.nativeElement.addEventListener('ps-scroll-x', (event: any) => {\n      //   this.scrollScheduleDateHeader.nativeElement.scrollLeft = event.target.scrollLeft;\n      // }, true);\n      // this.scrollScheduleDate.nativeElement.addEventListener('ps-scroll-y', (event: any) => {\n      //   var a = this.treeView.instance.getScrollable();\n      //   a.scrollTo({ left: a.scrollLeft(), top: event.target.scrollTop })\n      // }, true);\n    }\n\n    onEditingStart(e) {\n      if (e.column.dataField === \"PlanName\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"Type\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"SupplierId\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"EstimateTime\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"PlanStartDate\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"PlanDueDate\" && !e.data.IsPlan) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"ContractStartDate\" && !e.data.StageId) {\n        e.cancel = true;\n      } else if (e.column.dataField === \"ContractDueDate\" && !e.data.StageId) {\n        e.cancel = true;\n      } else {\n        var planModel = Object.assign({}, this.workModel);\n        planModel.Id = e.data.Id;\n        planModel.ProjectId = e.data.ProjectId;\n        planModel.ProjectProductId = e.data.ProjectProductId;\n        planModel.ParentId = e.data.ParentId;\n        planModel.StageName = e.data.StageName;\n        planModel.PlanName = e.data.PlanName;\n        planModel.BackgroundColor = e.data.BackgroundColor;\n        planModel.StageId = e.data.StageId;\n        planModel.ContractStartDate = e.data.ContractStartDate;\n        planModel.ContractDueDate = e.data.ContractDueDate;\n        planModel.PlanStartDate = e.data.PlanStartDate;\n        planModel.PlanDueDate = e.data.PlanDueDate;\n        planModel.DoneRatio = e.data.DoneRatio;\n        planModel.Color = e.data.Color;\n        planModel.Weight = e.data.Weight;\n        planModel.IsPlan = e.data.IsPlan;\n        planModel.EstimateTime = e.data.EstimateTime;\n        planModel.Status = e.data.Status;\n        planModel.SupplierId = e.data.SupplierId;\n        planModel.Type = e.data.Type;\n        planModel.Index = e.data.Index;\n        planModel.CreateDate = e.data.CreateDate;\n        this.dataEditing = planModel;\n      } // if (e.column.dataField === \"Type\" && e.data.IsPlan) {\n      //   window.setTimeout(function () {\n      //     $('.dx-dropdownlist-popup-wrapper .dx-popup-content').css({ 'background-color': '#DDEEED', 'color': 'black' });\n      //   }, 0);\n      // }\n\n    }\n\n    onContentReady(event) {// let that: any = this;\n      // event.component.getScrollable().off(\"scroll\");\n      // event.component.getScrollable().on(\"scroll\", e => {\n      //   this.perfectScroll.directiveRef.scrollToTop(this.treeView.instance.getScrollable().scrollTop());\n      // })\n    }\n\n    ngOnDestroy() {// this.scrollScheduleDate.nativeElement.removeEventListener('ps-scroll-x', null);\n      // this.scrollScheduleDate.nativeElement.removeEventListener('ps-scroll-y', null);\n      // this.treeView.instance.getScrollable().off(\"scroll\");\n    }\n\n    getListSupplier() {\n      this.scheduleProjectService.getListSupplier().subscribe(data => {\n        this.suppliers = data;\n      }, error => {\n        this.messageService.showError(error);\n      });\n    } // Chọn công đoạn\n\n\n    chooseStage(row, rowId) {\n      let activeModal = this.modalService.open(ChooseStageModalComponent, {\n        container: 'body',\n        windowClass: 'choose-stage-modal',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.Id = rowId;\n      activeModal.componentInstance.ProjectId = this.modelSearchProject.ProjectId;\n      activeModal.componentInstance.Data = row;\n      activeModal.result.then(result => {\n        if (result && result.length > 0) {\n          this.listChild = this.listProjectProduct.filter(a => a.ProjectProductId === rowId);\n\n          if (this.listChild.length > 0) {\n            this.listRemove = this.listChild;\n            this.listRemove.forEach(element => {\n              const index = this.listProjectProduct.indexOf(element);\n\n              if (index !== -1) {\n                this.listProjectProduct.splice(index, 1);\n              }\n            });\n            result.forEach(element => {\n              this.listChild.push(element);\n            });\n            this.listChild = this.orderByPipe(this.listChild, 'Index', 1);\n            this.listChild.forEach(element => {\n              this.listProjectProduct.push(element);\n            });\n          } else {\n            result.forEach(element => {\n              this.listProjectProduct.push(element);\n              this.updateExpandedChild(element.Id, true);\n            });\n          }\n\n          this.recalculateParentDoneRatio(rowId);\n        }\n      }, reason => {});\n    }\n    /**\r\n     * Lấy thông tin kế hoạch của dự án\r\n     */\n\n\n    searchSchedules() {\n      this.modelSearchProject.ProjectId = this.idProject;\n\n      if (this.modelSearchProject.DepartmentId || this.modelSearchProject.SbuId || this.modelSearchProject.ProjectId) {\n        this.isSearchConditon = true;\n      } else {\n        this.isSearchConditon = false;\n      }\n\n      this.projectIdSelect = this.modelSearchProject.ProjectId;\n\n      if (this.modelSearchProject.DateStartV != null) {\n        this.modelSearchProject.DateStart = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateStartV);\n      }\n\n      if (this.modelSearchProject.DateStartV == null) {\n        this.modelSearchProject.DateStart = null;\n      }\n\n      if (this.modelSearchProject.DateEndV != null) {\n        this.modelSearchProject.DateEnd = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateEndV);\n      }\n\n      if (this.modelSearchProject.DateEndV == null) {\n        this.modelSearchProject.DateEnd = null;\n      }\n\n      this.modelSearchProject.ContractStartDate = null;\n\n      if (this.modelSearchProject.ContractStartDateToV) {\n        this.modelSearchProject.ContractStartDateTo = this.dateUtils.convertObjectToDate(this.modelSearchProject.ContractStartDateToV);\n      }\n\n      this.modelSearchProject.ContractStartDate = null;\n\n      if (this.modelSearchProject.ContractStartDateFromV) {\n        this.modelSearchProject.ContractStartDateFrom = this.dateUtils.convertObjectToDate(this.modelSearchProject.ContractStartDateFromV);\n      }\n\n      this.modelSearchProject.ContractDueDate = null;\n\n      if (this.modelSearchProject.ContractDueDateToV) {\n        this.modelSearchProject.ContractDueDateTo = this.dateUtils.convertObjectToDate(this.modelSearchProject.ContractDueDateToV);\n      }\n\n      this.modelSearchProject.ContractDueDate = null;\n\n      if (this.modelSearchProject.ContractDueDateFromV) {\n        this.modelSearchProject.ContractDueDateFrom = this.dateUtils.convertObjectToDate(this.modelSearchProject.ContractDueDateFromV);\n      }\n\n      this.modelSearchProject.PlanStartDate = null;\n\n      if (this.modelSearchProject.PlanStartDateToV) {\n        this.modelSearchProject.PlanStartDateTo = this.dateUtils.convertObjectToDate(this.modelSearchProject.PlanStartDateToV);\n      }\n\n      this.modelSearchProject.PlanStartDate = null;\n\n      if (this.modelSearchProject.PlanStartDateFromV) {\n        this.modelSearchProject.PlanStartDateFrom = this.dateUtils.convertObjectToDate(this.modelSearchProject.PlanStartDateFromV);\n      }\n\n      this.modelSearchProject.PlanDueDate = null;\n\n      if (this.modelSearchProject.PlanDueDateToV) {\n        this.modelSearchProject.PlanDueDateTo = this.dateUtils.convertObjectToDate(this.modelSearchProject.PlanDueDateToV);\n      }\n\n      this.modelSearchProject.PlanDueDate = null;\n\n      if (this.modelSearchProject.PlanDueDatefromV) {\n        this.modelSearchProject.PlanDueDateFrom = this.dateUtils.convertObjectToDate(this.modelSearchProject.PlanDueDateFromV);\n      }\n\n      if (this.modelSearchProject.DateFromV) {\n        this.modelSearchProject.DateFrom = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateFromV);\n      } else {\n        this.modelSearchProject.DateFrom = null;\n      }\n\n      if (this.modelSearchProject.DateToV) {\n        this.modelSearchProject.DateTo = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateToV);\n      } else {\n        this.modelSearchProject.DateTo = null;\n      }\n\n      if (this.modelSearchProject.ProjectId != \"\" && this.modelSearchProject.ProjectId != null) {\n        this.scheduleProjectService.getListPlanByProjectId(this.modelSearchProject).subscribe(data => {\n          if (data) {\n            this.daysOfMonth = data.holidays;\n            this.listProjectProduct = data.listResult;\n\n            if (this.IsCollapsed) {\n              this.collapsed();\n              this.IsCollapsed = false;\n            } else {\n              this.listExplanedId.forEach(id => {\n                this.updateExpanded(id, false);\n              });\n            }\n          }\n        }, error => {\n          this.messageService.showError(error);\n        });\n      } else {\n        if (this.modelSearchProject.ProjectId == null) {\n          this.listProjectProduct = [];\n        }\n      }\n    }\n\n    getListPlanByMonth() {\n      if (this.modelSearchProject.DepartmentId || this.modelSearchProject.SbuId || this.modelSearchProject.ProjectId) {\n        this.isSearchConditon = true;\n      } else {\n        this.isSearchConditon = false;\n      }\n\n      if (this.modelSearchProject.DateStartV != null) {\n        this.modelSearchProject.DateStart = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateStartV);\n      }\n\n      if (this.modelSearchProject.DateStartV == null) {\n        this.modelSearchProject.DateStart = null;\n      }\n\n      if (this.modelSearchProject.DateEndV != null) {\n        this.modelSearchProject.DateEnd = this.dateUtils.convertObjectToDate(this.modelSearchProject.DateEndV);\n      }\n\n      if (this.modelSearchProject.DateEndV == null) {\n        this.modelSearchProject.DateEnd = null;\n      }\n\n      this.projectIdSelect = this.modelSearchProject.ProjectId;\n\n      if (this.modelSearchProject.ProjectId != \"\" && this.modelSearchProject.ProjectId != null) {\n        this.scheduleProjectService.getListPlanByMonth(this.modelSearchProject).subscribe(data => {\n          if (data) {\n            this.daysOfMonth = data.holidays;\n            this.dayOfWeek = data.dayOfWeek;\n            setTimeout(() => {\n              this.updateScrollDate();\n            }, 300);\n          }\n        }, error => {\n          this.messageService.showError(error);\n        });\n      } else {\n        if (this.modelSearchProject.ProjectId == null) {\n          this.listProjectProduct = [];\n        }\n      }\n    }\n\n    onSelectionChanged(e) {\n      this.selectDateId = e.selectedRowKeys[0];\n      this.idSelected = e.selectedRowKeys[0];\n      let planSelect;\n\n      for (let index = 0; index < this.listProjectProduct.length; index++) {\n        if (this.listProjectProduct[index].Id == this.idSelected) {\n          planSelect = this.listProjectProduct[index];\n          index = this.listProjectProduct.length;\n        }\n      }\n\n      if (planSelect && planSelect.StartDate) {\n        if (moment(planSelect.StartDate).month() != moment(this.modelSearchProject.DateStart).month() || moment(planSelect.StartDate) < moment(this.modelSearchProject.DateStart)) {\n          // this.modelSearchProject.Date = ;\n          this.modelSearchProject.DateStartV = this.dateUtils.getObjectDateByDate(moment(planSelect.StartDate).toDate());\n          var dateEnd = moment(planSelect.StartDate).add(1, \"month\");\n          this.modelSearchProject.DateEndV = {\n            year: dateEnd.year(),\n            month: dateEnd.month() + 1,\n            day: dateEnd.date()\n          };\n          this.getListPlanByMonth();\n        } else {\n          this.updateScrollDate();\n        }\n      }\n\n      if (e.selectedRowsData && e.selectedRowsData.length > 0) {\n        this.dataModel.ScheduleProject = e.selectedRowsData[0];\n\n        if (!this.dataModel.ScheduleProject.StageId) {\n          this.items = this.itemsProduct;\n        } else if (!this.dataModel.ScheduleProject.IsPlan) {\n          this.items = this.itemsStage;\n        } else if (this.dataModel.ScheduleProject.IsPlan) {\n          this.items = this.itemsPlan;\n        }\n      }\n    }\n\n    updateScrollDate() {\n      var dateSelect = $(\"#\" + this.selectDateId);\n\n      if (dateSelect && dateSelect.length > 0) {\n        this.perfectScroll.directiveRef.scrollToLeft(dateSelect[0].offsetParent.offsetLeft / 3 * 2);\n      }\n    }\n\n    onRowExpanded(event) {\n      this.updateExpanded(event.key, false);\n    }\n\n    updateExpanded(key, isAll) {\n      for (let index = 0; index < this.listProjectProduct.length; index++) {\n        if (this.listProjectProduct[index].Id == key) {\n          this.listProjectProduct[index].IsExpanded = true;\n          this.listProjectProduct[index].IsShow = true;\n          index = this.listProjectProduct.length;\n        }\n      }\n\n      this.updateExpandedChild(key, isAll);\n    }\n\n    updateExpandedChild(parentKey, isAll) {\n      for (let index = 0; index < this.listProjectProduct.length; index++) {\n        if (this.listProjectProduct[index].ParentId == parentKey) {\n          this.listProjectProduct[index].IsShow = true;\n\n          if (isAll) {\n            this.listProjectProduct[index].IsExpanded = true;\n          }\n\n          if (this.listProjectProduct[index].IsExpanded) {\n            this.updateExpandedChild(this.listProjectProduct[index].Id, isAll);\n          }\n        }\n      }\n    }\n\n    onRowCollapsed(event) {\n      this.updateCollapsed(event.key, false);\n    }\n\n    updateCollapsed(key, isAll) {\n      for (let index = 0; index < this.listProjectProduct.length; index++) {\n        if (this.listProjectProduct[index].Id == key) {\n          this.listProjectProduct[index].IsExpanded = false;\n          index = this.listProjectProduct.length;\n        }\n      }\n    }\n\n    updateCollapsedChild(parentKey, isAll) {\n      for (let index = 0; index < this.listProjectProduct.length; index++) {\n        if (this.listProjectProduct[index].ParentId == parentKey) {\n          this.listProjectProduct[index].IsShow = false;\n\n          if (isAll) {\n            this.listProjectProduct[index].IsExpanded = false;\n          }\n\n          this.updateCollapsedChild(this.listProjectProduct[index].Id, isAll);\n        }\n      }\n    }\n\n    onSelectedPlan(plan) {\n      this.selectDateId = plan.Id;\n      this.treeView.instance.selectRows([plan.Id], false);\n\n      if (plan.StartDate) {\n        if (moment(plan.StartDate).month() != moment(this.modelSearchProject.Date).month()) {\n          this.modelSearchProject.Date = moment(plan.StartDate);\n          this.getListPlanByMonth();\n        }\n      }\n    }\n\n    showConfirmDeleteStage(Id) {\n      this.messageService.showConfirm(\"Bạn có chắc muốn xoá Công đoạn này không?\").then(data => {\n        this.deleteStage(Id);\n      }, error => {});\n    }\n\n    deleteStage(Id) {\n      this.scheduleProjectService.deleteStage({\n        Id: Id\n      }).subscribe(data => {\n        // Xóa công việc khỏi danh sách\n        this.listProjectProduct.forEach(element => {\n          if (element.Id === Id) {\n            const index = this.listProjectProduct.indexOf(element);\n\n            if (index !== -1) {\n              this.listProjectProduct.splice(index, 1);\n              this.recalculateParentDoneRatio(element.ProjectProductId);\n            }\n          }\n        });\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    showConfirmDeletePlan(Id) {\n      this.messageService.showConfirm(\"Bạn có chắc muốn xoá kế hoạch này không?\").then(data => {\n        this.deletePlan(Id);\n      }, error => {});\n    }\n\n    deletePlan(Id) {\n      this.scheduleProjectService.deletePlan({\n        Id: Id\n      }).subscribe(data => {\n        // Xóa công việc khỏi danh sách\n        this.listProjectProduct.forEach(element => {\n          if (element.Id === Id) {\n            const index = this.listProjectProduct.indexOf(element);\n\n            if (index !== -1) {\n              this.listProjectProduct.splice(index, 1);\n              this.reCalculateDoneRatio(element.ParentId);\n            }\n          }\n        });\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    deleteMultiPlan() {\n      let listCheck = [];\n      this.listProjectProduct.forEach(element => {\n        if (element.Checked) {\n          listCheck.push(element);\n        }\n      });\n\n      if (listCheck.length > 0) {\n        this.scheduleProjectService.deleteMultiPlan({\n          ListCopy: listCheck\n        }).subscribe(data => {\n          this.searchSchedules();\n          this.messageService.showSuccess('Xóa kế hoạch thành công!');\n        }, error => {\n          this.messageService.showError(error);\n        });\n      } else if (this.dataModel.ScheduleProject.IsPlan) {\n        this.deletePlan(this.idSelected);\n      }\n    }\n\n    itemClick(e) {\n      if (e.itemData.Id == 4) {\n        this.collapsed();\n      } else {\n        let projectProductSelected;\n\n        if (e.itemData.Id == 3) {\n          this.showConfirmDeleteStage(this.dataModel.ScheduleProject.Id);\n        } else if (e.itemData.Id == 8) {\n          this.deleteMultiPlan();\n        } else if (e.itemData.Id == 9) {\n          this.showCreateUpdatePlan(this.dataModel.ScheduleProject, 2);\n        } else if (e.itemData.Id == 6) {\n          this.copyPlan();\n        } else if (e.itemData.Id == 7) {\n          this.pastPlan();\n        } else if (e.itemData.Id == 10) {\n          this.copyStage();\n        } else if (e.itemData.Id == 11) {\n          this.Pending();\n        } else if (e.itemData.Id == 12) {\n          this.Resume();\n        } else if (e.itemData.Id == 13) {\n          this.UpdateProgress();\n        }\n\n        {\n          if (!this.idSelected) {\n            this.messageService.showMessage(\"Chưa chọn kế hoạch!\");\n          } else {\n            this.listProjectProduct.forEach(element => {\n              if (element.Id == this.idSelected) {\n                projectProductSelected = element;\n              }\n            });\n          }\n        }\n      }\n    }\n\n    collapsed() {\n      if (this.listExplanedId.length > 0) {\n        this.listExplanedId = [];\n        this.listProjectProduct.forEach(element => {\n          if (!element.ParentId) {\n            this.updateCollapsed(element.Id, true);\n          }\n        });\n      } else {\n        this.listExplanedId = [];\n        this.listProjectProduct.forEach(element => {\n          this.listExplanedId.push(element.Id);\n\n          if (!element.ParentId) {\n            this.updateExpanded(element.Id, true);\n          }\n        });\n      }\n    }\n\n    dragEnd(unit, {\n      sizes\n    }) {\n      if (unit === 'percent') {\n        this.sizes.percent.area1 = sizes[0];\n        this.sizes.percent.area2 = sizes[1];\n      } else if (unit === 'pixel') {\n        this.sizes.pixel.area1 = sizes[0];\n        this.sizes.pixel.area2 = sizes[1];\n        this.sizes.pixel.area3 = sizes[2];\n      }\n\n      this.updateScrollDate();\n    }\n\n    exportExcel() {\n      this.scheduleProjectService.exportExcel(this.modelSearchProject).subscribe(d => {\n        var link = document.createElement('a');\n        link.setAttribute(\"type\", \"hidden\");\n        link.href = this.config.ServerApi + d;\n        link.download = 'Download.docx';\n        document.body.appendChild(link); // link.focus();\n\n        link.click();\n        document.body.removeChild(link);\n      }, e => {\n        this.messageService.showError(e);\n      });\n    }\n\n    exportExcelProjectSchedule() {\n      this.scheduleProjectService.searchOverallProject(this.idProject).subscribe(d => {\n        var link = document.createElement('a');\n        link.setAttribute(\"type\", \"hidden\");\n        link.href = this.config.ServerApi + d;\n        link.download = 'Download.docx';\n        document.body.appendChild(link); // link.focus();\n\n        link.click();\n        document.body.removeChild(link);\n      }, e => {\n        this.messageService.showError(e);\n      });\n    }\n    /**\r\n     * Sự kiện update thông tin khi nhập dữ liệu trên Row\r\n     * @param event\r\n     * @returns\r\n     */\n\n\n    onRowUpdated(event) {\n      if (event.data) {\n        let isValidDate = true;\n        let startDate;\n        let endDate;\n\n        if (event.data.ContractStartDate) {\n          startDate = moment(event.data.ContractStartDate).format('YYYY-MM-DD 12:00:00');\n        }\n\n        if (event.data.ContractDueDate) {\n          endDate = moment(event.data.ContractDueDate).format('YYYY-MM-DD 12:00:00');\n        }\n\n        if (startDate && endDate) {\n          if (startDate > endDate) {\n            this.messageService.showMessage(\"Ngày bắt đầu hợp đồng phải nhỏ hơn ngày kết thúc hợp đồng!\");\n            event.data.ContractStartDate = this.dataEditing.ContractStartDate;\n            event.data.ContractDueDate = this.dataEditing.ContractDueDate;\n            isValidDate = false;\n            return;\n          }\n        }\n\n        startDate = null;\n        endDate = null;\n\n        if (event.data.PlanStartDate) {\n          startDate = moment(event.data.PlanStartDate).format('YYYY-MM-DD 12:00:00');\n        }\n\n        if (event.data.PlanDueDate) {\n          endDate = moment(event.data.PlanDueDate).format('YYYY-MM-DD 12:00:00');\n        }\n\n        if (startDate && endDate) {\n          if (startDate > endDate) {\n            this.messageService.showMessage(\"Ngày bắt đầu triển khai phải nhỏ hơn ngày kết thúc triển khai!\");\n            event.data.PlanStartDate = this.dataEditing.PlanStartDate;\n            event.data.PlanDueDate = this.dataEditing.PlanDueDate;\n            isValidDate = false;\n            return;\n          }\n        }\n\n        this.updateInternalStatus(event.data);\n\n        if (event.data.PlanStartDate && event.data.PlanDueDate) {\n          let date1 = moment(event.data.PlanStartDate);\n          let date2 = moment(event.data.PlanDueDate);\n          let diffDay = date2.diff(date1, 'day');\n          event.data.Duration = diffDay + 1;\n        } // Cập nhật thông tin cha\n\n\n        if (isValidDate && event.data.PlanStartDate != this.dataEditing.PlanStartDate || event.data.PlanDueDate != this.dataEditing.PlanDueDate || event.data.ContractStartDate != this.dataEditing.ContractStartDate || event.data.ContractDueDate != this.dataEditing.ContractDueDate) {\n          let listParent = this.listProjectProduct.filter(a => a.Id === event.data.ParentId);\n          let listChild = this.listProjectProduct.filter(a => a.ParentId === event.data.ParentId); // Công việc\n\n          if (event.data.IsPlan) {\n            if (listParent.length > 0) {\n              listParent[0].PlanStartDate = this.minDate(listChild, \"PlanStartDate\");\n              listParent[0].PlanDueDate = this.maxDate(listChild, \"PlanDueDate\");\n\n              if (listParent[0].PlanStartDate && listParent[0].PlanDueDate) {\n                let date1 = moment(listParent[0].PlanStartDate);\n                let date2 = moment(listParent[0].PlanDueDate);\n                let diffDay = date2.diff(date1, 'day');\n                listParent[0].Duration = diffDay + 1;\n              }\n\n              this.updatePlanDate(listParent[0]);\n            }\n          } else if (!event.data.IsPlan && event.data.StageId) // Công đoạn\n            {\n              if (event.data.PlanDueDate && event.data.ContractDueDate && event.data.PlanDueDate > event.data.ContractDueDate) {\n                event.data.InternalStatus = \"QUÁ HẠN HỢP ĐỒNG\";\n              } else {\n                event.data.InternalStatus = \"\";\n              }\n\n              if (listParent.length > 0) {\n                listParent[0].ContractStartDate = this.minDate(listChild, \"ContractStartDate\");\n                listParent[0].ContractDueDate = this.maxDate(listChild, \"ContractDueDate\");\n                this.updateContractDate(listParent[0]);\n              }\n            }\n        } // Trường hợp thay đổi giá trị của Trọng số (Weight)\n\n\n        if (event.data.Weight != this.dataEditing.Weight) {\n          this.reCalculateDoneRatio(event.data.ParentId);\n        }\n\n        if (isValidDate && (event.data.Weight != this.dataEditing.Weight || event.data.PlanName != this.dataEditing.PlanName || event.data.Type != this.dataEditing.Type || event.data.ContractStartDate != this.dataEditing.ContractStartDate || event.data.ContractDueDate != this.dataEditing.ContractDueDate || event.data.PlanStartDate != this.dataEditing.PlanStartDate || event.data.PlanDueDate != this.dataEditing.PlanDueDate || event.data.EstimateTime != this.dataEditing.EstimateTime || event.data.SupplierId != this.dataEditing.SupplierId)) {\n          let listUpdate = [event.data];\n          this.scheduleProjectService.modifyPlan(listUpdate).subscribe();\n        }\n      }\n    }\n\n    updateInternalStatus(plan) {\n      if (plan.IsPlan) {\n        if (!plan.PlanStartDate || !plan.PlanDueDate) {\n          plan.InternalStatus = \"THIẾU NGÀY TK\";\n        } else if (this.dateTime > plan.PlanDueDate && plan.DoneRatio < 100) {\n          plan.InternalStatus = \"QUÁ HẠN HOÀN THÀNH\";\n        } else {\n          plan.InternalStatus = \"OK\";\n        }\n      } else {\n        if (!plan.StageId) {\n          if (plan.PlanDueDate > plan.ContractDueDate) {\n            plan.InternalStatus = \"QUÁ HẠN HỢP ĐỒNG\";\n          } else if (plan.PlanDueDate) {\n            if (this.dateTime > plan.PlanDueDate && plan.DoneRatio < 100) {\n              plan.InternalStatus = \"QUÁ HẠN HOÀN THÀNH\";\n            }\n          }\n        }\n      }\n    }\n    /**\r\n     * Tính lại tỷ lệ hoàn thành, tình trạng của Công đoạn\r\n     * @param parentId\r\n     */\n\n\n    reCalculateDoneRatio(parentId) {\n      let stage = this.listProjectProduct.filter(a => a.Id === parentId);\n\n      if (stage.length > 0) {\n        let plans = this.listProjectProduct.filter(a => a.ParentId === stage[0].Id && a.Status !== 4);\n        let DoneRation = 0;\n        let Weight = 0;\n        plans.forEach(element => {\n          DoneRation = DoneRation + element.DoneRatio * element.Weight;\n          Weight = Weight + element.Weight;\n        });\n        stage[0].DoneRatio = Weight === 0 ? 0 : DoneRation / Weight;\n        this.listProjectProduct.forEach(element => {\n          if (element.IsPlan == true && element.ListIdUserId.length > 0) {\n            element.ListIdUserId.forEach(item => {\n              if (this.listUserId.indexOf(item) == -1) {\n                this.listUserId.push(item);\n              }\n            });\n          }\n        });\n        let numOfPlan = plans.length;\n        let numOfOpen = plans.filter(r => r.Status === 1).length;\n        let numOfOngoing = plans.filter(r => r.Status === 2).length;\n        let numOfClosed = plans.filter(r => r.Status === 3).length;\n        let numOfStop = plans.filter(r => r.Status === 4).length;\n\n        if (numOfOngoing > 0) {\n          stage[0].Status = 2;\n        } else if (numOfPlan == numOfOpen) {\n          stage[0].Status = 1;\n        } else if (numOfPlan == numOfClosed) {\n          stage[0].Status = 3;\n        } else if (numOfPlan == numOfStop) {\n          stage[0].Status = 4;\n        } else {\n          stage[0].Status = 0;\n        }\n\n        this.recalculateParentDoneRatio(stage[0].ProjectProductId);\n      }\n    }\n    /**\r\n     * Tính toán lại tỷ lệ % hoàn thành, tình trạng công việc của sản phẩm, module\r\n     * @param projectProductId\r\n     */\n\n\n    recalculateParentDoneRatio(projectProductId) {\n      let product = this.listProjectProduct.filter(a => a.Id === projectProductId);\n\n      if (product.length > 0) {\n        let plans = this.listProjectProduct.filter(a => a.ProjectProductId === projectProductId && a.IsPlan === false);\n        var numOfPlan = 0;\n        var numOfOpen = 0;\n        var numOfOngoing = 0;\n        var numOfClosed = 0;\n        var numOfStop = 0;\n\n        if (plans.length > 0) {\n          let DoneRation = 0;\n          let Weight = 0;\n          plans.forEach(element => {\n            DoneRation = DoneRation + element.DoneRatio * element.Weight;\n            Weight = Weight + element.Weight;\n          });\n          product[0].DoneRatio = Weight === 0 ? 0 : DoneRation / Weight;\n          numOfPlan = plans.length;\n          numOfOpen = plans.filter(r => r.Status === 1).length;\n          numOfOngoing = plans.filter(r => r.Status === 2).length;\n          numOfClosed = plans.filter(r => r.Status === 3).length;\n          numOfStop = plans.filter(r => r.Status === 4).length;\n        } else {\n          var products = this.listProjectProduct.filter(a => a.ParentId === projectProductId);\n          let DoneRation = 0;\n          let Weight = 0;\n          products.forEach(element => {\n            DoneRation = DoneRation + element.DoneRatio * element.Weight;\n            Weight = Weight + element.Weight;\n          });\n          product[0].DoneRatio = Weight === 0 ? 0 : DoneRation / Weight;\n          numOfPlan = products.length;\n          numOfOpen = products.filter(r => r.Status === 1).length;\n          numOfOngoing = products.filter(r => r.Status === 2).length;\n          numOfClosed = products.filter(r => r.Status === 3).length;\n          numOfStop = products.filter(r => r.Status === 4).length;\n        }\n\n        if (numOfOngoing > 0) {\n          product[0].Status = 2;\n        } else if (numOfPlan == numOfOpen) {\n          product[0].Status = 1;\n        } else if (numOfPlan == numOfClosed) {\n          product[0].Status = 3;\n        } else if (numOfPlan == numOfStop) {\n          product[0].Status = 4;\n        } else {\n          product[0].Status = 0;\n        }\n\n        if (product[0].ParentId !== null) {\n          this.recalculateParentDoneRatio(product[0].ParentId);\n        }\n      }\n    }\n\n    updatePlanDate(dataUpdate) {\n      if (dataUpdate.ParentId) {\n        let listParent = this.listProjectProduct.filter(a => a.Id === dataUpdate.ParentId);\n        let listChild = this.listProjectProduct.filter(a => a.ParentId === dataUpdate.ParentId);\n\n        if (listParent.length > 0) {\n          listParent[0].PlanStartDate = this.minDate(listChild, \"PlanStartDate\");\n          listParent[0].PlanDueDate = this.maxDate(listChild, \"PlanDueDate\");\n\n          if (listParent[0].PlanStartDate && listParent[0].PlanDueDate) {\n            let date1 = moment(listParent[0].PlanStartDate);\n            let date2 = moment(listParent[0].PlanDueDate);\n            let diffDay = date2.diff(date1, 'day');\n            listParent[0].Duration = diffDay + 1;\n          }\n\n          this.updatePlanDate(listParent[0]);\n        }\n      } else {\n        return true;\n      }\n    }\n\n    updateContractDate(dataUpdate) {\n      if (dataUpdate.ParentId) {\n        let listParent = this.listProjectProduct.filter(a => a.Id === dataUpdate.ParentId);\n        let listChild = this.listProjectProduct.filter(a => a.ParentId === dataUpdate.ParentId);\n\n        if (listParent.length > 0) {\n          listParent[0].ContractStartDate = this.minDate(listChild, \"ContractStartDate\");\n          listParent[0].ContractDueDate = this.maxDate(listChild, \"ContractDueDate\");\n          this.updateContractDate(listParent[0]);\n        }\n      } else {\n        return true;\n      }\n    }\n\n    onRowPrepared(event) {\n      if (event.rowType == \"data\" && !event.data.IsPlan && event.data.StageId) {\n        event.rowElement.style.backgroundColor = event.data.Color;\n      } else if (event.rowType == \"data\" && !event.data.IsPlan && !event.data.StageId && !event.data.ParentId) {\n        event.rowElement.style.backgroundColor = \"#A5CDFF\";\n      } else if (event.rowType == \"data\" && !event.data.IsPlan && !event.data.StageId && event.data.ParentId) {\n        event.rowElement.style.backgroundColor = \"#FEFFDC\";\n      }\n    }\n\n    workingReport() {\n      let activeModal = this.modalService.open(WorkingReportComponent, {\n        container: 'body',\n        windowClass: 'working-report-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {}, reason => {});\n    }\n\n    unHideDashboard() {\n      let activeModal = this.modalService.open(DashboardPlanComponent, {\n        container: 'body',\n        windowClass: 'dashboard-plan-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.idProject = this.idProject;\n      activeModal.componentInstance.Name = this.Name;\n      activeModal.result.then(result => {}, reason => {});\n    } //lọc\n\n\n    popupSearch() {\n      let activeModal = this.modalService.open(PopupSearchComponent, {\n        container: 'body',\n        windowClass: 'popup-search-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.idProject = this.idProject;\n      activeModal.componentInstance.modelSearchProject = this.modelSearchProject;\n      activeModal.componentInstance.ItemSearch = this.ItemSearch;\n      this.listProjectProduct.forEach(element => {\n        if (element.IsPlan == true && element.ListIdUserId.length > 0) {\n          element.ListIdUserId.forEach(item => {\n            if (this.listUserId.indexOf(item) == -1) {\n              this.listUserId.push(item);\n            }\n          });\n        }\n      });\n      activeModal.componentInstance.listUserId = this.listUserId;\n      activeModal.result.then(result => {\n        if (result) {\n          this.ItemSearch = activeModal.componentInstance.ItemSearch;\n          this.searchSchedules();\n        }\n      }, reason => {});\n    }\n\n    overallProject() {\n      let activeModal = this.modalService.open(OverallProjectComponent, {\n        container: 'body',\n        windowClass: 'overall-project-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {}, reason => {});\n    }\n\n    riskProject() {\n      let activeModal = this.modalService.open(RiskProblemProjectComponent, {\n        container: 'body',\n        windowClass: 'risk-problem-project-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {\n        if (result) {\n          this.searchSchedules();\n        }\n      }, reason => {});\n    }\n\n    planAdjustment() {\n      let activeModal = this.modalService.open(PlanAdjustmentComponent, {\n        container: 'body',\n        windowClass: 'plan-adjustment-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {}, reason => {});\n    }\n    /**\r\n     * Thực hiện tạo mới công việc. Kết quả trả về sẽ dùng để update lại giao diện danh sách công việc\r\n     * @param row\r\n     * @param type\r\n     */\n\n\n    showCreateUpdatePlan(row, type) {\n      let activeModal = this.modalService.open(PlanProjectCreateComponent, {\n        container: 'body',\n        windowClass: 'plan-project-create-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.modelSearchProject.ProjectId;\n      activeModal.componentInstance.projectProductId = row.ProjectProductId;\n      activeModal.componentInstance.stageId = row.StageId;\n      activeModal.componentInstance.parentId = row.Id;\n      activeModal.componentInstance.Id = row.Id;\n      activeModal.componentInstance.type = type;\n      activeModal.componentInstance.tasks = this.listTask;\n      activeModal.componentInstance.listDepartment = this.listDepartment;\n      activeModal.result.then(result => {\n        if (result !== '') {\n          // Lấy ra danh sách các công việc cùng công đoạn\n          this.listChild = this.listProjectProduct.filter(a => a.StageId === row.StageId && a.IsPlan === true); // Kiểm tra tồn tại của công việc\n\n          var existed = this.listChild.filter(a => a.Id === result.Id);\n          var oldIndexPlan = row.IndexPlan; // Trường hợp thêm mới\n\n          if (existed.length === 0) {\n            this.listChild.push(result);\n          } else {\n            // Trường hợp update\n            for (var i in this.listChild) {\n              if (this.listChild[i].Id == result.Id) {\n                this.listChild[i].PlanName = result.PlanName;\n                this.listChild[i].IndexPlan = result.IndexPlan;\n                this.listChild[i].Description = result.Description;\n              } else {\n                // Update lại thứ tự Order của các công việc\n                // Trường hợp tăng Index\n                if (result.IndexPlan > oldIndexPlan) {\n                  // Trường hợp \n                  if (this.listChild[i].IndexPlan > oldIndexPlan && this.listChild[i].IndexPlan <= result.IndexPlan) {\n                    this.listChild[i].IndexPlan--;\n                  }\n                } else {\n                  if (this.listChild[i].IndexPlan < oldIndexPlan && this.listChild[i].IndexPlan >= result.IndexPlan) {\n                    this.listChild[i].IndexPlan++;\n                  }\n                }\n              }\n            }\n          }\n\n          if (this.listChild.length > 0) {\n            this.listRemove = this.listChild; // Xóa khỏi danh sách công việc\n\n            this.listRemove.forEach(element => {\n              const index = this.listProjectProduct.indexOf(element);\n\n              if (index !== -1) {\n                this.listProjectProduct.splice(index, 1);\n              }\n            });\n          }\n\n          this.listChild = this.orderByPipe(this.listChild, 'IndexPlan', 1);\n          this.listChild.forEach(element => {\n            this.listProjectProduct.push(element);\n          });\n          this.reCalculateDoneRatio(result.ParentId);\n        }\n      }, reason => {});\n    }\n\n    upDatePlan() {\n      this.isEdit = \"cell\";\n    }\n\n    showChooseEmployee(row) {\n      let activeModal = this.modalService.open(PlanEmployeeComponent, {\n        container: 'body',\n        windowClass: 'plan-show-employee-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.planId = row.Id;\n      activeModal.componentInstance.listIdUserId = row.ListIdUserId;\n      activeModal.result.then(result => {\n        if (result) {\n          this.scheduleProjectService.getPlanAdjustment(row.Id).subscribe(data => {\n            if (data) {\n              row.ResponsiblePersionName = data.ResponsiblePersionName;\n              row.ListIdUserId = data.ListIdUserId;\n              row.ResponsiblePersionId = data.Id;\n            }\n          }, error => {\n            this.messageService.showError(error);\n          });\n        }\n      }, reason => {});\n    }\n\n    showConfimCopy(row) {\n      let activeModal = this.modalService.open(PlanCopyComponent, {\n        container: 'body',\n        windowClass: 'plan-copy-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.model = row;\n      activeModal.result.then(result => {\n        if (result) {\n          this.searchSchedules();\n        }\n      }, reason => {});\n    }\n\n    exportExcelProjectPlan() {\n      this.scheduleProjectService.exportExcelProjectPlan(this.modelSearchProject).subscribe(d => {\n        var link = document.createElement('a');\n        link.setAttribute(\"type\", \"hidden\");\n        link.href = this.config.ServerApi + d;\n        link.download = 'Download.docx';\n        document.body.appendChild(link); // link.focus();\n\n        link.click();\n        document.body.removeChild(link);\n      }, e => {\n        this.messageService.showError(e);\n      });\n    }\n\n    copyPlan() {\n      this.dataModel.ListCopy = [];\n      this.listProjectProduct.forEach(element => {\n        if (element.Checked) {\n          this.dataModel.ListCopy.push(element);\n        }\n      });\n\n      if (this.dataModel.ListCopy.length > 0) {\n        this.itemsStage[3].disabled = false;\n      }\n    }\n\n    copyStage() {\n      this.dataModel.ListCopyStage = [];\n      this.dataModel.ListCopyStage.push(this.dataModel.ScheduleProject);\n\n      if (this.dataModel.ListCopyStage.length > 0) {\n        this.itemsProduct[1].disabled = false;\n      }\n    }\n\n    Pending() {\n      // Gán tình trạng công việc là Stop\n      this.listProjectProduct.forEach(element => {\n        if (element.Id === this.idSelected && element.IsPlan === true) {\n          element.Status = 4;\n          this.recalculateParentDoneRatio(element.ParentId);\n        }\n      });\n      this.scheduleProjectService.pending(this.idSelected).subscribe(data => {\n        if (data) {}\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    Resume() {\n      // Gán tình trạng công việc\n      this.listProjectProduct.forEach(element => {\n        if (element.Id === this.idSelected && element.IsPlan === true) {\n          element.Status = element.DoneRatio == 100 ? 3 : element.DoneRatio == 0 ? 1 : 2;\n          this.reCalculateDoneRatio(element.ParentId);\n        }\n      });\n      this.scheduleProjectService.resume(this.idSelected).subscribe(data => {\n        if (data) {}\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n    /**\r\n     * Cập nhật tiến độ thực hiện công việc\r\n     */\n\n\n    UpdateProgress() {\n      let activeModal = this.modalService.open(PlanCreateComponent, {\n        container: 'body',\n        windowClass: 'plan-create-model',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.Id = this.idSelected;\n      activeModal.componentInstance.Types = 1;\n      activeModal.result.then(result => {\n        if (result) {\n          // Gán tình trạng công việc\n          this.listProjectProduct.forEach(element => {\n            if (element.Id === this.idSelected && element.IsPlan === true) {\n              element.DoneRatio = result.DoneRatio;\n              element.Status = result.Status;\n              this.reCalculateDoneRatio(element.ParentId);\n            }\n          });\n        }\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    pastPlan() {\n      this.dataModel.ScheduleProject.ProjectId = this.modelSearchProject.ProjectId;\n\n      if (!this.dataModel.ScheduleProject.IsPlan && !this.dataModel.ScheduleProject.StageId) {\n        let checkStage = this.listProjectProduct.filter(a => a.ParentId == this.dataModel.ScheduleProject.Id && a.StageName === this.dataModel.ListCopyStage[0].StageName);\n\n        if (checkStage.length > 0) {\n          this.messageService.showMessage(\"Bạn chỉ có thể Copy công đoạn cho sản phẩm chưa có công đoạn này!\");\n          return;\n        }\n\n        this.scheduleProjectService.createStageCopy(this.dataModel).subscribe(data => {\n          this.messageService.showSuccess('Copy công đoạn thành công!');\n          this.searchSchedules();\n        }, error => {\n          this.messageService.showError(error);\n        });\n      } else if (!this.dataModel.ScheduleProject.IsPlan && this.dataModel.ScheduleProject.StageId) {\n        this.scheduleProjectService.createPlanCopy(this.dataModel).subscribe(data => {\n          this.messageService.showSuccess('Copy công việc thành công!');\n          this.searchSchedules();\n        }, error => {\n          this.messageService.showError(error);\n        });\n      }\n    }\n\n    closeModal() {\n      this.router.navigate(['du-an/quan-ly-du-an']);\n    }\n\n    orderByPipe(array, field, type) {\n      if (type == 1) // asc \n        {\n          let newarr = array.sort((a, b) => a[field] - b[field]);\n          return newarr;\n        } else // dsc\n        {\n          let newarr = array.sort((a, b) => b[field] - a[field]);\n          return newarr;\n        }\n    }\n\n    maxDate(arrays, field) {\n      let maxDueDate = arrays.sort((a, b) => new Date(b[field]).getTime() - new Date(a[field]).getTime())[0][field];\n      return maxDueDate;\n    }\n\n    minDate(arrays, field) {\n      // Loại khỏi danh sách những phần tử không có ngày trước khi tính Min\n      var temps = [];\n      arrays.forEach(element => {\n        if (element[field] !== null) {\n          temps.push(element);\n        }\n      });\n      let maxDueDate = temps.sort((a, b) => new Date(a[field]).getTime() - new Date(b[field]).getTime())[0][field];\n      return maxDueDate;\n    }\n\n    history() {\n      let activeModal = this.modalService.open(PlanHistoryComponent, {\n        container: 'body',\n        windowClass: 'plan-history-modal',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {\n        if (result && result.length > 0) {}\n      }, reason => {});\n    }\n\n    exportSummaryExcel() {\n      let activeModal = this.modalService.open(ReportPlanByDateComponent, {\n        container: 'body',\n        windowClass: 'report-plan-by-date',\n        backdrop: 'static'\n      });\n      activeModal.componentInstance.projectId = this.idProject;\n      activeModal.result.then(result => {\n        if (result && result.length > 0) {}\n      }, reason => {});\n    }\n\n  }\n\n  ScheduleProjectComponent.ɵfac = function ScheduleProjectComponent_Factory(t) {\n    return new (t || ScheduleProjectComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i1.PermissionService), i0.ɵɵdirectiveInject(i1.Constants), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ScheduleProjectService), i0.ɵɵdirectiveInject(i1.AppSetting), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.PlanService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Configuration), i0.ɵɵdirectiveInject(i1.ComboboxService), i0.ɵɵdirectiveInject(i1.DateUtils));\n  };\n\n  ScheduleProjectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScheduleProjectComponent,\n    selectors: [[\"app-schedule-project\"]],\n    viewQuery: function ScheduleProjectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(DxTreeListComponent, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.split = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.area1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.area2 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollScheduleDate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollScheduleDateHeader = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.perfectScroll = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollTree = _t.first);\n      }\n    },\n    inputs: {\n      idProject: \"idProject\",\n      hide: \"hide\",\n      Name: \"Name\",\n      idStageSelect: \"idStageSelect\"\n    },\n    decls: 71,\n    vars: 2,\n    consts: [[1, \"schedule-project\"], [1, \"row\", \"mb-1\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"text-right\"], [4, \"ngIf\"], [1, \"row\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-xl-6\", \"text-left\", \"mt-3\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"dropdownBasic1\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-primary\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-file-excel\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownBasic1\"], [\"type\", \"button\", \"container\", \"body\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-tachometer\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"show-item-search\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-xl-6\", \"text-right\", \"mt-3\"], [\"type\", \"button\", \"container\", \"body\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"fa\", \"fa-edit\"], [\"type\", \"button\", \"container\", \"body\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa\", \"fa-power-off\"], [1, \"col-md-12\"], [1, \"fas\", \"fa-plus-circle\", \"item-add\"], [1, \"padding-right-20\"], [1, \"fas\", \"fa-plus\", \"item-add\"], [1, \"fas\", \"fa-times\", \"item-delete\"], [1, \"far\", \"fa-plus-square\", \"item-add\"], [1, \"fas\", \"fa-exclamation-circle\", \"icon-danger\"], [\"unit\", \"percent\", 3, \"direction\", \"dragEnd\"], [\"split\", \"asSplit\"], [\"size\", \"100\", \"minSize\", \"30\"], [\"area1\", \"asSplitArea\"], [1, \"special-tree-list\"], [1, \"style-tree-list\"], [\"id\", \"projectProduct\", \"keyExpr\", \"Id\", \"parentIdExpr\", \"ParentId\", \"noDataText\", \" \", 1, \"sp-1\", 3, \"dataSource\", \"showRowLines\", \"showBorders\", \"columnAutoWidth\", \"expandedRowKeys\", \"height\", \"selectedRowKeys\", \"onRowExpanded\", \"onRowCollapsed\", \"onSelectionChanged\", \"onContentReady\", \"onRowUpdated\", \"onRowRemoved\", \"onEditingStart\", \"onRowPrepared\"], [\"scrollTree\", \"\"], [\"mode\", \"single\"], [\"mode\", \"cell\", 3, \"allowUpdating\"], [3, \"enabled\"], [\"dataField\", \"NameView\", \"caption\", \"S\\u1EA3n ph\\u1EA9m\", \"width\", \"200px\", \"cssClass\", \"employee\", \"cellTemplate\", \"listTemplateCode\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"RealQuantity\", \"caption\", \"SL\", \"width\", \"50px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", 3, \"allowSorting\", \"allowEditing\"], [4, \"dxTemplate\", \"dxTemplateOf\"], [\"dataField\", \"Weight\", \"caption\", \"Tr\\u1ECDng s\\u1ED1\", \"width\", \"50px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"StageName\", \"caption\", \"C\\u00F4ng \\u0111o\\u1EA1n\", \"width\", \"100px\", \"cssClass\", \"plan-header-cell\", \"cellTemplate\", \"listTemplateStage\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"PlanName\", \"caption\", \"C\\u00F4ng vi\\u1EC7c\", \"cssClass\", \"plan-header-cell\", \"cellTemplate\", \"listTemplatePlanName\", 3, \"minWidth\", \"allowSorting\", \"allowEditing\"], [\"dataField\", \"Type\", \"caption\", \"Ph\\u00E2n lo\\u1EA1i\", \"width\", \"55px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", 3, \"allowSorting\"], [\"valueExpr\", \"Id\", \"displayExpr\", \"Code\", 3, \"dataSource\"], [\"type\", \"required\"], [\"dataField\", \"ContractStartDate\", \"dataType\", \"date\", \"caption\", \"Ng\\u00E0y B\\u0110 H\\u0110\", \"width\", \"80px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", \"format\", \"dd/MM/yyyy\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"ContractDueDate\", \"dataType\", \"date\", \"caption\", \"Ng\\u00E0y KT H\\u0110\", \"width\", \"80px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", \"format\", \"dd/MM/yyyy\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"PlanStartDate\", \"dataType\", \"date\", \"caption\", \"Ng\\u00E0y b\\u1EAFt \\u0111\\u1EA7u tri\\u1EC3n khai\", \"width\", \"80px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", \"format\", \"dd/MM/yyyy\", 3, \"allowSorting\"], [\"dataField\", \"PlanDueDate\", \"dataType\", \"date\", \"caption\", \"Ng\\u00E0y k\\u1EBFt th\\u00FAc tri\\u1EC3n khai\", \"width\", \"80px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", \"format\", \"dd/MM/yyyy\", 3, \"allowSorting\"], [\"dataField\", \"Duration\", \"caption\", \"S\\u1ED1 ng\\u00E0y l\\u00E0m vi\\u1EC7c\", \"width\", \"50px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"EstimateTime\", \"caption\", \"S\\u1ED1 gi\\u1EDD l\\u00E0m\", \"width\", \"50px\", \"cssClass\", \"plan-header-cell\", \"alignment\", \"center\", 3, \"allowSorting\"], [\"dataField\", \"SupplierId\", \"caption\", \"Nh\\u00E0 th\\u1EA7u\", \"width\", \"75px\", \"cssClass\", \"plan-header-cell\", 3, \"allowSorting\", \"editorOptions\"], [\"valueExpr\", \"Id\", \"displayExpr\", \"Alias\", 3, \"dataSource\"], [\"dataField\", \"ResponsiblePersionName\", \"caption\", \"Ng\\u01B0\\u1EDDi ph\\u1EE5 tr\\u00E1ch\", \"width\", \"125px\", \"cssClass\", \"plan-header-cell\", \"cellTemplate\", \"listTemplatePlanAssignment\", 3, \"allowSorting\", \"allowEditing\"], [\"dataField\", \"InternalStatus\", \"caption\", \"T\\u00ECnh tr\\u1EA1ng c\\u00F4ng vi\\u1EC7c (n\\u1ED9i b\\u1ED9)\", \"width\", \"90px\", \"cssClass\", \"plan-header-cell\", 3, \"allowEditing\", \"allowSorting\"], [\"dataField\", \"Status\", \"caption\", \"T\\u00ECnh tr\\u1EA1ng CV\", \"width\", \"80px\", \"cssClass\", \"plan-header-cell\", \"cellTemplate\", \"listStatus\", 3, \"allowEditing\", \"allowSorting\"], [\"dataField\", \"DoneRatio\", \"caption\", \"% Ho\\u00E0n th\\u00E0nh\", \"cssClass\", \"plan-header-cell\", \"cellTemplate\", \"listTemplateDone\", 3, \"width\", \"allowEditing\", \"allowSorting\"], [\"keyExpr\", \"Id\", \"target\", \"#projectProduct\", 3, \"dataSource\", \"width\", \"onItemClick\"], [3, \"ngClass\", 4, \"dxTemplate\", \"dxTemplateOf\"], [1, \"name\", 2, \"cursor\", \"pointer\", 3, \"ngClass\", \"title\"], [1, \"fas\", \"fa-plus-circle\", \"item-add\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fa\", \"fa-exclamation-circle\", \"icon-danger\"], [2, \"cursor\", \"pointer\", 3, \"title\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-plus\", \"item-add\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"type\", \"checkbox\", 2, \"height\", \"15px\", \"width\", \"15px\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-times\", \"item-delete\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"middle\"], [\"aria-hidden\", \"true\", 1, \"far\", \"fa-plus-square\", \"item-add\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"text-center\"], [3, \"value\", \"items\"], [\"type\", \"success\", \"textType\", \"dark\", 3, \"value\", \"showValue\"], [3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ScheduleProjectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ScheduleProjectComponent_ng_container_3_Template, 42, 59, \"ng-container\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelementContainerStart(6);\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"button\", 7)(9, \"span\");\n        i0.ɵɵelement(10, \"i\", 8);\n        i0.ɵɵtext(11, \" \\u00A0Xu\\u1EA5t excel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_13_listener() {\n          return ctx.workingReport();\n        });\n        i0.ɵɵtext(14, \" B\\u00E1o c\\u00E1o c\\u00F4ng vi\\u1EC7c \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_15_listener() {\n          return ctx.exportSummaryExcel();\n        });\n        i0.ɵɵelement(16, \"i\", 12);\n        i0.ɵɵtext(17, \"\\u00A0 \");\n        i0.ɵɵelementStart(18, \"span\");\n        i0.ɵɵtext(19, \"Xu\\u1EA5t Excel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_20_listener() {\n          return ctx.exportExcelProjectSchedule();\n        });\n        i0.ɵɵelement(21, \"i\", 8);\n        i0.ɵɵtext(22, \" \\u00A0B\\u1EA3ng ti\\u1EBFn \\u0111\\u1ED9 t\\u1ED5ng th\\u1EC3 c\\u1EE7a d\\u1EF1 \\u00E1n \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtext(23, \"\\u00A0 \");\n        i0.ɵɵelementContainerStart(24);\n        i0.ɵɵelementStart(25, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_25_listener() {\n          return ctx.history();\n        });\n        i0.ɵɵelement(26, \"i\", 12);\n        i0.ɵɵtext(27, \"\\u00A0 \");\n        i0.ɵɵelementStart(28, \"span\");\n        i0.ɵɵtext(29, \"Xem l\\u1ECBch s\\u1EED thay \\u0111\\u1ED5i\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtext(30, \"\\u00A0 \");\n        i0.ɵɵelementContainerStart(31);\n        i0.ɵɵelementStart(32, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_32_listener() {\n          return ctx.popupSearch();\n        });\n        i0.ɵɵelement(33, \"i\", 12);\n        i0.ɵɵtext(34, \"\\u00A0 \");\n        i0.ɵɵelementStart(35, \"span\");\n        i0.ɵɵtext(36, \"L\\u1ECDc\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtext(37, \"\\u00A0 \");\n        i0.ɵɵelementStart(38, \"div\", 14);\n        i0.ɵɵtemplate(39, ScheduleProjectComponent_ul_39_Template, 2, 1, \"ul\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 15)(41, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_41_listener() {\n          return ctx.planAdjustment();\n        });\n        i0.ɵɵelement(42, \"i\", 17);\n        i0.ɵɵtext(43, \" \\u0110i\\u1EC1u ch\\u1EC9nh k\\u1EBF ho\\u1EA1ch \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44, \"\\u00A0 \");\n        i0.ɵɵelementStart(45, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function ScheduleProjectComponent_Template_button_click_45_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelement(46, \"i\", 19);\n        i0.ɵɵtext(47, \" \\u0110\\u00F3ng \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"hr\");\n        i0.ɵɵelementStart(49, \"div\", 4)(50, \"div\", 20);\n        i0.ɵɵelement(51, \"span\", 21);\n        i0.ɵɵtext(52, \"\\u00A0 \");\n        i0.ɵɵelementStart(53, \"small\", 22);\n        i0.ɵɵtext(54, \"Th\\u00EAm c\\u00F4ng \\u0111o\\u1EA1n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"span\", 23);\n        i0.ɵɵtext(56, \"\\u00A0 \");\n        i0.ɵɵelementStart(57, \"small\", 22);\n        i0.ɵɵtext(58, \"Th\\u00EAm c\\u00F4ng vi\\u1EC7c\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"span\", 24);\n        i0.ɵɵtext(60, \"\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(61, \"small\", 22);\n        i0.ɵɵtext(62, \"X\\u00F3a c\\u00F4ng vi\\u1EC7c\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(63, \"span\", 25);\n        i0.ɵɵtext(64, \"\\u00A0 \");\n        i0.ɵɵelementStart(65, \"small\", 22);\n        i0.ɵɵtext(66, \"Th\\u00EAm ng\\u01B0\\u1EDDi ph\\u1EE5 tr\\u00E1ch\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(67, \"i\", 26);\n        i0.ɵɵtext(68, \" \\u00A0 \");\n        i0.ɵɵelementStart(69, \"small\", 22);\n        i0.ɵɵtext(70, \"C\\u00F3 m\\u00F4 t\\u1EA3\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.hide == true);\n        i0.ɵɵadvance(36);\n        i0.ɵɵproperty(\"ngIf\", ctx.ItemSearch);\n      }\n    },\n    styles: [\".schedule-project .my-class{text-align:center}.schedule-project .plan{background-color:#69ff4b71}.schedule-project .holiday{background-color:#8a8a8a71!important}.schedule-project .selected{background-color:#e6e6e6!important}.schedule-project tr:hover{cursor:pointer}.schedule-project .dx-date-box-input{text-align:center;color:red}.schedule-project .dayOfWeek{background-color:#af8957}.schedule-project .sunday{background-color:#b83535}.schedule-project .item-update{border:none;text-align:center;color:#ff9100;background:none;padding-bottom:0;padding-top:0}.schedule-project .datetime{text-align:center;width:100px;display:inline-block}.schedule-project .special-tree-list tr.dx-row.dx-column-lines.dx-header-row{height:67px}.schedule-project tr.dx-row.dx-column-lines.dx-header-row td{vertical-align:middle!important;text-align:center!important}.schedule-project .item-delete{border:none;text-align:center;color:red;background:none;padding-bottom:0;padding-top:0;font-size:13.5px}.schedule-project .item-add{border:none;text-align:center;color:green;background:none;padding-bottom:0;padding-top:0}.schedule-project span.date-inline{bottom:0px!important}.schedule-project .style-tree-list{margin-top:0!important}.schedule-project .as-split-gutter{margin-top:0;height:auto!important}.schedule-project .as-split-area{overflow-y:hidden!important}.schedule-project .searchCondition{margin-top:39px}.schedule-project .cell-highlight .dx-datagrid .dx-row-alt>td{background-color:#23c6c8}.schedule-project .dx-header-row .plan-header-cell .dx-treelist-text-content{white-space:normal!important;text-align:center}.schedule-project .dx-header-row .plan-design{background-color:#e26c69!important}.schedule-project .dx-header-row .diary-plan{background-color:#f37f20!important}.schedule-project .font-weight-bold-sp{font-weight:600}.schedule-project .dx-treelist-table tr{height:34px!important}.schedule-project .table-date{font-size:10px}.schedule-project .table-date>thead>tr>th,.schedule-project .table-date>tbody>tr>th,.schedule-project .table-date>tfoot>tr>th{padding:3px}.schedule-project .plan-design .dx-treelist-text-content,.schedule-project .diary-plan .dx-treelist-text-content{white-space:normal!important;text-align:center}.schedule-project .plan-date{width:100px;margin-right:10px}.schedule-project .dx-treelist .dx-row>td{padding:6px!important}.schedule-project .vly{border-left:1px solid black;height:20px;margin-top:10px}.schedule-project .hr1{margin-top:20px}.schedule-project .divType{position:relative;display:flex;text-align:right}.schedule-project .tableColor{background-color:#fff;color:#000}.schedule-project .stage{background-color:#4169e1;color:#fff}.schedule-project .box{border-top:15px solid transparent;border-right:15px solid transparent;border-bottom:15px solid transparent;border-left:15px solid white;width:100%}.schedule-project .box1{border-top:30px solid transparent;border-right:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid royalblue;width:0}.schedule-project .box2{border-top:30px solid transparent;border-right:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid transparent;width:0}.schedule-project .progress{position:relative;border-radius:50px}.schedule-project .progress-bar span{position:absolute;padding-left:10px;color:#000}.schedule-project .grant-chart tr .progress{margin-top:0!important;margin-bottom:0!important;height:26px}.schedule-project .dx-row{height:34px!important}.schedule-project .project-product-parent{background-color:#a5cdff}.schedule-project .project-product-child{background-color:#feffdc}.dx-popup-wrapper>.dx-overlay-content{width:auto!important;max-width:auto!important}.show-item-search ul li{list-style:none;display:inline-block;padding:3px 5px;background:#efefef;margin:5px 5px 0 0;border-radius:5px;font-size:11px;line-height:14px}.show-item-search ul{margin:0;padding:0}.show-item-search ul li i.fas.fa-times{color:#565656;margin:0 0 0 4px;font-size:12px;cursor:pointer;transition:.3s}.show-item-search ul li i.fas.fa-times:hover{color:red}.date-now{padding:0!important}.date-now div{border-left:1px solid black;height:33px;margin-left:50%}\\n\"],\n    encapsulation: 2\n  });\n  return ScheduleProjectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}