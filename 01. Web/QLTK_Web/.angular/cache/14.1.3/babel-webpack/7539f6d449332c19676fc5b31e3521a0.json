{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let CustomerRequirementService = /*#__PURE__*/(() => {\n  class CustomerRequirementService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    search(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/search', model, httpOptions);\n      return tr;\n    }\n\n    generateCode() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/GenerateCode', httpOptions);\n      return tr;\n    }\n\n    create(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/create', model, httpOptions);\n      return tr;\n    }\n\n    getById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'customer-requirement/get-by-id/' + id, httpOptions);\n      return tr;\n    }\n\n    update(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/update/' + id, model, httpOptions);\n      return tr;\n    }\n\n    delete(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/delete/' + id, httpOptions);\n      return tr;\n    }\n\n    nextStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/next-status/' + id, httpOptions);\n      return tr;\n    }\n\n    nextDoubleStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/next-double-status/' + id, httpOptions);\n      return tr;\n    }\n\n    backStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/back-status/' + id, httpOptions);\n      return tr;\n    }\n\n    backDoubleStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/back-double-status/' + id, httpOptions);\n      return tr;\n    }\n\n    getCustomerrequirementCode(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/getCustomerrequirementCode', model, httpOptions);\n      return tr;\n    }\n\n    nextStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/NextStep', model, httpOptions);\n      return tr;\n    }\n\n    backStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/BackStep', model, httpOptions);\n      return tr;\n    }\n\n    nextThreeStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/NextThreeStep', model, httpOptions);\n      return tr;\n    }\n\n    backThreeStep(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/BackThreeStep', model, httpOptions);\n      return tr;\n    }\n\n    checkDeleteSurvey(customerRequirementId) {\n      var tr = this.http.delete(this.config.ServerWithApiUrl + 'Expert/Checkdelete/' + customerRequirementId);\n      return tr;\n    }\n\n    updateCustomerRequirementSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/UpdateCustomerRequirementSolution', model, httpOptions);\n      return tr;\n    }\n\n    getProductNeedSolutionById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'customer-requirement/get-product-need-solution/' + id, httpOptions);\n      return tr;\n    }\n\n    getProductNeedPriceById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'customer-requirement/get-product-need-price/' + id, httpOptions);\n      return tr;\n    }\n\n    updateStatusSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/update-status-solution', model, httpOptions);\n      return tr;\n    }\n\n    getCustomerRequirementSolutionContentById(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-customer-requirement-solution-content', id, httpOptions);\n      return tr;\n    }\n\n    getCustomerRequirementProductSolutionById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-customer-requirement-product-solution', model, httpOptions);\n      return tr;\n    }\n\n    getProtectSolutionById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-protect-solution', model, httpOptions);\n      return tr;\n    }\n\n    getMeetingByCustomerRequirementId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-meeting-by-customer-requirement-id', model, httpOptions);\n      return tr;\n    }\n\n    getProjectByCustomerRequirementId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-project-by-customer-requirement-id', model, httpOptions);\n      return tr;\n    }\n\n    getSolutionByCustomerId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/get-solution-by-customer-id', model, httpOptions);\n      return tr;\n    }\n\n    createUpdate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/createUpdateCustomerRequirementContent', model, httpOptions);\n      return tr;\n    }\n\n    deleteCustomerRequirementContent(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/deleteCustomerRequirementContent/' + id, httpOptions);\n      return tr;\n    }\n\n    SearchCustomerRequirementContentModelById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'customer-requirement/SearchCustomerRequirementContentModelById?id=' + model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  CustomerRequirementService.ɵfac = function CustomerRequirementService_Factory(t) {\n    return new (t || CustomerRequirementService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  CustomerRequirementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerRequirementService,\n    factory: CustomerRequirementService.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomerRequirementService;\n})();","map":null,"metadata":{},"sourceType":"module"}