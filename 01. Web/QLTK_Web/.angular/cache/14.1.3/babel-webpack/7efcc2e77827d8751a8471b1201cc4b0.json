{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../shared/services/message.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, messageService) {\n      this.router = router;\n      this.messageService = messageService;\n    }\n\n    canActivate(route, state) {\n      let userStore = localStorage.getItem('qltkcurrentUser');\n\n      if (userStore) {\n        let user = JSON.parse(userStore);\n\n        if (user && user.LoginDate) {\n          let dateNow = new Date().getTime();\n          let loginDate = new Date(user.LoginDate).getTime();\n          let msec = dateNow - loginDate;\n\n          if (Math.floor(msec / 60000 / 60) < user.expiretime) {\n            // logged in so return true\n            return true;\n          } else {\n            localStorage.removeItem('qltkcurrentUser'); ///this.messageService.showMessage(\"Bạn đã hết phiên làm việc. Bạn hãy đăng nhập lại để tiếp tục.\", 1);\n          }\n        }\n      } // not logged in so redirect to login page with the return url\n\n\n      this.router.navigate(['auth/dang-nhap'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.MessageService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}