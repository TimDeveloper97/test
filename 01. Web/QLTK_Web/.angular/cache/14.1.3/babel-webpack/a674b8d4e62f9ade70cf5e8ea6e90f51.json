{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.dialogs.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport messageLocalization from \"../../localization/message\";\nimport Popup from \"../popup\";\nimport { extend } from \"../../core/utils/extend\";\n\nclass DiagramDialog extends Widget {\n  _init() {\n    super._init();\n\n    this._command = void 0;\n    this._isShown = false;\n\n    this._createOnGetContentOption();\n\n    this._createOnHiddenOption();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this._command = this.option(\"command\");\n    this._$popupElement = $(\"<div>\").appendTo(this.$element());\n    this._popup = this._createComponent(this._$popupElement, Popup, {\n      title: this.option(\"title\"),\n      maxWidth: this.option(\"maxWidth\"),\n      height: this.option(\"height\"),\n      toolbarItems: this.option(\"toolbarItems\"),\n      onHidden: this._onHiddenAction\n    });\n  }\n\n  _clean() {\n    delete this._popup;\n    this._$popupElement && this._$popupElement.remove();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      title: \"\",\n      maxWidth: 500,\n      height: \"auto\",\n      toolbarItems: this._getToolbarItems()\n    });\n  }\n\n  _getToolbarItems() {\n    return [this._getOkToolbarItem(), this._getCancelToolbarItem()];\n  }\n\n  _getOkToolbarItem() {\n    return {\n      widget: \"dxButton\",\n      location: \"after\",\n      toolbar: \"bottom\",\n      options: {\n        text: messageLocalization.format(\"dxDiagram-dialogButtonOK\"),\n        onClick: function () {\n          this._command.execute(this._commandParameter);\n\n          this._hide();\n        }.bind(this)\n      }\n    };\n  }\n\n  _getCancelToolbarItem() {\n    return {\n      widget: \"dxButton\",\n      location: \"after\",\n      toolbar: \"bottom\",\n      options: {\n        text: messageLocalization.format(\"dxDiagram-dialogButtonCancel\"),\n        onClick: this._hide.bind(this)\n      }\n    };\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"title\":\n      case \"maxWidth\":\n      case \"height\":\n      case \"toolbarItems\":\n        this._popup.option(args.name, args.value);\n\n        break;\n\n      case \"command\":\n        this._command = args.value;\n        break;\n\n      case \"onGetContent\":\n        this._createOnGetContentOption();\n\n        break;\n\n      case \"onHidden\":\n        this._createOnHiddenOption();\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _createOnGetContentOption() {\n    this._onGetContentAction = this._createActionByOption(\"onGetContent\");\n  }\n\n  _createOnHiddenOption() {\n    this._onHiddenAction = this._createActionByOption(\"onHidden\");\n  }\n\n  _hide() {\n    this._popup.hide();\n\n    this._isShown = false;\n  }\n\n  _show() {\n    this._popup.$content().empty().append(this._onGetContentAction());\n\n    this._popup.show();\n\n    this._isShown = true;\n  }\n\n  isVisible() {\n    return this._isShown;\n  }\n\n}\n\nexport default DiagramDialog;","map":null,"metadata":{},"sourceType":"module"}