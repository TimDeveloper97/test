{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy_horizontal_month_line.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport HorizontalAppointmentsStrategy from \"./strategy_horizontal\";\nimport dateUtils from \"../../../../core/utils/date\";\nimport query from \"../../../../data/query\";\nimport { sortAppointmentsByStartDate } from \"../dataProvider/utils\";\nvar HOURS_IN_DAY = 24;\nvar MINUTES_IN_HOUR = 60;\nvar MILLISECONDS_IN_MINUTE = 6e4;\nvar ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;\n\nclass HorizontalMonthLineRenderingStrategy extends HorizontalAppointmentsStrategy {\n  calculateAppointmentWidth(appointment, position) {\n    var startDate = dateUtils.trimTime(position.info.appointment.startDate);\n    var {\n      normalizedEndDate: normalizedEndDate\n    } = position.info.appointment;\n    var cellWidth = this.cellWidth || this.getAppointmentMinSize();\n    var duration = Math.ceil(this._getDurationInDays(startDate, normalizedEndDate));\n    var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);\n\n    if (this.isVirtualScrolling) {\n      var skippedDays = this.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, normalizedEndDate, duration);\n      width -= skippedDays * cellWidth;\n    }\n\n    return width;\n  }\n\n  _getDurationInDays(startDate, endDate) {\n    var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);\n\n    return adjustedDuration / dateUtils.dateToMilliseconds(\"day\") || ZERO_APPOINTMENT_DURATION_IN_DAYS;\n  }\n\n  getDeltaTime(args, initialSize) {\n    return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize);\n  }\n\n  isAllDay() {\n    return false;\n  }\n\n  createTaskPositionMap(items, skipSorting) {\n    if (!skipSorting) {\n      sortAppointmentsByStartDate(items, this.dataAccessors);\n    }\n\n    return super.createTaskPositionMap(items);\n  }\n\n  _getSortedPositions(map, skipSorting) {\n    var result = super._getSortedPositions(map);\n\n    if (!skipSorting) {\n      result = query(result).sortBy(\"top\").thenBy(\"left\").thenBy(\"cellPosition\").thenBy(\"i\").toArray();\n    }\n\n    return result;\n  }\n\n  needCorrectAppointmentDates() {\n    return false;\n  }\n\n  getPositionShift() {\n    return {\n      top: 0,\n      left: 0,\n      cellPosition: 0\n    };\n  }\n\n}\n\nexport default HorizontalMonthLineRenderingStrategy;","map":null,"metadata":{},"sourceType":"module"}