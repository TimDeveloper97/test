{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/notify.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport Action from \"../core/action\";\nimport { value as viewPort } from \"../core/utils/view_port\";\nimport { extend } from \"../core/utils/extend\";\nimport { isPlainObject, isString } from \"../core/utils/type\";\nimport { getWindow } from \"../core/utils/window\";\nimport Toast from \"./toast\";\nvar window = getWindow();\nvar $notify = null;\nvar $containers = {};\n\nfunction notify(message, typeOrStack, displayTime) {\n  var options = isPlainObject(message) ? message : {\n    message: message\n  };\n  var stack = isPlainObject(typeOrStack) ? typeOrStack : void 0;\n  var type = isPlainObject(typeOrStack) ? void 0 : typeOrStack;\n  var {\n    onHidden: userHiddenAction\n  } = options;\n\n  if (null !== stack && void 0 !== stack && stack.position) {\n    var {\n      position: position\n    } = stack;\n    var direction = stack.direction || getDefaultDirection(position);\n    var containerKey = isString(position) ? position : \"\".concat(position.top, \"-\").concat(position.left, \"-\").concat(position.bottom, \"-\").concat(position.right);\n    var {\n      onShowing: userShowingAction\n    } = options;\n    var $container = getStackContainer(containerKey);\n    setContainerClasses($container, direction);\n    extend(options, {\n      container: $container,\n      onShowing: function (args) {\n        setContainerStyles($container, direction, position);\n        new Action(userShowingAction, {\n          context: args.model\n        }).execute(arguments);\n      }\n    });\n  }\n\n  extend(options, {\n    type: type,\n    displayTime: displayTime,\n    onHidden: function (args) {\n      $(args.element).remove();\n      new Action(userHiddenAction, {\n        context: args.model\n      }).execute(arguments);\n    }\n  });\n  $notify = $(\"<div>\").appendTo(viewPort());\n  new Toast($notify, options).show();\n}\n\nvar getDefaultDirection = position => isString(position) && position.includes(\"top\") ? \"down-push\" : \"up-push\";\n\nvar createStackContainer = key => {\n  var $container = $(\"<div>\").appendTo(viewPort());\n  $containers[key] = $container;\n  return $container;\n};\n\nvar getStackContainer = key => {\n  var $container = $containers[key];\n  return $container ? $container : createStackContainer(key);\n};\n\nvar setContainerClasses = (container, direction) => {\n  var containerClasses = \"dx-toast-stack dx-toast-stack-\".concat(direction, \"-direction\");\n  container.removeAttr(\"class\").addClass(containerClasses);\n};\n\nvar setContainerStyles = (container, direction, position) => {\n  var {\n    offsetWidth: toastWidth,\n    offsetHeight: toastHeight\n  } = container.children().first().get(0);\n  var dimensions = {\n    toastWidth: toastWidth,\n    toastHeight: toastHeight,\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth\n  };\n  var coordinates = isString(position) ? getCoordinatesByAlias(position, dimensions) : position;\n  var styles = getPositionStylesByCoordinates(direction, coordinates, dimensions);\n  container.css(styles);\n};\n\nvar getCoordinatesByAlias = (alias, _ref) => {\n  var {\n    toastWidth: toastWidth,\n    toastHeight: toastHeight,\n    windowHeight: windowHeight,\n    windowWidth: windowWidth\n  } = _ref;\n\n  switch (alias) {\n    case \"top left\":\n      return {\n        top: 10,\n        left: 10\n      };\n\n    case \"top right\":\n      return {\n        top: 10,\n        right: 10\n      };\n\n    case \"bottom left\":\n      return {\n        bottom: 10,\n        left: 10\n      };\n\n    case \"bottom right\":\n      return {\n        bottom: 10,\n        right: 10\n      };\n\n    case \"top center\":\n      return {\n        top: 10,\n        left: Math.round(windowWidth / 2 - toastWidth / 2)\n      };\n\n    case \"left center\":\n      return {\n        top: Math.round(windowHeight / 2 - toastHeight / 2),\n        left: 10\n      };\n\n    case \"right center\":\n      return {\n        top: Math.round(windowHeight / 2 - toastHeight / 2),\n        right: 10\n      };\n\n    case \"center\":\n      return {\n        top: Math.round(windowHeight / 2 - toastHeight / 2),\n        left: Math.round(windowWidth / 2 - toastWidth / 2)\n      };\n\n    case \"bottom center\":\n    default:\n      return {\n        bottom: 10,\n        left: Math.round(windowWidth / 2 - toastWidth / 2)\n      };\n  }\n};\n\nvar getPositionStylesByCoordinates = (direction, coordinates, dimensions) => {\n  var _coordinates$bottom, _coordinates$left, _coordinates$right, _coordinates$top, _coordinates$left2, _coordinates$right2, _coordinates$right3, _coordinates$top2, _coordinates$bottom2, _coordinates$left3, _coordinates$top3, _coordinates$bottom3;\n\n  var {\n    toastWidth: toastWidth,\n    toastHeight: toastHeight,\n    windowHeight: windowHeight,\n    windowWidth: windowWidth\n  } = dimensions;\n\n  switch (direction.replace(/-push|-stack/g, \"\")) {\n    case \"up\":\n      return {\n        bottom: null !== (_coordinates$bottom = coordinates.bottom) && void 0 !== _coordinates$bottom ? _coordinates$bottom : windowHeight - toastHeight - coordinates.top,\n        top: \"\",\n        left: null !== (_coordinates$left = coordinates.left) && void 0 !== _coordinates$left ? _coordinates$left : \"\",\n        right: null !== (_coordinates$right = coordinates.right) && void 0 !== _coordinates$right ? _coordinates$right : \"\"\n      };\n\n    case \"down\":\n      return {\n        top: null !== (_coordinates$top = coordinates.top) && void 0 !== _coordinates$top ? _coordinates$top : windowHeight - toastHeight - coordinates.bottom,\n        bottom: \"\",\n        left: null !== (_coordinates$left2 = coordinates.left) && void 0 !== _coordinates$left2 ? _coordinates$left2 : \"\",\n        right: null !== (_coordinates$right2 = coordinates.right) && void 0 !== _coordinates$right2 ? _coordinates$right2 : \"\"\n      };\n\n    case \"left\":\n      return {\n        right: null !== (_coordinates$right3 = coordinates.right) && void 0 !== _coordinates$right3 ? _coordinates$right3 : windowWidth - toastWidth - coordinates.left,\n        left: \"\",\n        top: null !== (_coordinates$top2 = coordinates.top) && void 0 !== _coordinates$top2 ? _coordinates$top2 : \"\",\n        bottom: null !== (_coordinates$bottom2 = coordinates.bottom) && void 0 !== _coordinates$bottom2 ? _coordinates$bottom2 : \"\"\n      };\n\n    case \"right\":\n      return {\n        left: null !== (_coordinates$left3 = coordinates.left) && void 0 !== _coordinates$left3 ? _coordinates$left3 : windowWidth - toastWidth - coordinates.right,\n        right: \"\",\n        top: null !== (_coordinates$top3 = coordinates.top) && void 0 !== _coordinates$top3 ? _coordinates$top3 : \"\",\n        bottom: null !== (_coordinates$bottom3 = coordinates.bottom) && void 0 !== _coordinates$bottom3 ? _coordinates$bottom3 : \"\"\n      };\n  }\n};\n\nexport default notify;","map":null,"metadata":{},"sourceType":"module"}