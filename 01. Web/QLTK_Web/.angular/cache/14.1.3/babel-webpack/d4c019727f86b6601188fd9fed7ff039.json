{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { ImportExcelComponent } from '../component/import-excel/import-excel.component';\nimport { ChooseFolderShareModalComponent } from '../component/choose-folder-share-modal/choose-folder-share-modal.component';\nimport { ChooseFileModalComponent } from '../component/choose-file-modal/choose-file-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"./ntsmodal.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nexport let ComponentService = /*#__PURE__*/(() => {\n  class ComponentService {\n    constructor(modalService, ntsModalService, router, toastr) {\n      this.modalService = modalService;\n      this.ntsModalService = ntsModalService;\n      this.router = router;\n      this.toastr = toastr;\n    }\n\n    showImportExcel(templatePath, isData) {\n      var importExcel = new Observable(observer => {\n        const activeModal = this.modalService.open(ImportExcelComponent, {\n          container: 'body',\n          backdrop: 'static'\n        });\n        activeModal.componentInstance.templatePath = templatePath;\n        activeModal.componentInstance.isData = isData;\n        activeModal.result.then(result => {\n          observer.next(result);\n          observer.unsubscribe();\n        }, reason => {\n          observer.next(false);\n          observer.unsubscribe();\n        });\n      });\n      return importExcel;\n    }\n\n    showImportExcelCallback(getData, isData) {\n      var importExcel = new Observable(observer => {\n        const activeModal = this.modalService.open(ImportExcelComponent, {\n          container: 'body',\n          backdrop: 'static'\n        });\n        activeModal.componentInstance.isGetData = true;\n        activeModal.componentInstance.getData = getData;\n        activeModal.componentInstance.isData = isData;\n        activeModal.result.then(result => {\n          observer.next(result);\n          observer.unsubscribe();\n        }, reason => {\n          observer.next(false);\n          observer.unsubscribe();\n        });\n      });\n      return importExcel;\n    }\n\n    showChooseFolder(type, designType, id) {\n      var chooseFolder = new Observable(observer => {\n        const activeModal = this.modalService.open(ChooseFolderShareModalComponent, {\n          container: 'body',\n          windowClass: 'choose-folder-share-modal',\n          backdrop: 'static'\n        });\n        activeModal.componentInstance.type = type;\n        activeModal.componentInstance.designType = designType;\n        activeModal.componentInstance.id = id;\n        activeModal.result.then(result => {\n          observer.next(result);\n          observer.unsubscribe();\n        }, reason => {\n          observer.next(false);\n          observer.unsubscribe();\n        });\n      });\n      return chooseFolder;\n    }\n\n    showChooseFile(templatePath) {\n      var chooseFolderFile = new Observable(observer => {\n        const activeModal = this.modalService.open(ChooseFileModalComponent, {\n          container: 'body',\n          windowClass: 'choose-file-modal',\n          backdrop: 'static'\n        });\n        activeModal.componentInstance.templatePath = templatePath;\n        activeModal.result.then(result => {\n          observer.next(result);\n          observer.unsubscribe();\n        }, reason => {\n          observer.next(false);\n          observer.unsubscribe();\n        });\n      });\n      return chooseFolderFile;\n    }\n\n  }\n\n  ComponentService.ɵfac = function ComponentService_Factory(t) {\n    return new (t || ComponentService)(i0.ɵɵinject(i1.NgbModal), i0.ɵɵinject(i2.NTSModalService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.ToastrService));\n  };\n\n  ComponentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ComponentService,\n    factory: ComponentService.ɵfac,\n    providedIn: 'root'\n  });\n  return ComponentService;\n})();","map":null,"metadata":{},"sourceType":"module"}