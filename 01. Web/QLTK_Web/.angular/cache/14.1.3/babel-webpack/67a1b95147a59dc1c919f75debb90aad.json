{"ast":null,"code":"/**\r\n * DevExtreme (esm/file_management/provider_base.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter } from \"../core/utils/data\";\nimport { ensureDefined } from \"../core/utils/common\";\nimport dateSerialization from \"../core/utils/date_serialization\";\nimport { each } from \"../core/utils/iterator\";\nimport { isPromise } from \"../core/utils/type\";\nimport { Deferred, fromPromise } from \"../core/utils/deferred\";\nimport FileSystemItem from \"./file_system_item\";\nvar DEFAULT_FILE_UPLOAD_CHUNK_SIZE = 2e5;\n\nclass FileSystemProviderBase {\n  constructor(options) {\n    options = ensureDefined(options, {});\n    this._keyGetter = compileGetter(this._getKeyExpr(options));\n    this._nameGetter = compileGetter(this._getNameExpr(options));\n    this._isDirGetter = compileGetter(this._getIsDirExpr(options));\n    this._sizeGetter = compileGetter(this._getSizeExpr(options));\n    this._dateModifiedGetter = compileGetter(this._getDateModifiedExpr(options));\n    this._thumbnailGetter = compileGetter(options.thumbnailExpr || \"thumbnail\");\n  }\n\n  getItems(parentDirectory) {\n    return [];\n  }\n\n  renameItem(item, name) {}\n\n  createDirectory(parentDirectory, name) {}\n\n  deleteItems(items) {}\n\n  moveItems(items, destinationDirectory) {}\n\n  copyItems(items, destinationDirectory) {}\n\n  uploadFileChunk(fileData, chunksInfo, destinationDirectory) {}\n\n  abortFileUpload(fileData, chunksInfo, destinationDirectory) {}\n\n  downloadItems(items) {}\n\n  getItemsContent(items) {}\n\n  getFileUploadChunkSize() {\n    return DEFAULT_FILE_UPLOAD_CHUNK_SIZE;\n  }\n\n  _convertDataObjectsToFileItems(entries, pathInfo) {\n    var result = [];\n    each(entries, (_, entry) => {\n      var fileItem = this._createFileItem(entry, pathInfo);\n\n      result.push(fileItem);\n    });\n    return result;\n  }\n\n  _createFileItem(dataObj, pathInfo) {\n    var key = this._keyGetter(dataObj);\n\n    var fileItem = new FileSystemItem(pathInfo, this._nameGetter(dataObj), !!this._isDirGetter(dataObj), key);\n    fileItem.size = this._sizeGetter(dataObj);\n\n    if (void 0 === fileItem.size) {\n      fileItem.size = 0;\n    }\n\n    fileItem.dateModified = dateSerialization.deserializeDate(this._dateModifiedGetter(dataObj));\n\n    if (void 0 === fileItem.dateModified) {\n      fileItem.dateModified = new Date();\n    }\n\n    if (fileItem.isDirectory) {\n      fileItem.hasSubDirectories = this._hasSubDirs(dataObj);\n    }\n\n    if (!key) {\n      fileItem.key = fileItem.relativeName;\n    }\n\n    fileItem.thumbnail = this._thumbnailGetter(dataObj) || \"\";\n    fileItem.dataItem = dataObj;\n    return fileItem;\n  }\n\n  _hasSubDirs(dataObj) {\n    return true;\n  }\n\n  _getKeyExpr(options) {\n    return options.keyExpr || this._defaultKeyExpr;\n  }\n\n  _defaultKeyExpr(fileItem) {\n    if (2 === arguments.length) {\n      fileItem.__KEY__ = arguments[1];\n      return;\n    }\n\n    return Object.prototype.hasOwnProperty.call(fileItem, \"__KEY__\") ? fileItem.__KEY__ : null;\n  }\n\n  _getNameExpr(options) {\n    return options.nameExpr || \"name\";\n  }\n\n  _getIsDirExpr(options) {\n    return options.isDirectoryExpr || \"isDirectory\";\n  }\n\n  _getSizeExpr(options) {\n    return options.sizeExpr || \"size\";\n  }\n\n  _getDateModifiedExpr(options) {\n    return options.dateModifiedExpr || \"dateModified\";\n  }\n\n  _executeActionAsDeferred(action, keepResult) {\n    var deferred = new Deferred();\n\n    try {\n      var result = action();\n\n      if (isPromise(result)) {\n        fromPromise(result).done(userResult => deferred.resolve(keepResult && userResult || void 0)).fail(error => deferred.reject(error));\n      } else {\n        deferred.resolve(keepResult && result || void 0);\n      }\n    } catch (error) {\n      return deferred.reject(error);\n    }\n\n    return deferred.promise();\n  }\n\n}\n\nexport default FileSystemProviderBase;","map":null,"metadata":{},"sourceType":"module"}