{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProjectTransferAttachService = /*#__PURE__*/(() => {\n  class ProjectTransferAttachService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchProjectTransferAttach(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/SearchProjectTransferAttach', model, httpOptions);\n      return tr;\n    }\n\n    addProjectTransferAttach(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/AddProjectTransferAttach', model, httpOptions);\n      return tr;\n    }\n\n    getProjectProductToTranfer(projectId, fileId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/GetProjectProductToTranfer?projectId=' + projectId + '&fileId=' + fileId, httpOptions);\n      return tr;\n    }\n\n    StatusTrangerProduct(projectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/StatusTrangerProduct?projectId=' + projectId, httpOptions);\n      return tr;\n    }\n\n    getListPlanTransferByProjectId(projectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/GetListPlanTransferByProjectId?projectId=' + projectId, httpOptions);\n      return tr;\n    }\n\n    updatePlanStatusByProjectId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectTransferAttach/UpdatePlanStatusByProjectId', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProjectTransferAttachService.ɵfac = function ProjectTransferAttachService_Factory(t) {\n    return new (t || ProjectTransferAttachService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProjectTransferAttachService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectTransferAttachService,\n    factory: ProjectTransferAttachService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectTransferAttachService;\n})();","map":null,"metadata":{},"sourceType":"module"}