{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let SolutionService = /*#__PURE__*/(() => {\n  class SolutionService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/SearchSolution', model, httpOptions);\n      return tr;\n    }\n\n    getSolutionInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/GetSolutionInfo', model, httpOptions);\n      return tr;\n    }\n\n    createSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/AddSolution', model, httpOptions);\n      return tr;\n    }\n\n    updateSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/UpdateSolution', model, httpOptions);\n      return tr;\n    }\n\n    deleteSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/DeleteSolution', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    searchProjectSolution(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/SearchProjectSolution', model, httpOptions);\n      return tr;\n    }\n\n    getSolutionCode(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/GetSolutionCode', model, httpOptions);\n      return tr;\n    }\n\n    uploadDesignDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/UploadDesignDocument', model, httpOptions);\n      return tr;\n    }\n\n    uploadFileDesignDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/UploadFileDesignDocument', model, httpOptions);\n      return tr;\n    }\n\n    getListFolderSolution(solutionId, curentVersion) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Solution/GetListFolderSolution?solutionId=' + solutionId + '&&curentVersion=' + curentVersion, httpOptions);\n      return tr;\n    }\n\n    getListFileSolution(modal) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Solution/GetListFileSolution/', modal, httpOptions);\n      return tr;\n    }\n\n    getSolutionOldVersion(solutionId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Solution/GetSolutionOldVersion?solutionId=' + solutionId, httpOptions);\n      return tr;\n    }\n\n  }\n\n  SolutionService.ɵfac = function SolutionService_Factory(t) {\n    return new (t || SolutionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  SolutionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SolutionService,\n    factory: SolutionService.ɵfac,\n    providedIn: 'root'\n  });\n  return SolutionService;\n})();","map":null,"metadata":{},"sourceType":"module"}