{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.actions.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getPublicElement } from \"../../core/element\";\nvar Actions = {\n  onContextMenuPreparing: \"onContextMenuPreparing\",\n  onCustomCommand: \"onCustomCommand\",\n  onDependencyDeleted: \"onDependencyDeleted\",\n  onDependencyDeleting: \"onDependencyDeleting\",\n  onDependencyInserted: \"onDependencyInserted\",\n  onDependencyInserting: \"onDependencyInserting\",\n  onResourceAssigned: \"onResourceAssigned\",\n  onResourceAssigning: \"onResourceAssigning\",\n  onResourceDeleted: \"onResourceDeleted\",\n  onResourceDeleting: \"onResourceDeleting\",\n  onResourceInserted: \"onResourceInserted\",\n  onResourceInserting: \"onResourceInserting\",\n  onResourceManagerDialogShowing: \"onResourceManagerDialogShowing\",\n  onResourceUnassigned: \"onResourceUnassigned\",\n  onResourceUnassigning: \"onResourceUnassigning\",\n  onSelectionChanged: \"onSelectionChanged\",\n  onTaskClick: \"onTaskClick\",\n  onTaskDblClick: \"onTaskDblClick\",\n  onTaskDeleted: \"onTaskDeleted\",\n  onTaskDeleting: \"onTaskDeleting\",\n  onTaskEditDialogShowing: \"onTaskEditDialogShowing\",\n  onTaskInserted: \"onTaskInserted\",\n  onTaskInserting: \"onTaskInserting\",\n  onTaskMoving: \"onTaskMoving\",\n  onTaskUpdated: \"onTaskUpdated\",\n  onTaskUpdating: \"onTaskUpdating\",\n  onScaleCellPrepared: \"onScaleCellPrepared\"\n};\nvar GANTT_TASKS = \"tasks\";\nvar GANTT_DEPENDENCIES = \"dependencies\";\nvar GANTT_RESOURCES = \"resources\";\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\nexport class GanttActionsManager {\n  constructor(gantt) {\n    this._gantt = gantt;\n    this._mappingHelper = gantt._mappingHelper;\n    this._customFieldsManager = gantt._customFieldsManager;\n  }\n\n  _createActionByOption(optionName) {\n    return this._gantt._createActionByOption(optionName);\n  }\n\n  _getTaskData(key) {\n    return this._gantt.getTaskData(key);\n  }\n\n  _convertCoreToMappedData(optionName, coreData) {\n    return this._mappingHelper.convertCoreToMappedData(optionName, coreData);\n  }\n\n  _convertMappedToCoreData(optionName, mappedData) {\n    return this._mappingHelper.convertMappedToCoreData(optionName, mappedData);\n  }\n\n  _convertMappedToCoreFields(optionName, fields) {\n    return this._mappingHelper.convertMappedToCoreFields(optionName, fields);\n  }\n\n  _convertCoreToMappedFields(optionName, fields) {\n    return this._mappingHelper.convertCoreToMappedFields(optionName, fields);\n  }\n\n  _saveCustomFieldsDataToCache(key, data) {\n    var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n    var isCustomFieldsUpdateOnly = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n\n    this._customFieldsManager.saveCustomFieldsDataToCache(key, data, forceUpdateOnKeyExpire, isCustomFieldsUpdateOnly);\n  }\n\n  createTaskDblClickAction() {\n    this._taskDblClickAction = this._createActionByOption(Actions.onTaskDblClick);\n  }\n\n  taskDblClickAction(args) {\n    if (!this._taskDblClickAction) {\n      this.createTaskDblClickAction();\n    }\n\n    this._taskDblClickAction(args);\n  }\n\n  raiseTaskDblClickAction(key, event) {\n    var args = {\n      cancel: false,\n      data: this._getTaskData(key),\n      event: event,\n      key: key\n    };\n    this.taskDblClickAction(args);\n    return !args.cancel;\n  }\n\n  createTaskClickAction() {\n    this._taskClickAction = this._createActionByOption(Actions.onTaskClick);\n  }\n\n  taskClickAction(args) {\n    if (!this._taskClickAction) {\n      this.createTaskClickAction();\n    }\n\n    this._taskClickAction(args);\n  }\n\n  raiseTaskClickAction(key, event) {\n    var args = {\n      key: key,\n      event: event,\n      data: this._getTaskData(key)\n    };\n    this.taskClickAction(args);\n  }\n\n  createSelectionChangedAction() {\n    this._selectionChangedAction = this._createActionByOption(Actions.onSelectionChanged);\n  }\n\n  selectionChangedAction(args) {\n    if (!this._selectionChangedAction) {\n      this.createSelectionChangedAction();\n    }\n\n    this._selectionChangedAction(args);\n  }\n\n  raiseSelectionChangedAction(selectedRowKey) {\n    this.selectionChangedAction({\n      selectedRowKey: selectedRowKey\n    });\n  }\n\n  createCustomCommandAction() {\n    this._customCommandAction = this._createActionByOption(Actions.onCustomCommand);\n  }\n\n  customCommandAction(args) {\n    if (!this._customCommandAction) {\n      this.createCustomCommandAction();\n    }\n\n    this._customCommandAction(args);\n  }\n\n  raiseCustomCommand(commandName) {\n    this.customCommandAction({\n      name: commandName\n    });\n  }\n\n  createContextMenuPreparingAction() {\n    this._contextMenuPreparingAction = this._createActionByOption(Actions.onContextMenuPreparing);\n  }\n\n  contextMenuPreparingAction(args) {\n    if (!this._contextMenuPreparingAction) {\n      this.createContextMenuPreparingAction();\n    }\n\n    this._contextMenuPreparingAction(args);\n  }\n\n  raiseContextMenuPreparing(options) {\n    this.contextMenuPreparingAction(options);\n  }\n\n  _getInsertingAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskInsertingAction();\n\n      case GANTT_DEPENDENCIES:\n        return this._getDependencyInsertingAction();\n\n      case GANTT_RESOURCES:\n        return this._getResourceInsertingAction();\n\n      case GANTT_RESOURCE_ASSIGNMENTS:\n        return this._getResourceAssigningAction();\n    }\n\n    return () => {};\n  }\n\n  raiseInsertingAction(optionName, coreArgs) {\n    var action = this._getInsertingAction(optionName);\n\n    if (action) {\n      var args = {\n        cancel: false,\n        values: this._convertCoreToMappedData(optionName, coreArgs.values)\n      };\n      action(args);\n      coreArgs.cancel = args.cancel;\n      coreArgs.values = this._convertMappedToCoreData(optionName, args.values);\n\n      if (optionName === GANTT_TASKS) {\n        this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, args.values);\n      }\n    }\n  }\n\n  createTaskInsertingAction() {\n    this._taskInsertingAction = this._createActionByOption(Actions.onTaskInserting);\n  }\n\n  taskInsertingAction(args) {\n    var action = this._getTaskInsertingAction();\n\n    action(args);\n  }\n\n  _getTaskInsertingAction() {\n    if (!this._taskInsertingAction) {\n      this.createTaskInsertingAction();\n    }\n\n    return this._taskInsertingAction;\n  }\n\n  createDependencyInsertingAction() {\n    this._dependencyInsertingAction = this._createActionByOption(Actions.onDependencyInserting);\n  }\n\n  dependencyInsertingAction(args) {\n    var action = this._getDependencyInsertingAction();\n\n    action(args);\n  }\n\n  _getDependencyInsertingAction() {\n    if (!this._dependencyInsertingAction) {\n      this.createDependencyInsertingAction();\n    }\n\n    return this._dependencyInsertingAction;\n  }\n\n  createResourceInsertingAction() {\n    this._resourceInsertingAction = this._createActionByOption(Actions.onResourceInserting);\n  }\n\n  resourceInsertingAction(args) {\n    var action = this._getResourceInsertingAction();\n\n    action(args);\n  }\n\n  _getResourceInsertingAction() {\n    if (!this._resourceInsertingAction) {\n      this.createResourceInsertingAction();\n    }\n\n    return this._resourceInsertingAction;\n  }\n\n  createResourceAssigningAction() {\n    this._resourceAssigningAction = this._createActionByOption(Actions.onResourceAssigning);\n  }\n\n  resourceAssigningAction(args) {\n    var action = this._getResourceAssigningAction();\n\n    action(args);\n  }\n\n  _getResourceAssigningAction() {\n    if (!this._resourceAssigningAction) {\n      this.createResourceAssigningAction();\n    }\n\n    return this._resourceAssigningAction;\n  }\n\n  _getInsertedAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskInsertedAction();\n\n      case GANTT_DEPENDENCIES:\n        return this._getDependencyInsertedAction();\n\n      case GANTT_RESOURCES:\n        return this._getResourceInsertedAction();\n\n      case GANTT_RESOURCE_ASSIGNMENTS:\n        return this._getResourceAssignedAction();\n    }\n\n    return () => {};\n  }\n\n  raiseInsertedAction(optionName, data, key) {\n    var action = this._getInsertedAction(optionName);\n\n    if (action) {\n      var args = {\n        values: data,\n        key: key\n      };\n      action(args);\n    }\n  }\n\n  createTaskInsertedAction() {\n    this._taskInsertedAction = this._createActionByOption(Actions.onTaskInserted);\n  }\n\n  taskInsertedAction(args) {\n    var action = this._getTaskInsertedAction();\n\n    action(args);\n  }\n\n  _getTaskInsertedAction() {\n    if (!this._taskInsertedAction) {\n      this.createTaskInsertedAction();\n    }\n\n    return this._taskInsertedAction;\n  }\n\n  createDependencyInsertedAction() {\n    this._dependencyInsertedAction = this._createActionByOption(Actions.onDependencyInserted);\n  }\n\n  dependencyInsertedAction(args) {\n    var action = this._getDependencyInsertedAction();\n\n    action(args);\n  }\n\n  _getDependencyInsertedAction() {\n    if (!this._dependencyInsertedAction) {\n      this.createDependencyInsertedAction();\n    }\n\n    return this._dependencyInsertedAction;\n  }\n\n  createResourceInsertedAction() {\n    this._resourceInsertedAction = this._createActionByOption(Actions.onResourceInserted);\n  }\n\n  resourceInsertedAction(args) {\n    var action = this._getResourceInsertedAction();\n\n    action(args);\n  }\n\n  _getResourceInsertedAction() {\n    if (!this._resourceInsertedAction) {\n      this.createResourceInsertedAction();\n    }\n\n    return this._resourceInsertedAction;\n  }\n\n  createResourceAssignedAction() {\n    this._resourceAssignedAction = this._createActionByOption(Actions.onResourceAssigned);\n  }\n\n  resourceAssignedAction(args) {\n    var action = this._getResourceAssignedAction();\n\n    action(args);\n  }\n\n  _getResourceAssignedAction() {\n    if (!this._resourceAssignedAction) {\n      this.createResourceAssignedAction();\n    }\n\n    return this._resourceAssignedAction;\n  }\n\n  _getDeletingAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskDeletingAction();\n\n      case GANTT_DEPENDENCIES:\n        return this._getDependencyDeletingAction();\n\n      case GANTT_RESOURCES:\n        return this._getResourceDeletingAction();\n\n      case GANTT_RESOURCE_ASSIGNMENTS:\n        return this._getResourceUnassigningAction();\n    }\n\n    return () => {};\n  }\n\n  raiseDeletingAction(optionName, coreArgs) {\n    var action = this._getDeletingAction(optionName);\n\n    if (action) {\n      var args = {\n        cancel: false,\n        key: coreArgs.key,\n        values: this._convertCoreToMappedData(optionName, coreArgs.values)\n      };\n      action(args);\n      coreArgs.cancel = args.cancel;\n    }\n  }\n\n  createTaskDeletingAction() {\n    this._taskDeletingAction = this._createActionByOption(Actions.onTaskDeleting);\n  }\n\n  taskDeletingAction(args) {\n    var action = this._getTaskDeletingAction();\n\n    action(args);\n  }\n\n  _getTaskDeletingAction() {\n    if (!this._taskDeletingAction) {\n      this.createTaskDeletingAction();\n    }\n\n    return this._taskDeletingAction;\n  }\n\n  createDependencyDeletingAction() {\n    this._dependencyDeletingAction = this._createActionByOption(Actions.onDependencyDeleting);\n  }\n\n  dependencyDeletingAction(args) {\n    var action = this._getDependencyDeletingAction();\n\n    action(args);\n  }\n\n  _getDependencyDeletingAction() {\n    if (!this._dependencyDeletingAction) {\n      this.createDependencyDeletingAction();\n    }\n\n    return this._dependencyDeletingAction;\n  }\n\n  createResourceDeletingAction() {\n    this._resourceDeletingAction = this._createActionByOption(Actions.onResourceDeleting);\n  }\n\n  resourceDeletingAction(args) {\n    var action = this._getResourceDeletingAction();\n\n    action(args);\n  }\n\n  _getResourceDeletingAction() {\n    if (!this._resourceDeletingAction) {\n      this.createResourceDeletingAction();\n    }\n\n    return this._resourceDeletingAction;\n  }\n\n  createResourceUnassigningAction() {\n    this._resourceUnassigningAction = this._createActionByOption(Actions.onResourceUnassigning);\n  }\n\n  resourceUnassigningAction(args) {\n    var action = this._getResourceUnassigningAction();\n\n    action(args);\n  }\n\n  _getResourceUnassigningAction() {\n    if (!this._resourceUnassigningAction) {\n      this.createResourceUnassigningAction();\n    }\n\n    return this._resourceUnassigningAction;\n  }\n\n  _getDeletedAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskDeletedAction();\n\n      case GANTT_DEPENDENCIES:\n        return this._getDependencyDeletedAction();\n\n      case GANTT_RESOURCES:\n        return this._getResourceDeletedAction();\n\n      case GANTT_RESOURCE_ASSIGNMENTS:\n        return this._getResourceUnassignedAction();\n    }\n\n    return () => {};\n  }\n\n  raiseDeletedAction(optionName, key, data) {\n    var action = this._getDeletedAction(optionName);\n\n    if (action) {\n      var args = {\n        key: key,\n        values: data\n      };\n      action(args);\n    }\n  }\n\n  createTaskDeletedAction() {\n    this._taskDeletedAction = this._createActionByOption(Actions.onTaskDeleted);\n  }\n\n  taskDeletedAction(args) {\n    var action = this._getTaskDeletedAction();\n\n    action(args);\n  }\n\n  _getTaskDeletedAction() {\n    if (!this._taskDeletedAction) {\n      this.createTaskDeletedAction();\n    }\n\n    return this._taskDeletedAction;\n  }\n\n  createDependencyDeletedAction() {\n    this._dependencyDeletedAction = this._createActionByOption(Actions.onDependencyDeleted);\n  }\n\n  dependencyDeletedAction(args) {\n    var action = this._getDependencyDeletedAction();\n\n    action(args);\n  }\n\n  _getDependencyDeletedAction() {\n    if (!this._dependencyDeletedAction) {\n      this.createDependencyDeletedAction();\n    }\n\n    return this._dependencyDeletedAction;\n  }\n\n  createResourceDeletedAction() {\n    this._resourceDeletedAction = this._createActionByOption(Actions.onResourceDeleted);\n  }\n\n  resourceDeletedAction(args) {\n    var action = this._getResourceDeletedAction();\n\n    action(args);\n  }\n\n  _getResourceDeletedAction() {\n    if (!this._resourceDeletedAction) {\n      this.createResourceDeletedAction();\n    }\n\n    return this._resourceDeletedAction;\n  }\n\n  createResourceUnassignedAction() {\n    this._resourceUnassignedAction = this._createActionByOption(Actions.onResourceUnassigned);\n  }\n\n  resourceUnassignedAction(args) {\n    var action = this._getResourceUnassignedAction();\n\n    action(args);\n  }\n\n  _getResourceUnassignedAction() {\n    if (!this._resourceUnassignedAction) {\n      this.createResourceUnassignedAction();\n    }\n\n    return this._resourceUnassignedAction;\n  }\n\n  _getUpdatingAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskUpdatingAction();\n    }\n\n    return () => {};\n  }\n\n  raiseUpdatingAction(optionName, coreArgs, action) {\n    action = action || this._getUpdatingAction(optionName);\n\n    if (action) {\n      var isTaskUpdating = optionName === GANTT_TASKS;\n      var args = {\n        cancel: false,\n        key: coreArgs.key,\n        newValues: this._convertCoreToMappedData(optionName, coreArgs.newValues),\n        values: isTaskUpdating ? this._getTaskData(coreArgs.key) : this._convertCoreToMappedData(optionName, coreArgs.values)\n      };\n\n      if (isTaskUpdating && this._customFieldsManager.cache.hasData(args.key)) {\n        this._customFieldsManager.addCustomFieldsDataFromCache(args.key, args.newValues);\n      }\n\n      action(args);\n      coreArgs.cancel = args.cancel;\n      coreArgs.newValues = this._convertMappedToCoreData(optionName, args.newValues);\n\n      if (isTaskUpdating) {\n        if (args.cancel) {\n          this._customFieldsManager.resetCustomFieldsDataCache(args.key);\n        } else {\n          var forceUpdateOnKeyExpire = !Object.keys(coreArgs.newValues).length;\n\n          this._saveCustomFieldsDataToCache(args.key, args.newValues, forceUpdateOnKeyExpire);\n        }\n      }\n    }\n  }\n\n  createTaskUpdatingAction() {\n    this._taskUpdatingAction = this._createActionByOption(Actions.onTaskUpdating);\n  }\n\n  taskUpdatingAction(args) {\n    var action = this._getTaskUpdatingAction();\n\n    action(args);\n  }\n\n  _getTaskUpdatingAction() {\n    if (!this._taskUpdatingAction) {\n      this.createTaskUpdatingAction();\n    }\n\n    return this._taskUpdatingAction;\n  }\n\n  _getUpdatedAction(optionName) {\n    switch (optionName) {\n      case GANTT_TASKS:\n        return this._getTaskUpdatedAction();\n    }\n\n    return () => {};\n  }\n\n  raiseUpdatedAction(optionName, data, key) {\n    var action = this._getUpdatedAction(optionName);\n\n    if (action) {\n      var args = {\n        values: data,\n        key: key\n      };\n      action(args);\n    }\n  }\n\n  createTaskUpdatedAction() {\n    this._taskUpdatedAction = this._createActionByOption(Actions.onTaskUpdated);\n  }\n\n  taskUpdatedAction(args) {\n    var action = this._getTaskUpdatedAction();\n\n    action(args);\n  }\n\n  _getTaskUpdatedAction() {\n    if (!this._taskUpdatedAction) {\n      this.createTaskUpdatedAction();\n    }\n\n    return this._taskUpdatedAction;\n  }\n\n  createTaskEditDialogShowingAction() {\n    this._taskEditDialogShowingAction = this._createActionByOption(Actions.onTaskEditDialogShowing);\n  }\n\n  taskEditDialogShowingAction(args) {\n    var action = this._getTaskEditDialogShowingAction();\n\n    action(args);\n  }\n\n  _getTaskEditDialogShowingAction() {\n    if (!this._taskEditDialogShowingAction) {\n      this.createTaskEditDialogShowingAction();\n    }\n\n    return this._taskEditDialogShowingAction;\n  }\n\n  raiseTaskEditDialogShowingAction(coreArgs) {\n    var action = this._getTaskEditDialogShowingAction();\n\n    if (action) {\n      var args = {\n        cancel: false,\n        key: coreArgs.key,\n        values: this._convertCoreToMappedData(GANTT_TASKS, coreArgs.values),\n        readOnlyFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.readOnlyFields),\n        hiddenFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.hiddenFields)\n      };\n      action(args);\n      coreArgs.cancel = args.cancel;\n      coreArgs.values = this._convertMappedToCoreData(GANTT_TASKS, args.values);\n      coreArgs.readOnlyFields = this._convertMappedToCoreFields(GANTT_TASKS, args.readOnlyFields);\n      coreArgs.hiddenFields = this._convertMappedToCoreFields(GANTT_TASKS, args.hiddenFields);\n    }\n  }\n\n  createResourceManagerDialogShowingAction() {\n    this._resourceManagerDialogShowingAction = this._createActionByOption(Actions.onResourceManagerDialogShowing);\n  }\n\n  resourceManagerDialogShowingAction(args) {\n    var action = this._getResourceManagerDialogShowingAction();\n\n    action(args);\n  }\n\n  _getResourceManagerDialogShowingAction() {\n    if (!this._resourceManagerDialogShowingAction) {\n      this.createResourceManagerDialogShowingAction();\n    }\n\n    return this._resourceManagerDialogShowingAction;\n  }\n\n  raiseResourceManagerDialogShowingAction(coreArgs) {\n    var action = this._getResourceManagerDialogShowingAction();\n\n    if (action) {\n      var mappedResources = coreArgs.values.resources.items.map(r => this._convertMappedToCoreData(GANTT_RESOURCES, r));\n      var args = {\n        cancel: false,\n        values: mappedResources\n      };\n      action(args);\n      coreArgs.cancel = args.cancel;\n    }\n  }\n\n  createTaskMovingAction() {\n    this._taskMovingAction = this._createActionByOption(Actions.onTaskMoving);\n  }\n\n  taskMovingAction(args) {\n    var action = this.getTaskMovingAction();\n    action(args);\n  }\n\n  getTaskMovingAction() {\n    if (!this._taskMovingAction) {\n      this.createTaskMovingAction();\n    }\n\n    return this._taskMovingAction;\n  }\n\n  getScaleCellPreparedAction() {\n    if (!this._scaleCellPreparedAction) {\n      this.createScaleCellPreparedAction();\n    }\n\n    return this._scaleCellPreparedAction;\n  }\n\n  createScaleCellPreparedAction() {\n    this._scaleCellPreparedAction = this._createActionByOption(Actions.onScaleCellPrepared);\n  }\n\n  raiseScaleCellPreparedAction(data) {\n    var action = this.getScaleCellPreparedAction();\n\n    if (action) {\n      var args = {\n        scaleIndex: data.scaleIndex,\n        scaleType: this._getScaleType(data.scaleType),\n        scaleElement: getPublicElement($(data.scaleElement)),\n        separatorElement: getPublicElement($(data.separatorElement)),\n        startDate: new Date(data.start),\n        endDate: new Date(data.end)\n      };\n      action(args);\n    }\n  }\n\n  _getScaleType(viewType) {\n    switch (viewType) {\n      case 0:\n        return \"minutes\";\n\n      case 1:\n        return \"hours\";\n\n      case 2:\n        return \"sixHours\";\n\n      case 3:\n        return \"days\";\n\n      case 4:\n        return \"weeks\";\n\n      case 5:\n        return \"months\";\n\n      case 6:\n        return \"quarters\";\n\n      case 7:\n        return \"years\";\n\n      case 8:\n        return \"fiveYears\";\n\n      default:\n        return;\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}