{"ast":null,"code":"import { EventEmitter, forwardRef, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxTreeListComponent } from 'devextreme-angular';\nimport * as i0 from \"@angular/core\";\n\nfunction NTSDropDownTreeComponent_div_2_dxi_column_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"dxi-column\", 11);\n  }\n\n  if (rf & 2) {\n    const column_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"dataField\", column_r3.Name)(\"caption\", column_r3.Title);\n  }\n}\n\nfunction NTSDropDownTreeComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"dx-tree-list\", 4);\n    i0.ɵɵlistener(\"selectedRowKeysChange\", function NTSDropDownTreeComponent_div_2_Template_dx_tree_list_selectedRowKeysChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectedTreeItems = $event);\n    })(\"onSelectionChanged\", function NTSDropDownTreeComponent_div_2_Template_dx_tree_list_onSelectionChanged_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSelectionChanged());\n    })(\"onKeyDown\", function NTSDropDownTreeComponent_div_2_Template_dx_tree_list_onKeyDown_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onKeyDown($event));\n    });\n    i0.ɵɵelement(3, \"dxo-scrolling\", 5)(4, \"dxo-selection\", 6)(5, \"dxo-search-panel\", 7);\n    i0.ɵɵtemplate(6, NTSDropDownTreeComponent_div_2_dxi_column_6_Template, 1, 2, \"dxi-column\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NTSDropDownTreeComponent_div_2_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.close());\n    });\n    i0.ɵɵtext(9, \" \\u0110\\u00F3ng \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0._items)(\"keyExpr\", ctx_r0.ntsValue)(\"parentIdExpr\", ctx_r0.ntsParentId)(\"showRowLines\", true)(\"showBorders\", true)(\"columnAutoWidth\", true)(\"autoExpandAll\", ctx_r0.autoExpandAll)(\"selectedRowKeys\", ctx_r0.selectedTreeItems);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"mode\", ctx_r0.ntsMode)(\"recursive\", ctx_r0.ntsRecursiveSelection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"visible\", true)(\"width\", 240);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0._columns);\n  }\n}\n\nexport let NTSDropDownTreeComponent = /*#__PURE__*/(() => {\n  class NTSDropDownTreeComponent {\n    constructor(_cd) {\n      this._cd = _cd;\n      this.changeEvent = new EventEmitter();\n      this.selectedItems = [];\n      this.selectedTreeItems = [];\n      this.isShowDropDown = false;\n      this._items = [];\n      this._columns = [];\n\n      this._onChange = _ => {};\n\n      this._onTouched = () => {};\n\n      this.mode = 'single';\n    }\n\n    get items() {\n      return this._items;\n    }\n\n    set items(value) {\n      this._items = value;\n    }\n\n    get columns() {\n      return this._items;\n    }\n\n    set columns(value) {\n      this._columns = value;\n    }\n\n    writeValue(value) {\n      if (value != null) {\n        if (this.ntsMode == 'multiple') {\n          this.selectedItems = value;\n          this.selectedTreeItems = value;\n        } else {\n          this.selectedItems = [];\n          this.selectedTreeItems = [];\n          this.selectedItems.push(value);\n          this.selectedTreeItems.push(value);\n        }\n      } else {\n        this.selectedItems = [];\n        this.selectedTreeItems = [];\n      }\n\n      this._cd.markForCheck();\n    }\n\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.ntsDisabled = isDisabled;\n\n      this._cd.markForCheck();\n    } // Sự kiến ấn phím trên table\n\n\n    onKeyDown(e) {\n      if (e.event.key == \"Enter\") {\n        var rowCount = this._items.length;\n\n        for (let i = 0; i < rowCount; i++) {\n          if (this.treeListComponent.focusedRowIndex) {\n            this.selectedItems = [this._items[this.treeListComponent.focusedRowIndex].Id];\n            this.isShowDropDown = false;\n\n            this._onChange(this.selectedItems.length > 0 ? this.selectedItems[0] : null);\n\n            this.changeEvent.emit(this.selectedItems[0]);\n            break;\n          }\n        }\n      }\n    }\n\n    onSelectionChanged() {\n      if (!this.isShowDropDown) {\n        return;\n      }\n\n      this.selectedItems = this.treeListComponent.instance.getSelectedRowKeys(\"all\"); // if (this.ntsMode == 'multiple') {\n      //   this._onChange(this.selectedItems ? this.selectedItems : null);\n      //   this.changeEvent.emit(this.selectedItems ? this.selectedItems : null);\n      // }\n      // else {\n      //   this._onChange(this.selectedItems && this.selectedItems.length > 0 ? this.selectedItems[0] : null);\n      //   this.changeEvent.emit(this.selectedItems && this.selectedItems.length > 0 ? this.selectedItems[0] : null);\n      // }\n\n      if (this.ntsAutoClose) {\n        this.isShowDropDown = false;\n      }\n    }\n\n    onValueChanged() {\n      if (!this.selectedItems || this.selectedItems.length == 0) {\n        this.selectedTreeItems = null;\n      }\n\n      setTimeout(() => {\n        // this.selectedItems = this.treeListComponent.instance.getSelectedRowKeys(\"all\");\n        if (this.ntsMode == 'multiple') {\n          this._onChange(this.selectedItems ? this.selectedItems : null);\n\n          this.changeEvent.emit(this.selectedItems ? this.selectedItems : null);\n        } else {\n          this._onChange(this.selectedItems && this.selectedItems.length > 0 ? this.selectedItems[0] : null);\n\n          this.changeEvent.emit(this.selectedItems && this.selectedItems.length > 0 ? this.selectedItems[0] : null);\n        }\n      }, 0);\n    } // Sự kiện mở drop dơn\n\n\n    onOpened() {// if (this.gridBoxValue && this.gridBoxValue.length > 0) {\n      //   let selectIndex = this.dataGridComponent.instance.getRowIndexByKey(this.gridBoxValue[0]);\n      //   this.dataGridComponent.instance.focus(this.dataGridComponent.instance.getCellElement(selectIndex, 0));\n      // }\n      // else {\n      //   this.dataGridComponent.instance.focus(this.dataGridComponent.instance.getCellElement(0, 0));\n      // }\n    }\n\n    close() {\n      this.isShowDropDown = false;\n    }\n\n  }\n\n  NTSDropDownTreeComponent.ɵfac = function NTSDropDownTreeComponent_Factory(t) {\n    return new (t || NTSDropDownTreeComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  NTSDropDownTreeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NTSDropDownTreeComponent,\n    selectors: [[\"nts-drop-down-tree\"]],\n    viewQuery: function NTSDropDownTreeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DxTreeListComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeListComponent = _t.first);\n      }\n    },\n    inputs: {\n      ntsLabel: \"ntsLabel\",\n      ntsValue: \"ntsValue\",\n      ntsParentId: \"ntsParentId\",\n      autoExpandAll: \"autoExpandAll\",\n      placeholder: \"placeholder\",\n      ntsMode: \"ntsMode\",\n      ntsRecursiveSelection: \"ntsRecursiveSelection\",\n      ntsAutoClose: \"ntsAutoClose\",\n      ntsDisabled: \"ntsDisabled\",\n      items: \"items\",\n      columns: \"columns\"\n    },\n    outputs: {\n      changeEvent: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NTSDropDownTreeComponent),\n      multi: true\n    }])],\n    decls: 3,\n    vars: 10,\n    consts: [[1, \"nts-dropdow\"], [3, \"value\", \"valueExpr\", \"deferRendering\", \"displayExpr\", \"placeholder\", \"showClearButton\", \"dataSource\", \"opened\", \"disabled\", \"valueChange\", \"openedChange\", \"onOpened\", \"onValueChanged\"], [4, \"dxTemplate\", \"dxTemplateOf\"], [1, \"content-tree\"], [\"height\", \"100%\", 3, \"dataSource\", \"keyExpr\", \"parentIdExpr\", \"showRowLines\", \"showBorders\", \"columnAutoWidth\", \"autoExpandAll\", \"selectedRowKeys\", \"selectedRowKeysChange\", \"onSelectionChanged\", \"onKeyDown\"], [\"mode\", \"virtual\", \"showScrollbar\", \"always\"], [3, \"mode\", \"recursive\"], [\"placeholder\", \"T\\u00ECm ki\\u1EBFm...\", 3, \"visible\", \"width\"], [3, \"dataField\", \"caption\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-right\", \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"dataField\", \"caption\"]],\n    template: function NTSDropDownTreeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"dx-drop-down-box\", 1);\n        i0.ɵɵlistener(\"valueChange\", function NTSDropDownTreeComponent_Template_dx_drop_down_box_valueChange_1_listener($event) {\n          return ctx.selectedItems = $event;\n        })(\"openedChange\", function NTSDropDownTreeComponent_Template_dx_drop_down_box_openedChange_1_listener($event) {\n          return ctx.isShowDropDown = $event;\n        })(\"onOpened\", function NTSDropDownTreeComponent_Template_dx_drop_down_box_onOpened_1_listener() {\n          return ctx.onOpened();\n        })(\"onValueChanged\", function NTSDropDownTreeComponent_Template_dx_drop_down_box_onValueChanged_1_listener() {\n          return ctx.onValueChanged();\n        });\n        i0.ɵɵtemplate(2, NTSDropDownTreeComponent_div_2_Template, 10, 13, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.selectedItems)(\"valueExpr\", ctx.ntsValue)(\"deferRendering\", false)(\"displayExpr\", ctx.ntsLabel)(\"placeholder\", ctx.placeholder)(\"showClearButton\", true)(\"dataSource\", ctx._items)(\"opened\", ctx.isShowDropDown)(\"disabled\", ctx.ntsDisabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dxTemplateOf\", \"content\");\n      }\n    },\n    styles: [\".dx-toolbar .dx-toolbar-after{width:100%;padding-left:0}.dx-toolbar .dx-toolbar-after .dx-treelist-search-panel{margin-left:0;width:100%!important}.dx-popup-content .content-tree{height:calc(100% - 40px)}\\n\"],\n    encapsulation: 2\n  });\n  return NTSDropDownTreeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}