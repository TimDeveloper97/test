{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.cache.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extendFromObject } from \"../../core/utils/extend\";\nexport class GanttDataCache {\n  constructor() {\n    this._cache = {};\n    this._timers = {};\n  }\n\n  saveData(key, data, keyExpireCallback) {\n    if (data) {\n      this._clearTimer(key);\n\n      var storage = this._getCache(key, true);\n\n      extendFromObject(storage, data, true);\n\n      if (keyExpireCallback) {\n        this._setExpireTimer(key, keyExpireCallback);\n      }\n    }\n  }\n\n  pullDataFromCache(key, target) {\n    var data = this._getCache(key);\n\n    if (data) {\n      extendFromObject(target, data);\n    }\n\n    this._onKeyExpired(key);\n  }\n\n  hasData(key) {\n    return !!this._cache[key];\n  }\n\n  resetCache(key) {\n    this._onKeyExpired(key);\n  }\n\n  _getCache(key, forceCreate) {\n    if (!this._cache[key] && forceCreate) {\n      this._cache[key] = {};\n    }\n\n    return this._cache[key];\n  }\n\n  _setExpireTimer(key, callback) {\n    this._timers[key] = setTimeout(() => {\n      callback(key, this._getCache(key));\n\n      this._onKeyExpired(key);\n    }, 200);\n  }\n\n  _onKeyExpired(key) {\n    this._clearCache(key);\n\n    this._clearTimer(key);\n  }\n\n  _clearCache(key) {\n    delete this._cache[key];\n  }\n\n  _clearTimer(key) {\n    var timers = this._timers;\n\n    if (timers && timers[key]) {\n      clearTimeout(timers[key]);\n      delete timers[key];\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}