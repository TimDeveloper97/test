{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\nimport { createVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { subscribeToClickEvent } from \"../../../utils/subscribe_to_event\";\nimport { KeyboardActionContext } from \"./keyboard_action_context\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      children: children,\n      className: className,\n      label: label\n    },\n    widgetRef: widgetRef\n  } = _ref;\n  return createVNode(1, \"div\", className, children, 0, {\n    tabIndex: 0,\n    role: \"button\",\n    \"aria-label\": label\n  }, null, widgetRef);\n};\nexport var LightButtonProps = {\n  className: \"\",\n  label: \"\"\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport let LightButton = /*#__PURE__*/(() => {\n  class LightButton extends InfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n      this.widgetRef = infernoCreateRef();\n      this.keyboardEffect = this.keyboardEffect.bind(this);\n      this.subscribeToClick = this.subscribeToClick.bind(this);\n    }\n\n    get keyboardContext() {\n      if (\"KeyboardActionContext\" in this.context) {\n        return this.context.KeyboardActionContext;\n      }\n\n      return KeyboardActionContext;\n    }\n\n    createEffects() {\n      return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])];\n    }\n\n    updateEffects() {\n      var _this$_effects$, _this$_effects$2;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\n      null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick]);\n    }\n\n    keyboardEffect() {\n      return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick);\n    }\n\n    subscribeToClick() {\n      return subscribeToClickEvent(this.widgetRef.current, this.props.onClick);\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        widgetRef: this.widgetRef,\n        keyboardContext: this.keyboardContext,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  LightButton.defaultProps = LightButtonProps;\n  return LightButton;\n})();","map":null,"metadata":{},"sourceType":"module"}