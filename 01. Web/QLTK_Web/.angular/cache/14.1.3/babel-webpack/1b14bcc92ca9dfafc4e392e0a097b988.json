{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let StageService = /*#__PURE__*/(() => {\n  class StageService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    search(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/SearchStage', model, httpOptions);\n      return tr;\n    }\n\n    searchListStage(projectProductId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Stage/SearchListStage?projectProductId=' + projectProductId, httpOptions);\n      return tr;\n    }\n\n    delete(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/DeleteStage', model, httpOptions);\n      return tr;\n    }\n\n    create(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/AddStage', model, httpOptions);\n      return tr;\n    }\n\n    createIndex(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/createIndex', model, httpOptions);\n      return tr;\n    }\n\n    getInfoById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/GetStageInfo', model, httpOptions);\n      return tr;\n    }\n\n    update(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Stage/UpdateStage', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  StageService.ɵfac = function StageService_Factory(t) {\n    return new (t || StageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  StageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StageService,\n    factory: StageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StageService;\n})();","map":null,"metadata":{},"sourceType":"module"}