{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.templates.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getPublicElement } from \"../../core/element\";\nexport class GanttTemplatesManager {\n  constructor(gantt) {\n    this._gantt = gantt;\n  }\n\n  getTaskTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: this._gantt.getTaskDataByCoreData(item),\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskProgressTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskTimeTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskContentTemplateFunc(taskContentTemplateOption) {\n    var template = taskContentTemplateOption && this._gantt._getTemplate(taskContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback, index) => {\n      item.taskData = this._gantt.getTaskDataByCoreData(item.taskData);\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback(container, index);\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}