{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let EmployeeUpdateService = /*#__PURE__*/(() => {\n  class EmployeeUpdateService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    LockEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/LockEmployee', model, httpOptions);\n      return tr;\n    }\n\n    updateEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/UpdateEmployee', model, httpOptions);\n      return tr;\n    }\n\n    getByIdupdate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetEmployeeInfo', model, httpOptions);\n      return tr;\n    }\n\n    getListCourse(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetListCourse', model, httpOptions);\n      return tr;\n    }\n\n    getListEmployeeTraining(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetListEmployeeTraining', model, httpOptions);\n      return tr;\n    }\n\n    uploadImage(file, model) {\n      let formData = new FormData();\n      formData.append('Model', JSON.stringify(model));\n      formData.append('File', file);\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/UploadImage', formData);\n      return tr;\n    }\n\n    getListRegulation(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetRegulation', model, httpOptions);\n      return tr;\n    }\n\n    getListProcedure(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetProcedure', model, httpOptions);\n      return tr;\n    }\n\n    getListWork(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Employee/GetWorkList', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  EmployeeUpdateService.ɵfac = function EmployeeUpdateService_Factory(t) {\n    return new (t || EmployeeUpdateService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  EmployeeUpdateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeUpdateService,\n    factory: EmployeeUpdateService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmployeeUpdateService;\n})();","map":null,"metadata":{},"sourceType":"module"}