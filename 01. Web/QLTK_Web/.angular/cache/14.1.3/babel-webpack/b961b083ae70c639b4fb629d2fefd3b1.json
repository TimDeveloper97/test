{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ClassRoomToolService = /*#__PURE__*/(() => {\n  class ClassRoomToolService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    getPracticeAndSkill(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/GetPracticeAndSkill', model, httpOptions);\n      return tr;\n    }\n\n    getPracticeAndProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/GetPracticeAndProduct', model, httpOptions);\n      return tr;\n    }\n\n    addClassRoomTool(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/AddClassRoomTool', model, httpOptions);\n      return tr;\n    }\n\n    getClassRoomToolInfo() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/GetClassRoomToolInfo', httpOptions);\n      return tr;\n    }\n\n    getAutoPracticeWithSkill(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/GetAutoPracticeWithSkill', model, httpOptions);\n      return tr;\n    }\n\n    getAutoProductWithPractice(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoomTool/GetAutoProductWithPractice', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ClassRoomToolService.ɵfac = function ClassRoomToolService_Factory(t) {\n    return new (t || ClassRoomToolService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ClassRoomToolService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClassRoomToolService,\n    factory: ClassRoomToolService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClassRoomToolService;\n})();","map":null,"metadata":{},"sourceType":"module"}