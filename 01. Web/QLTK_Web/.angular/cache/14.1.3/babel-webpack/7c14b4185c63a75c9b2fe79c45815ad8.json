{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProjectRoleService = /*#__PURE__*/(() => {\n  class ProjectRoleService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    getCbbRole() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/GetCbbRole', httpOptions);\n      return tr;\n    }\n\n    searchRole(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/SearchRoles', model, httpOptions);\n      return tr;\n    }\n\n    searchRoleType(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Project/searchRoleType', model, httpOptions);\n      return tr;\n    }\n\n    SearchPlanFunction() {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ProjectRole/SearchPlanFunction', httpOptions);\n      return tr;\n    }\n\n    getRoleById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ProjectRole/GetRoleById/' + id, httpOptions);\n      return tr;\n    }\n\n    searchRoleById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ProjectRole/SearchRoleById/' + id, httpOptions);\n      return tr;\n    }\n\n    createRole(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/CreateRole', model, httpOptions);\n      return tr;\n    }\n\n    updateRole(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/UpdateRole', model, httpOptions);\n      return tr;\n    }\n\n    deleteRole(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/DeleteRole', model, httpOptions);\n      return tr;\n    }\n\n    ExportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectRole/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProjectRoleService.ɵfac = function ProjectRoleService_Factory(t) {\n    return new (t || ProjectRoleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProjectRoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectRoleService,\n    factory: ProjectRoleService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectRoleService;\n})();","map":null,"metadata":{},"sourceType":"module"}