{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ModuleServiceService = /*#__PURE__*/(() => {\n  class ModuleServiceService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    SearchModul(modelSearch) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/SearchModuls', modelSearch, httpOptions);\n      return tr;\n    }\n\n    ExPort(lst) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/ExPort', lst, httpOptions);\n      return tr;\n    }\n\n    DeleteGroupModul(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/DeleteModul', model, httpOptions);\n      return tr;\n    }\n\n    AddModule() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/AddModule', httpOptions);\n      return tr;\n    }\n\n    UpdateModule(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/UpdateModule', model, httpOptions);\n      return tr;\n    }\n\n    UpdateModuleIsDMTV(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/UpdateModuleIsDMTV', model, httpOptions);\n      return tr;\n    }\n\n    GetModuleInfo() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetModuleInfo', httpOptions);\n      return tr;\n    }\n\n    ExportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    SearchTestCriteria(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/Criteria', model, httpOptions);\n      return tr;\n    }\n\n    ExportExcelCriteria(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/ExportExcelCriteria', model, httpOptions);\n      return tr;\n    }\n\n    GetModuleGroupExcepted(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetModuleGroupExcepted', model, httpOptions);\n      return tr;\n    }\n\n    GetModuleId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetModuleId', model, httpOptions);\n      return tr;\n    }\n\n    GetListTestCriteria(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetListTestCriteria', model, httpOptions);\n      return tr;\n    }\n\n    searchProductStandard(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/Productstandard', model, httpOptions);\n      return tr;\n    }\n\n    AddModuleGroupProductStandard(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/AddModuleGroupProductStandard', model, httpOptions);\n      return tr;\n    }\n\n    searchEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Designer/SearchEmployee', model, httpOptions);\n      return tr;\n    }\n\n    AddDesigner(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Designer/AddDesigner', model, httpOptions);\n      return tr;\n    }\n\n    getDesigners(moduleId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Module/GetDesigners?moduleId=' + moduleId, httpOptions);\n      return tr;\n    }\n\n    DeleteDesigner(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Designer/DeleteDesigner', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Designer/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    searchModuleErrors(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleError/SearchModuleErrors', model, httpOptions);\n      return tr;\n    }\n\n    searchModuleMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleMaterial/SearchModuleMaterial', model, httpOptions);\n      return tr;\n    }\n\n    searchModuleMaterialsSetup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleMaterial/SearchModuleMaterialsSetup', model, httpOptions);\n      return tr;\n    }\n\n    searchSimilarMaterialConfig(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleMaterial/SearchSimilarMaterialConfig', model, httpOptions);\n      return tr;\n    }\n\n    searchSimilarMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleMaterial/SearchSimilarMaterial', model, httpOptions);\n      return tr;\n    }\n\n    exportExcelModuleMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleMaterial/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    getErrorInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ModuleError/GetErrorInfo', model, httpOptions);\n      return tr;\n    }\n\n    getModuleProductStandardInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetModuleProductStandardInfo', model, httpOptions);\n      return tr;\n    }\n\n    getContentModule(moduleId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/GetContentModule?moduleId=' + moduleId, httpOptions);\n      return tr;\n    }\n\n    updateContent(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/UpdateContent', model, httpOptions);\n      return tr;\n    }\n\n    importSyncSaleModule(file, isConfirm) {\n      let formData = new FormData();\n      formData.append('File', file);\n      formData.append('isConfirm', isConfirm);\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/ImportFile', formData);\n      return tr;\n    }\n\n    syncSaleModule(check, isConfirm, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/SyncSaleModule?check=' + check + '&isConfirm=' + isConfirm, model, httpOptions);\n      return tr;\n    }\n\n    searchDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Module/SearchDocument', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ModuleServiceService.ɵfac = function ModuleServiceService_Factory(t) {\n    return new (t || ModuleServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ModuleServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModuleServiceService,\n    factory: ModuleServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModuleServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}