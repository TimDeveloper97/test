{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProductMaterialsService = /*#__PURE__*/(() => {\n  class ProductMaterialsService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchProductMaterials(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/SearchProductMaterials', model, httpOptions);\n      return tr;\n    }\n\n    searchProductMaterialsIsSetup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/SearchProductMaterialsSetup', model, httpOptions);\n      return tr;\n    }\n\n    searchMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/SearchMaterials', model, httpOptions);\n      return tr;\n    }\n\n    deleteProductMaterials(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/DeleteProductMaterials', model, httpOptions);\n      return tr;\n    }\n\n    updateProductMaterials(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/UpdateProductMaterials', model, httpOptions);\n      return tr;\n    }\n\n    addProductMaterials(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/AddProductMaterials', model, httpOptions);\n      return tr;\n    }\n\n    getProductInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/GetProductInfo', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProductMaterials/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    DownloadAFile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'HandlingImage/DownloadFile', model, httpOptions);\n      return tr;\n    }\n\n    downAllDocumentProcess(model) {\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/DownAllDocumentProcess', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProductMaterialsService.ɵfac = function ProductMaterialsService_Factory(t) {\n    return new (t || ProductMaterialsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProductMaterialsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductMaterialsService,\n    factory: ProductMaterialsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductMaterialsService;\n})();","map":null,"metadata":{},"sourceType":"module"}