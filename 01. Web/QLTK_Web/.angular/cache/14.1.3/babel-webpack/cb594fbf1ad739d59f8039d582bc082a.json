{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/app-repository.service\";\nconst CLIENT_ID = \"107884621530-on10n5fa3ekmrdnqre8ugdbcotcl05ap.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyBajCa98N7X8W5B8DP7CrXcYkPl6Ov1OGg\"; // const CLIENT_ID = \"555360871314-3mt6o4m5a27issnbf43hvmvf5m41oqi5.apps.googleusercontent.com\";\n// const API_KEY = \"AIzaSyBvj0ErK_JDsCeMrQeoC2G-QTY1Q3m4CBI\";\n\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\nvar SCOPES = 'https://www.googleapis.com/auth/drive';\nexport let GapiSession = /*#__PURE__*/(() => {\n  class GapiSession {\n    constructor(appRepository) {\n      this.appRepository = appRepository;\n    }\n\n    initClient() {\n      return new Promise((resolve, reject) => {\n        gapi.load('client:auth2', () => {\n          return gapi.client.init({\n            apiKey: API_KEY,\n            clientId: CLIENT_ID,\n            discoveryDocs: DISCOVERY_DOCS,\n            scope: SCOPES\n          }).then(() => {\n            this.googleAuth = gapi.auth2.getAuthInstance();\n            resolve(true);\n          });\n        });\n      });\n    }\n\n    get isSignedIn() {\n      return this.googleAuth.isSignedIn.get();\n    }\n\n    signIn() {\n      return this.googleAuth.signIn({\n        prompt: 'consent'\n      }).then(googleUser => {\n        this.appRepository.User.add(googleUser.getBasicProfile());\n      });\n    }\n\n    signOut() {\n      this.googleAuth.signOut();\n    }\n\n  }\n\n  GapiSession.ɵfac = function GapiSession_Factory(t) {\n    return new (t || GapiSession)(i0.ɵɵinject(i1.AppRepositoryService));\n  };\n\n  GapiSession.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GapiSession,\n    factory: GapiSession.ɵfac\n  });\n  return GapiSession;\n})();","map":null,"metadata":{},"sourceType":"module"}