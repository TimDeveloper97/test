{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ConfigMaterialService = /*#__PURE__*/(() => {\n  class ConfigMaterialService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    getParameterByGroupId(Id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'MaterialParameter/GetParameterByGroupId?Id=' + Id, httpOptions);\n      return tr;\n    }\n\n    getValueByParameterId(Id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'MaterialParameterValue/GetValueByParameterId?Id=' + Id, httpOptions);\n      return tr;\n    }\n\n    addFromSource(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ConfigMaterial/AddFromSource', model, httpOptions);\n      return tr;\n    }\n\n    saveConfig(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ConfigMaterial/SaveConfig', model, httpOptions);\n      return tr;\n    }\n\n    getListMaterialGroup() {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ConfigMaterial/GetListMaterialGroup', httpOptions);\n      return tr;\n    }\n\n    checkRelationshipValue(Id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'MaterialParameter/CheckRelationship?Id=' + Id, httpOptions);\n      return tr;\n    }\n\n    checkRelationshipParam(Id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'MaterialParameterValue/CheckRelationship?Id=' + Id, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ConfigMaterialService.ɵfac = function ConfigMaterialService_Factory(t) {\n    return new (t || ConfigMaterialService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ConfigMaterialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigMaterialService,\n    factory: ConfigMaterialService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfigMaterialService;\n})();","map":null,"metadata":{},"sourceType":"module"}