{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/button.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nexport default class TextEditorButton {\n  constructor(name, editor, options) {\n    this.instance = null;\n    this.$container = null;\n    this.$placeMarker = null;\n    this.editor = editor;\n    this.name = name;\n    this.options = options || {};\n  }\n\n  _addPlaceMarker($container) {\n    this.$placeMarker = $(\"<div>\").appendTo($container);\n  }\n\n  _addToContainer($element) {\n    var {\n      $placeMarker: $placeMarker,\n      $container: $container\n    } = this;\n    $placeMarker ? $placeMarker.replaceWith($element) : $element.appendTo($container);\n  }\n\n  _attachEvents() {\n    throw \"Not implemented\";\n  }\n\n  _create() {\n    throw \"Not implemented\";\n  }\n\n  _isRendered() {\n    return !!this.instance;\n  }\n\n  _isVisible() {\n    var {\n      editor: editor,\n      options: options\n    } = this;\n    return options.visible || !editor.option(\"readOnly\");\n  }\n\n  _isDisabled() {\n    throw \"Not implemented\";\n  }\n\n  _shouldRender() {\n    return this._isVisible() && !this._isRendered();\n  }\n\n  dispose() {\n    var {\n      instance: instance,\n      $placeMarker: $placeMarker\n    } = this;\n\n    if (instance) {\n      instance.dispose ? instance.dispose() : instance.remove();\n      this.instance = null;\n    }\n\n    $placeMarker && $placeMarker.remove();\n  }\n\n  render() {\n    var $container = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.$container;\n    this.$container = $container;\n\n    if (this._isVisible()) {\n      var {\n        instance: instance,\n        $element: $element\n      } = this._create();\n\n      this.instance = instance;\n\n      this._attachEvents(instance, $element);\n    } else {\n      this._addPlaceMarker($container);\n    }\n  }\n\n  update() {\n    if (this._shouldRender()) {\n      this.render();\n    }\n\n    return !!this.instance;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}