{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProductCreatesService = /*#__PURE__*/(() => {\n  class ProductCreatesService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    createProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/AddProduct', model, httpOptions);\n      return tr;\n    }\n\n    getProductInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetProductInfo', model, httpOptions);\n      return tr;\n    }\n\n    updateProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/UpdateProduct', model, httpOptions);\n      return tr;\n    }\n\n    searchModule(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetModule', model, httpOptions);\n      return tr;\n    }\n\n    deleteProductModuleUpdate(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/DeleteProductModuleUpdate?id=' + id, httpOptions);\n      return tr;\n    }\n\n    getListFileTestAttachByProductId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetListFileTestAttachByProductId', model, httpOptions);\n      return tr;\n    }\n\n    CreateFileTestAttach(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/CreateFileTestAttach', model, httpOptions);\n      return tr;\n    }\n\n    getProductDocumentAttachs(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/GetProductDocumentAttachs', model, httpOptions);\n      return tr;\n    }\n\n    updateProductDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Product/UpdateProductDocument', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProductCreatesService.ɵfac = function ProductCreatesService_Factory(t) {\n    return new (t || ProductCreatesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProductCreatesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductCreatesService,\n    factory: ProductCreatesService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductCreatesService;\n})();","map":null,"metadata":{},"sourceType":"module"}