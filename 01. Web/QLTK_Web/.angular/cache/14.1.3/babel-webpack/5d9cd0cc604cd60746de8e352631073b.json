{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"src/app/shared\";\nimport * as i3 from \"../../service/schedule-project.service\";\nconst _c0 = [\"scrollPlanCopy\"];\nconst _c1 = [\"scrollPlanCopyHeader\"];\n\nfunction PlanCopyComponent_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"th\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5);\n  }\n}\n\nfunction PlanCopyComponent_tr_28_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 24)(2, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function PlanCopyComponent_tr_28_ng_container_3_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const rows_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(rows_r10.Checked = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const rows_r10 = ctx.$implicit;\n    const j_r11 = ctx.index;\n    const i_r8 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", rows_r10.Checked)(\"name\", \"Checked\" + i_r8 + j_r11);\n  }\n}\n\nfunction PlanCopyComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, PlanCopyComponent_tr_28_ng_container_3_Template, 3, 2, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r7.Name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r7.ListCheck);\n  }\n}\n\nexport let PlanCopyComponent = /*#__PURE__*/(() => {\n  class PlanCopyComponent {\n    constructor(activeModal, messageService, constants, scheduleProjectService) {\n      this.activeModal = activeModal;\n      this.messageService = messageService;\n      this.constants = constants;\n      this.scheduleProjectService = scheduleProjectService;\n      this.listIdUserId = [];\n      this.listHeard = [];\n      this.listData = [];\n      this.columnEmployee = [{\n        Name: 'Code',\n        Title: 'Mã nhân viên'\n      }, {\n        Name: 'Name',\n        Title: 'Tên nhân viên'\n      }];\n      this.isMain = false;\n      this.model = {};\n      this.modelEmployee = {\n        UserId: null,\n        IsMain: false\n      };\n    }\n\n    ngOnInit() {\n      this.getListEmployee();\n    }\n\n    ngAfterViewInit() {\n      this.scrollPlanCopy.nativeElement.addEventListener('ps-scroll-x', event => {\n        this.scrollPlanCopyHeader.nativeElement.scrollLeft = event.target.scrollLeft;\n      }, true);\n    }\n\n    ngOnDestroy() {\n      this.scrollPlanCopy.nativeElement.removeEventListener('ps-scroll-x', null);\n    }\n\n    getListEmployee() {\n      this.scheduleProjectService.getDataCopy(this.model).subscribe(data => {\n        if (data) {\n          this.listHeard = data.ListHeard;\n          this.listData = data.ListData;\n        }\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    save() {\n      this.model.ListPlanAdjustment = this.listData;\n      this.scheduleProjectService.updatePlanAssignment(this.model).subscribe(data => {\n        this.messageService.showSuccess('Cập nhật người phụ trách thành công!');\n        this.activeModal.close(true);\n      }, error => {\n        this.messageService.showError(error);\n      });\n    }\n\n    closeModal(isOK) {\n      this.activeModal.close(isOK);\n    }\n\n  }\n\n  PlanCopyComponent.ɵfac = function PlanCopyComponent_Factory(t) {\n    return new (t || PlanCopyComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.Constants), i0.ɵɵdirectiveInject(i3.ScheduleProjectService));\n  };\n\n  PlanCopyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlanCopyComponent,\n    selectors: [[\"app-plan-copy\"]],\n    viewQuery: function PlanCopyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollPlanCopy = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollPlanCopyHeader = _t.first);\n      }\n    },\n    decls: 41,\n    vars: 12,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\", \"text-uppercase\", \"text-danger\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 2, \"color\", \"brown\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\", \"padding-15\"], [\"name\", \"form\", \"novalidate\", \"\"], [\"f\", \"ngForm\"], [1, \"row\"], [\"scrollPlanCopy\", \"\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\"], [2, \"font-size\", \"15px\"], [2, \"height\", \"auto\", \"width\", \"100%\", \"overflow\", \"hidden\"], [\"scrollPlanCopyHeader\", \"\"], [1, \"table\", \"table-bordered\", \"table-fixed\", \"mb-0\"], [\"rowspan\", \"2\", \"min-width\", \"200px\", 1, \"text-center\"], [1, \"text-center\", 3, \"width\"], [4, \"ngFor\", \"ngForOf\"], [3, \"config\"], [1, \"table\", \"table-bordered\", \"table-fixed\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"fa\", \"fa-save\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa\", \"fa-power-off\"], [\"width\", \"100px\", 1, \"text-center\"], [\"min-width\", \"200px\"], [\"type\", \"checkbox\", 2, \"height\", \"15px\", \"width\", \"15px\", 3, \"ngModel\", \"name\", \"ngModelChange\"]],\n    template: function PlanCopyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Sao ch\\u00E9p \\u0111\\u1EBFn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function PlanCopyComponent_Template_button_click_3_listener() {\n          return ctx.closeModal(false);\n        });\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5, 6)(9, \"div\", 7, 8)(11, \"div\", 9)(12, \"div\", 10);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11, 12)(16, \"table\", 13)(17, \"thead\")(18, \"tr\")(19, \"th\", 14);\n        i0.ɵɵtext(20, \"T\\u00EAn s\\u1EA3n ph\\u1EA9m\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\", 15);\n        i0.ɵɵtext(22, \"C\\u00F4ng \\u0111o\\u1EA1n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"tr\");\n        i0.ɵɵtemplate(24, PlanCopyComponent_ng_container_24_Template, 3, 1, \"ng-container\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(25, \"perfect-scrollbar\", 17)(26, \"table\", 18)(27, \"tbody\");\n        i0.ɵɵtemplate(28, PlanCopyComponent_tr_28_Template, 4, 2, \"tr\", 16);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(29, \"div\", 19)(30, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function PlanCopyComponent_Template_button_click_30_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelement(31, \"i\", 21);\n        i0.ɵɵtext(32, \"\\u00A0 \");\n        i0.ɵɵelementStart(33, \"span\");\n        i0.ɵɵtext(34, \"L\\u01B0u\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(35, \"\\u00A0 \");\n        i0.ɵɵelementStart(36, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function PlanCopyComponent_Template_button_click_36_listener() {\n          return ctx.closeModal(false);\n        });\n        i0.ɵɵelement(37, \"i\", 23);\n        i0.ɵɵtext(38, \" \\u00A0 \");\n        i0.ɵɵelementStart(39, \"span\");\n        i0.ɵɵtext(40, \" \\u0110\\u00F3ng \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\"C\\u00F4ng vi\\u1EC7c: \", ctx.model.PlanName, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"min-width\", 200 + ctx.listHeard.length * 100, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"width\", ctx.listHeard.length * 100);\n        i0.ɵɵattribute(\"colspan\", ctx.listHeard.length);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listHeard);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"max-height\", 500, \"px\");\n        i0.ɵɵproperty(\"config\", ctx.constants.ScrollConfig);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"min-width\", 200 + ctx.listHeard.length * 100, \"px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listData);\n      }\n    },\n    styles: [\".plan-copy-model .modal-dialog{width:100%!important}@media (min-width: 576px){.plan-copy-model .modal-dialog{max-width:540px!important}}@media (min-width: 768px){.plan-copy-model .modal-dialog{max-width:720px!important}}@media (min-width: 992px){.plan-copy-model .modal-dialog{max-width:960px!important}}@media (min-width: 1200px){.plan-copy-model .modal-dialog{max-width:1140px!important}}@media (min-width: 1600px){.plan-copy-model .modal-dialog{max-width:1140px!important}}@media (min-width: 1920px){.plan-copy-model .modal-dialog{max-width:1140px!important}}\\n\"],\n    encapsulation: 2\n  });\n  return PlanCopyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}