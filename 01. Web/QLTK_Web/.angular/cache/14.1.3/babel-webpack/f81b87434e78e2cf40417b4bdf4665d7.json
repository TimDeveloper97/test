{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.data.option.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Component } from \"../../core/component\";\nimport DataHelperMixin from \"../../data_helper\";\n\nclass DataOption extends Component {\n  constructor(optionName, getLoadPanel, dataSourceChangedCallback) {\n    super();\n    this._optionName = optionName;\n    this._getLoadPanel = getLoadPanel;\n    this._dataSourceChangedCallback = dataSourceChangedCallback;\n  }\n\n  insert(data, callback, errorCallback) {\n    this._showLoadPanel();\n\n    this._getStore().insert(data).done(response => {\n      if (callback) {\n        callback(response);\n      }\n\n      this._hideLoadPanel();\n    }).fail(error => {\n      if (errorCallback) {\n        errorCallback(error);\n      }\n\n      this._hideLoadPanel();\n    });\n  }\n\n  update(key, data, callback, errorCallback) {\n    this._showLoadPanel();\n\n    this._getStore().update(key, data).done((data, key) => {\n      if (callback) {\n        callback(data, key);\n      }\n\n      this._hideLoadPanel();\n    }).fail(error => {\n      if (errorCallback) {\n        errorCallback(error);\n      }\n\n      this._hideLoadPanel();\n    });\n  }\n\n  remove(key, callback, errorCallback) {\n    this._showLoadPanel();\n\n    this._getStore().remove(key).done(key => {\n      if (callback) {\n        callback(key);\n      }\n\n      this._hideLoadPanel();\n    }).fail(error => {\n      if (errorCallback) {\n        errorCallback(error);\n      }\n\n      this._hideLoadPanel();\n    });\n  }\n\n  _dataSourceChangedHandler(newItems, e) {\n    this._dataSourceChangedCallback(this._optionName, newItems);\n  }\n\n  _dataSourceOptions() {\n    return {\n      paginate: false\n    };\n  }\n\n  _dataSourceLoadingChangedHandler(isLoading) {\n    if (isLoading && !this._dataSource.isLoaded()) {\n      this._showLoadPanel();\n    } else {\n      this._hideLoadPanel();\n    }\n  }\n\n  _showLoadPanel() {\n    var _this$_getLoadPanel;\n\n    null === (_this$_getLoadPanel = this._getLoadPanel()) || void 0 === _this$_getLoadPanel ? void 0 : _this$_getLoadPanel.show();\n  }\n\n  _hideLoadPanel() {\n    var _this$_getLoadPanel2;\n\n    null === (_this$_getLoadPanel2 = this._getLoadPanel()) || void 0 === _this$_getLoadPanel2 ? void 0 : _this$_getLoadPanel2.hide();\n  }\n\n  _getStore() {\n    return this._dataSource.store();\n  }\n\n  _getItems() {\n    return this._getStore()._array || this._dataSource.items();\n  }\n\n  _reloadDataSource() {\n    return this._dataSource.load();\n  }\n\n  dispose() {\n    this._disposeDataSource();\n  }\n\n  _optionChanged(args) {\n    args.name;\n  }\n\n}\n\nDataOption.include(DataHelperMixin);\nexport default DataOption;","map":null,"metadata":{},"sourceType":"module"}