{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authenticationService, route, router, titleservice) {\n      this.authenticationService = authenticationService;\n      this.route = route;\n      this.router = router;\n      this.titleservice = titleservice;\n      this.model = {};\n    }\n\n    ngOnInit() {\n      // reset login status\n      this.authenticationService.logout();\n      this.titleservice.setTitle(\"PHẦN MỀM QUẢN LÝ HỆ THỐNG\"); // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    login() {\n      this.authenticationService.login(this.model).subscribe(data => {\n        // login successful if there's a jwt token in the response\n        if (data && data.access_token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          data.LoginDate = new Date();\n          localStorage.setItem('qltkcurrentUser', JSON.stringify(data));\n          this.router.navigate(['/qltk']);\n        }\n      }, error => {\n        if (error.status == 0) {\n          this.message = \"Không kết nối server\";\n        } else {\n          this.message = error.error.error_description;\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Title));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"login_page\"], [1, \"login-wrapper\"], [1, \"row\", \"justify-content-center\"], [\"id\", \"login\", 1, \"login\", \"loginpage\", \"col-xl-6\", \"col-lg-8\", \"col-md-8\", \"col-sm-10\"], [2, \"color\", \"white\", \"text-align\", \"center\"], [\"name\", \"form\", \"novalidate\", \"\", 1, \"form-validation\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-xl-6\", \"col-lg-8\", \"col-md-8\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"user_login\", \"placeholder\", \"T\\u00EAn \\u0111\\u0103ng nh\\u1EADp\", \"required\", \"\", 1, \"input\", \"input-border-color\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"pwd\", \"id\", \"user_login_p\", \"placeholder\", \"M\\u1EADt kh\\u1EA9u\", \"required\", \"\", 1, \"input\", \"input-border-color\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-accent\", \"btn-block\", \"mt-3\"], [1, \"text-danger\", \"text-center\"], [1, \"help-block\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"PH\\u1EA6N M\\u1EC0M QU\\u1EA2N L\\u00DD H\\u1EC6 TH\\u1ED0NG\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"h3\", 4);\n        i0.ɵɵelementStart(7, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(8);\n\n          return i0.ɵɵresetView(_r0.form.valid && ctx.login());\n        });\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 7)(11, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.model.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementStart(14, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.model.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 12);\n        i0.ɵɵtext(16, \"\\u0110\\u0102NG NH\\u1EACP\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        const _r1 = i0.ɵɵreference(12);\n\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && !_r1.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\".input-border-color[_ngcontent-%COMP%]{border-bottom:2px solid #ffffff!important}.loginpage[_ngcontent-%COMP%]{background-color:#000c!important}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}