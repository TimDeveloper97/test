{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/circular_range_container.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseRangeContainer from \"./base_range_container\";\nvar _Number = Number;\nvar _max = Math.max;\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar CircularRangeContainer = BaseRangeContainer.inherit({\n  _processOptions: function () {\n    this._inner = this._outer = 0;\n\n    switch (_normalizeEnum(this._options.orientation)) {\n      case \"inside\":\n        this._inner = 1;\n        break;\n\n      case \"center\":\n        this._inner = this._outer = .5;\n        break;\n\n      default:\n        this._outer = 1;\n    }\n  },\n  _isVisible: function (layout) {\n    var width = this._options.width;\n    width = _Number(width) || _max(_Number(width.start), _Number(width.end));\n    return layout.radius - this._inner * width > 0;\n  },\n  _createRange: function (range, layout) {\n    var width = (range.startWidth + range.endWidth) / 2;\n    return this._renderer.arc(layout.x, layout.y, layout.radius - this._inner * width, layout.radius + this._outer * width, this._translator.translate(range.end), this._translator.translate(range.start)).attr({\n      \"stroke-linejoin\": \"round\"\n    });\n  },\n  measure: function (layout) {\n    var width = this._options.width;\n    width = _Number(width) || _max(_Number(width.start), _Number(width.end));\n    return {\n      min: layout.radius - this._inner * width,\n      max: layout.radius + this._outer * width\n    };\n  }\n});\nexport default CircularRangeContainer;","map":null,"metadata":{},"sourceType":"module"}