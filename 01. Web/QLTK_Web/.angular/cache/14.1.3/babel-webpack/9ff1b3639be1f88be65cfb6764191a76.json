{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/cell.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"allDay\", \"ariaLabel\", \"children\", \"className\", \"contentTemplateProps\", \"dataCellTemplate\", \"endDate\", \"firstDayOfMonth\", \"groupIndex\", \"groups\", \"index\", \"isFirstGroupCell\", \"isFocused\", \"isLastGroupCell\", \"isSelected\", \"otherMonth\", \"startDate\", \"text\", \"today\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { ALL_DAY_PANEL_CELL_CLASS } from \"../../../const\";\nimport { DateTableCellBaseProps, DateTableCellBase } from \"../cell\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      className: className,\n      dataCellTemplate: dataCellTemplate,\n      endDate: endDate,\n      groupIndex: groupIndex,\n      groups: groups,\n      index: index,\n      isFirstGroupCell: isFirstGroupCell,\n      isFocused: isFocused,\n      isLastGroupCell: isLastGroupCell,\n      isSelected: isSelected,\n      startDate: startDate\n    }\n  } = _ref;\n  return createComponentVNode(2, DateTableCellBase, {\n    className: \"\".concat(ALL_DAY_PANEL_CELL_CLASS, \" \").concat(className),\n    startDate: startDate,\n    endDate: endDate,\n    groups: groups,\n    groupIndex: groupIndex,\n    allDay: true,\n    isFirstGroupCell: isFirstGroupCell,\n    isLastGroupCell: isLastGroupCell,\n    index: index,\n    dataCellTemplate: dataCellTemplate,\n    isSelected: isSelected,\n    isFocused: isFocused\n  });\n};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let AllDayPanelCell = /*#__PURE__*/(() => {\n  class AllDayPanelCell extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  AllDayPanelCell.defaultProps = DateTableCellBaseProps;\n  return AllDayPanelCell;\n})();","map":null,"metadata":{},"sourceType":"module"}