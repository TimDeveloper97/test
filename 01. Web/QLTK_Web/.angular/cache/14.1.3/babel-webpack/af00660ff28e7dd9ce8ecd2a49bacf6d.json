{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../config/configuration\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let DownloadService = /*#__PURE__*/(() => {\n  class DownloadService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    downloadFileBlob(path, fileName) {\n      let apiPath = this.config.ServerFileApiUrl + 'download/download-file?pathFile=' + path + '&fileName=' + fileName + '&keyAuthorize=nhantinsoft123456!!';\n      var tr = this.http.get(apiPath, {\n        responseType: \"blob\"\n      });\n      return tr;\n    }\n\n    downloadFileBlobNew(path, fileName) {\n      let apiPath = this.config.ServerFileApiUrl + 'download/download-file-new?pathFile=' + path + '&keyAuthorize=nhantinsoft123456!!';\n      var tr = this.http.get(apiPath, {\n        responseType: \"blob\"\n      });\n      return tr;\n    }\n\n    downloadAll(model) {\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/DownAllDocumentProcess', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  DownloadService.ɵfac = function DownloadService_Factory(t) {\n    return new (t || DownloadService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  DownloadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DownloadService,\n    factory: DownloadService.ɵfac,\n    providedIn: 'root'\n  });\n  return DownloadService;\n})();","map":null,"metadata":{},"sourceType":"module"}