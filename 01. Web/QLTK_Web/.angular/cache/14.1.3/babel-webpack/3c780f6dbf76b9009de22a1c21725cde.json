{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/collection/item.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Class from \"../../core/class\";\nimport { each } from \"../../core/utils/iterator\";\nimport { attachInstanceToElement, getInstanceByElement } from \"../../core/utils/public_component\";\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\nvar ITEM_CONTENT_PLACEHOLDER_CLASS = \"dx-item-content-placeholder\";\n\nvar forcibleWatcher = function (watchMethod, fn, callback) {\n  var filteredCallback = function (value) {\n    if (oldValue !== value) {\n      callback(value, oldValue);\n      oldValue = value;\n    }\n  };\n\n  var oldValue;\n  return {\n    dispose: watchMethod(fn, filteredCallback),\n    force: function () {\n      filteredCallback(fn());\n    }\n  };\n};\n\nvar CollectionItem = Class.inherit({\n  ctor: function ($element, options, rawData) {\n    this._$element = $element;\n    this._options = options;\n    this._rawData = rawData;\n    attachInstanceToElement($element, this, this._dispose);\n\n    this._render();\n  },\n  _render: function () {\n    var $placeholder = $(\"<div>\").addClass(ITEM_CONTENT_PLACEHOLDER_CLASS);\n\n    this._$element.append($placeholder);\n\n    this._watchers = [];\n\n    this._renderWatchers();\n  },\n  _renderWatchers: function () {\n    this._startWatcher(\"disabled\", this._renderDisabled.bind(this));\n\n    this._startWatcher(\"visible\", this._renderVisible.bind(this));\n  },\n  _startWatcher: function (field, render) {\n    var rawData = this._rawData;\n\n    var exprGetter = this._options.fieldGetter(field);\n\n    var watcher = forcibleWatcher(this._options.watchMethod(), function () {\n      return exprGetter(rawData);\n    }, function (value, oldValue) {\n      this._dirty = true;\n      render(value, oldValue);\n    }.bind(this));\n\n    this._watchers.push(watcher);\n  },\n  setDataField: function () {\n    this._dirty = false;\n    each(this._watchers, function (_, watcher) {\n      watcher.force();\n    });\n\n    if (this._dirty) {\n      return true;\n    }\n  },\n  _renderDisabled: function (value, oldValue) {\n    this._$element.toggleClass(DISABLED_STATE_CLASS, !!value);\n\n    this._updateOwnerFocus(value);\n  },\n  _updateOwnerFocus: function (isDisabled) {\n    var ownerComponent = this._options.owner;\n\n    if (ownerComponent && isDisabled) {\n      ownerComponent._resetItemFocus(this._$element);\n    }\n  },\n  _renderVisible: function (value, oldValue) {\n    this._$element.toggleClass(INVISIBLE_STATE_CLASS, void 0 !== value && !value);\n  },\n  _dispose: function () {\n    each(this._watchers, function (_, watcher) {\n      watcher.dispose();\n    });\n  }\n});\n\nCollectionItem.getInstance = function ($element) {\n  return getInstanceByElement($element, this);\n};\n\nexport default CollectionItem;","map":null,"metadata":{},"sourceType":"module"}