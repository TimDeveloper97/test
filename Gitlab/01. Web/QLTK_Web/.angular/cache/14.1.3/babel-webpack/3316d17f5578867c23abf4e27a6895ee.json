{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let DocumentMeetingService = /*#__PURE__*/(() => {\n  class DocumentMeetingService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    search(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'document-meeting/search', model, httpOptions);\n      return tr;\n    }\n\n    getInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'document-meeting/getMeetingInfo', model, httpOptions);\n      return tr;\n    }\n\n    delete(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'document-meeting/delete', model, httpOptions);\n      return tr;\n    }\n\n    create(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'document-meeting/create', model, httpOptions);\n      return tr;\n    }\n\n    update(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'document-meeting/update', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  DocumentMeetingService.ɵfac = function DocumentMeetingService_Factory(t) {\n    return new (t || DocumentMeetingService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  DocumentMeetingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentMeetingService,\n    factory: DocumentMeetingService.ɵfac,\n    providedIn: 'root'\n  });\n  return DocumentMeetingService;\n})();","map":null,"metadata":{},"sourceType":"module"}