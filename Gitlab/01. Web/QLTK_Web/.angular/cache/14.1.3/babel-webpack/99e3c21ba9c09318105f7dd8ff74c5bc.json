{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_row.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"cellsCount\", \"children\", \"className\", \"height\", \"isHeaderRow\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"styles\"];\nimport { createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { addHeightToStyle } from \"../utils\";\nimport { RowProps, Row } from \"./row\";\nimport { VirtualCell } from \"./virtual_cell\";\nexport var viewFunction = _ref => {\n  var {\n    classes: classes,\n    props: {\n      leftVirtualCellCount: leftVirtualCellCount,\n      leftVirtualCellWidth: leftVirtualCellWidth,\n      rightVirtualCellCount: rightVirtualCellCount,\n      rightVirtualCellWidth: rightVirtualCellWidth\n    },\n    style: style,\n    virtualCells: virtualCells\n  } = _ref;\n  return createComponentVNode(2, Row, {\n    styles: style,\n    className: classes,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    leftVirtualCellCount: leftVirtualCellCount,\n    rightVirtualCellCount: rightVirtualCellCount,\n    children: virtualCells.map((_, index) => createComponentVNode(2, VirtualCell, null, index.toString()))\n  });\n};\nexport var VirtualRowProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(RowProps), Object.getOwnPropertyDescriptors({\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0,\n  cellsCount: 1\n})));\nexport let VirtualRow = /*#__PURE__*/(() => {\n  class VirtualRow extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n      this.__getterCache = {};\n    }\n\n    get style() {\n      var {\n        height: height\n      } = this.props;\n      var {\n        style: style\n      } = this.restAttributes;\n      return addHeightToStyle(height, style);\n    }\n\n    get classes() {\n      var {\n        className: className\n      } = this.props;\n      return \"dx-scheduler-virtual-row \".concat(className);\n    }\n\n    get virtualCells() {\n      if (void 0 !== this.__getterCache.virtualCells) {\n        return this.__getterCache.virtualCells;\n      }\n\n      return this.__getterCache.virtualCells = (() => {\n        var {\n          cellsCount: cellsCount\n        } = this.props;\n        return [...Array(cellsCount)];\n      })();\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    componentWillUpdate(nextProps, nextState, context) {\n      if (this.props.cellsCount !== nextProps.cellsCount) {\n        this.__getterCache.virtualCells = void 0;\n      }\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        style: this.style,\n        classes: this.classes,\n        virtualCells: this.virtualCells,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  VirtualRow.defaultProps = VirtualRowProps;\n  return VirtualRow;\n})();","map":null,"metadata":{},"sourceType":"module"}