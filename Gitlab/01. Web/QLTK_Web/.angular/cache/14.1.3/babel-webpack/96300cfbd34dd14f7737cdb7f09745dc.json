{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProjectProductService = /*#__PURE__*/(() => {\n  class ProjectProductService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchProjectProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/SearchProjectProduct', model, httpOptions);\n      return tr;\n    }\n\n    searchProjectProducts(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/SearchProjectProducts', model, httpOptions);\n      return tr;\n    }\n\n    searchProjectProductById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/SearchProjectProductById', model, httpOptions);\n      return tr;\n    }\n\n    createProjectProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/CreateProjectProduct', model, httpOptions);\n      return tr;\n    }\n\n    updateProjectProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/UpdateProjectProduct', model, httpOptions);\n      return tr;\n    }\n\n    deleteProjectProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/DeleteProjectProduct', model, httpOptions);\n      return tr;\n    }\n\n    getProjectProductInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetProjectProductInfo', model, httpOptions);\n      return tr;\n    }\n\n    compareContract(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/CompareContract', model, httpOptions);\n      return tr;\n    }\n\n    updateIsGeneralDesign(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/UpdateIsGeneralDesign', model, httpOptions);\n      return tr;\n    }\n\n    getIncurredMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetIncurredMaterial', model, httpOptions);\n      return tr;\n    }\n\n    importProduct(file, projectId) {\n      let formData = new FormData();\n      formData.append('File', file);\n      formData.append('ProjectId', projectId);\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/ImportProduct', formData);\n      return tr;\n    }\n\n    getProjectProductStatusPerform(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetProjectProductByProjectId/' + id, httpOptions);\n      return tr;\n    }\n\n    getNumberErrorOfProject(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetNumberErrorOfProject/' + id, httpOptions);\n      return tr;\n    }\n\n    GetWorkOfProject(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetWorkOfProject/' + id, httpOptions);\n      return tr;\n    }\n\n    GetRatioOfProject(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetRatioDoneOfProject/' + id, httpOptions);\n      return tr;\n    }\n\n    GetImplementationPlanVersusReality(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetImplementationPlanVersusReality/' + id, httpOptions);\n      return tr;\n    }\n\n    GetNumberWorkInProject(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectProduct/GetNumberWorkInProject/' + id, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ProjectProductService.ɵfac = function ProjectProductService_Factory(t) {\n    return new (t || ProjectProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProjectProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectProductService,\n    factory: ProjectProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}