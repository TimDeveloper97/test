{"ast":null,"code":"(function () {\n  var lists = function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.BookmarkManager');\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n    var global$6 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var isTextNode = function (node) {\n      return node && node.nodeType === 3;\n    };\n\n    var isListNode = function (node) {\n      return node && /^(OL|UL|DL)$/.test(node.nodeName);\n    };\n\n    var isListItemNode = function (node) {\n      return node && /^(LI|DT|DD)$/.test(node.nodeName);\n    };\n\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n\n    var isBr = function (node) {\n      return node && node.nodeName === 'BR';\n    };\n\n    var isFirstChild = function (node) {\n      return node.parentNode.firstChild === node;\n    };\n\n    var isLastChild = function (node) {\n      return node.parentNode.lastChild === node;\n    };\n\n    var isTextBlock = function (editor, node) {\n      return node && !!editor.schema.getTextBlockElements()[node.nodeName];\n    };\n\n    var isBlock = function (node, blockElements) {\n      return node && node.nodeName in blockElements;\n    };\n\n    var isBogusBr = function (dom, node) {\n      if (!isBr(node)) {\n        return false;\n      }\n\n      if (dom.isBlock(node.nextSibling) && !isBr(node.previousSibling)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var isEmpty = function (dom, elm, keepBookmarks) {\n      var empty = dom.isEmpty(elm);\n\n      if (keepBookmarks && dom.select('span[data-mce-type=bookmark]', elm).length > 0) {\n        return false;\n      }\n\n      return empty;\n    };\n\n    var isChildOfBody = function (dom, elm) {\n      return dom.isChildOf(elm, dom.getRoot());\n    };\n\n    var $_fmlqy7fsjfuw8plr = {\n      isTextNode: isTextNode,\n      isListNode: isListNode,\n      isListItemNode: isListItemNode,\n      isTableCellNode: isTableCellNode,\n      isBr: isBr,\n      isFirstChild: isFirstChild,\n      isLastChild: isLastChild,\n      isTextBlock: isTextBlock,\n      isBlock: isBlock,\n      isBogusBr: isBogusBr,\n      isEmpty: isEmpty,\n      isChildOfBody: isChildOfBody\n    };\n\n    var getNormalizedEndPoint = function (container, offset) {\n      var node = global$1.getNode(container, offset);\n\n      if ($_fmlqy7fsjfuw8plr.isListItemNode(container) && $_fmlqy7fsjfuw8plr.isTextNode(node)) {\n        var textNodeOffset = offset >= container.childNodes.length ? node.data.length : 0;\n        return {\n          container: node,\n          offset: textNodeOffset\n        };\n      }\n\n      return {\n        container: container,\n        offset: offset\n      };\n    };\n\n    var normalizeRange = function (rng) {\n      var outRng = rng.cloneRange();\n      var rangeStart = getNormalizedEndPoint(rng.startContainer, rng.startOffset);\n      outRng.setStart(rangeStart.container, rangeStart.offset);\n      var rangeEnd = getNormalizedEndPoint(rng.endContainer, rng.endOffset);\n      outRng.setEnd(rangeEnd.container, rangeEnd.offset);\n      return outRng;\n    };\n\n    var $_14fh94frjfuw8plp = {\n      getNormalizedEndPoint: getNormalizedEndPoint,\n      normalizeRange: normalizeRange\n    };\n    var DOM = global$6.DOM;\n\n    var createBookmark = function (rng) {\n      var bookmark = {};\n\n      var setupEndPoint = function (start) {\n        var offsetNode, container, offset;\n        container = rng[start ? 'startContainer' : 'endContainer'];\n        offset = rng[start ? 'startOffset' : 'endOffset'];\n\n        if (container.nodeType === 1) {\n          offsetNode = DOM.create('span', {\n            'data-mce-type': 'bookmark'\n          });\n\n          if (container.hasChildNodes()) {\n            offset = Math.min(offset, container.childNodes.length - 1);\n\n            if (start) {\n              container.insertBefore(offsetNode, container.childNodes[offset]);\n            } else {\n              DOM.insertAfter(offsetNode, container.childNodes[offset]);\n            }\n          } else {\n            container.appendChild(offsetNode);\n          }\n\n          container = offsetNode;\n          offset = 0;\n        }\n\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      };\n\n      setupEndPoint(true);\n\n      if (!rng.collapsed) {\n        setupEndPoint();\n      }\n\n      return bookmark;\n    };\n\n    var resolveBookmark = function (bookmark) {\n      function restoreEndPoint(start) {\n        var container, offset, node;\n\n        var nodeIndex = function (container) {\n          var node = container.parentNode.firstChild,\n              idx = 0;\n\n          while (node) {\n            if (node === container) {\n              return idx;\n            }\n\n            if (node.nodeType !== 1 || node.getAttribute('data-mce-type') !== 'bookmark') {\n              idx++;\n            }\n\n            node = node.nextSibling;\n          }\n\n          return -1;\n        };\n\n        container = node = bookmark[start ? 'startContainer' : 'endContainer'];\n        offset = bookmark[start ? 'startOffset' : 'endOffset'];\n\n        if (!container) {\n          return;\n        }\n\n        if (container.nodeType === 1) {\n          offset = nodeIndex(container);\n          container = container.parentNode;\n          DOM.remove(node);\n\n          if (!container.hasChildNodes() && DOM.isBlock(container)) {\n            container.appendChild(DOM.create('br'));\n          }\n        }\n\n        bookmark[start ? 'startContainer' : 'endContainer'] = container;\n        bookmark[start ? 'startOffset' : 'endOffset'] = offset;\n      }\n\n      restoreEndPoint(true);\n      restoreEndPoint();\n      var rng = DOM.createRng();\n      rng.setStart(bookmark.startContainer, bookmark.startOffset);\n\n      if (bookmark.endContainer) {\n        rng.setEnd(bookmark.endContainer, bookmark.endOffset);\n      }\n\n      return $_14fh94frjfuw8plp.normalizeRange(rng);\n    };\n\n    var $_3byghwfqjfuw8pln = {\n      createBookmark: createBookmark,\n      resolveBookmark: resolveBookmark\n    };\n    var DOM$1 = global$6.DOM;\n\n    var normalizeList = function (dom, ul) {\n      var sibling;\n      var parentNode = ul.parentNode;\n\n      if (parentNode.nodeName === 'LI' && parentNode.firstChild === ul) {\n        sibling = parentNode.previousSibling;\n\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n\n          if ($_fmlqy7fsjfuw8plr.isEmpty(dom, parentNode)) {\n            DOM$1.remove(parentNode);\n          }\n        } else {\n          DOM$1.setStyle(parentNode, 'listStyleType', 'none');\n        }\n      }\n\n      if ($_fmlqy7fsjfuw8plr.isListNode(parentNode)) {\n        sibling = parentNode.previousSibling;\n\n        if (sibling && sibling.nodeName === 'LI') {\n          sibling.appendChild(ul);\n        }\n      }\n    };\n\n    var normalizeLists = function (dom, element) {\n      global$5.each(global$5.grep(dom.select('ol,ul', element)), function (ul) {\n        normalizeList(dom, ul);\n      });\n    };\n\n    var $_7p90zmftjfuw8plu = {\n      normalizeList: normalizeList,\n      normalizeLists: normalizeLists\n    };\n    var global$7 = tinymce.util.Tools.resolve('tinymce.dom.DomQuery');\n\n    var getParentList = function (editor) {\n      var selectionStart = editor.selection.getStart(true);\n      return editor.dom.getParent(selectionStart, 'OL,UL,DL', getClosestListRootElm(editor, selectionStart));\n    };\n\n    var isParentListSelected = function (parentList, selectedBlocks) {\n      return parentList && selectedBlocks.length === 1 && selectedBlocks[0] === parentList;\n    };\n\n    var findSubLists = function (parentList) {\n      return global$5.grep(parentList.querySelectorAll('ol,ul,dl'), function (elm) {\n        return $_fmlqy7fsjfuw8plr.isListNode(elm);\n      });\n    };\n\n    var getSelectedSubLists = function (editor) {\n      var parentList = getParentList(editor);\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n\n      if (isParentListSelected(parentList, selectedBlocks)) {\n        return findSubLists(parentList);\n      } else {\n        return global$5.grep(selectedBlocks, function (elm) {\n          return $_fmlqy7fsjfuw8plr.isListNode(elm) && parentList !== elm;\n        });\n      }\n    };\n\n    var findParentListItemsNodes = function (editor, elms) {\n      var listItemsElms = global$5.map(elms, function (elm) {\n        var parentLi = editor.dom.getParent(elm, 'li,dd,dt', getClosestListRootElm(editor, elm));\n        return parentLi ? parentLi : elm;\n      });\n      return global$7.unique(listItemsElms);\n    };\n\n    var getSelectedListItems = function (editor) {\n      var selectedBlocks = editor.selection.getSelectedBlocks();\n      return global$5.grep(findParentListItemsNodes(editor, selectedBlocks), function (block) {\n        return $_fmlqy7fsjfuw8plr.isListItemNode(block);\n      });\n    };\n\n    var getClosestListRootElm = function (editor, elm) {\n      var parentTableCell = editor.dom.getParents(elm, 'TD,TH');\n      var root = parentTableCell.length > 0 ? parentTableCell[0] : editor.getBody();\n      return root;\n    };\n\n    var $_2bncsnfujfuw8plw = {\n      getParentList: getParentList,\n      getSelectedSubLists: getSelectedSubLists,\n      getSelectedListItems: getSelectedListItems,\n      getClosestListRootElm: getClosestListRootElm\n    };\n    var global$8 = tinymce.util.Tools.resolve('tinymce.Env');\n    var DOM$2 = global$6.DOM;\n\n    var createNewTextBlock = function (editor, contentNode, blockName) {\n      var node, textBlock;\n      var fragment = DOM$2.createFragment();\n      var hasContentNode;\n      var blockElements = editor.schema.getBlockElements();\n\n      if (editor.settings.forced_root_block) {\n        blockName = blockName || editor.settings.forced_root_block;\n      }\n\n      if (blockName) {\n        textBlock = DOM$2.create(blockName);\n\n        if (textBlock.tagName === editor.settings.forced_root_block) {\n          DOM$2.setAttribs(textBlock, editor.settings.forced_root_block_attrs);\n        }\n\n        if (!$_fmlqy7fsjfuw8plr.isBlock(contentNode.firstChild, blockElements)) {\n          fragment.appendChild(textBlock);\n        }\n      }\n\n      if (contentNode) {\n        while (node = contentNode.firstChild) {\n          var nodeName = node.nodeName;\n\n          if (!hasContentNode && (nodeName !== 'SPAN' || node.getAttribute('data-mce-type') !== 'bookmark')) {\n            hasContentNode = true;\n          }\n\n          if ($_fmlqy7fsjfuw8plr.isBlock(node, blockElements)) {\n            fragment.appendChild(node);\n            textBlock = null;\n          } else {\n            if (blockName) {\n              if (!textBlock) {\n                textBlock = DOM$2.create(blockName);\n                fragment.appendChild(textBlock);\n              }\n\n              textBlock.appendChild(node);\n            } else {\n              fragment.appendChild(node);\n            }\n          }\n        }\n      }\n\n      if (!editor.settings.forced_root_block) {\n        fragment.appendChild(DOM$2.create('br'));\n      } else {\n        if (!hasContentNode && (!global$8.ie || global$8.ie > 10)) {\n          textBlock.appendChild(DOM$2.create('br', {\n            'data-mce-bogus': '1'\n          }));\n        }\n      }\n\n      return fragment;\n    };\n\n    var $_3c0i4zfxjfuw8pm1 = {\n      createNewTextBlock: createNewTextBlock\n    };\n    var DOM$3 = global$6.DOM;\n\n    var splitList = function (editor, ul, li, newBlock) {\n      var tmpRng, fragment, bookmarks, node;\n\n      var removeAndKeepBookmarks = function (targetNode) {\n        global$5.each(bookmarks, function (node) {\n          targetNode.parentNode.insertBefore(node, li.parentNode);\n        });\n        DOM$3.remove(targetNode);\n      };\n\n      bookmarks = DOM$3.select('span[data-mce-type=\"bookmark\"]', ul);\n      newBlock = newBlock || $_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li);\n      tmpRng = DOM$3.createRng();\n      tmpRng.setStartAfter(li);\n      tmpRng.setEndAfter(ul);\n      fragment = tmpRng.extractContents();\n\n      for (node = fragment.firstChild; node; node = node.firstChild) {\n        if (node.nodeName === 'LI' && editor.dom.isEmpty(node)) {\n          DOM$3.remove(node);\n          break;\n        }\n      }\n\n      if (!editor.dom.isEmpty(fragment)) {\n        DOM$3.insertAfter(fragment, ul);\n      }\n\n      DOM$3.insertAfter(newBlock, ul);\n\n      if ($_fmlqy7fsjfuw8plr.isEmpty(editor.dom, li.parentNode)) {\n        removeAndKeepBookmarks(li.parentNode);\n      }\n\n      DOM$3.remove(li);\n\n      if ($_fmlqy7fsjfuw8plr.isEmpty(editor.dom, ul)) {\n        DOM$3.remove(ul);\n      }\n    };\n\n    var $_dbkw03fwjfuw8plz = {\n      splitList: splitList\n    };\n    var DOM$4 = global$6.DOM;\n\n    var removeEmptyLi = function (dom, li) {\n      if ($_fmlqy7fsjfuw8plr.isEmpty(dom, li)) {\n        DOM$4.remove(li);\n      }\n    };\n\n    var outdent = function (editor, li) {\n      var ul = li.parentNode;\n      var ulParent, newBlock;\n\n      if (ul) {\n        ulParent = ul.parentNode;\n      } else {\n        removeEmptyLi(editor.dom, li);\n        return true;\n      }\n\n      if (ul === editor.getBody()) {\n        return true;\n      }\n\n      if (li.nodeName === 'DD') {\n        DOM$4.rename(li, 'DT');\n        return true;\n      }\n\n      if ($_fmlqy7fsjfuw8plr.isFirstChild(li) && $_fmlqy7fsjfuw8plr.isLastChild(li)) {\n        if (ulParent.nodeName === 'LI') {\n          DOM$4.insertAfter(li, ulParent);\n          removeEmptyLi(editor.dom, ulParent);\n          DOM$4.remove(ul);\n        } else if ($_fmlqy7fsjfuw8plr.isListNode(ulParent)) {\n          DOM$4.remove(ul, true);\n        } else {\n          ulParent.insertBefore($_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li), ul);\n          DOM$4.remove(ul);\n        }\n\n        return true;\n      } else if ($_fmlqy7fsjfuw8plr.isFirstChild(li)) {\n        if (ulParent.nodeName === 'LI') {\n          DOM$4.insertAfter(li, ulParent);\n          li.appendChild(ul);\n          removeEmptyLi(editor.dom, ulParent);\n        } else if ($_fmlqy7fsjfuw8plr.isListNode(ulParent)) {\n          ulParent.insertBefore(li, ul);\n        } else {\n          ulParent.insertBefore($_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li), ul);\n          DOM$4.remove(li);\n        }\n\n        return true;\n      } else if ($_fmlqy7fsjfuw8plr.isLastChild(li)) {\n        if (ulParent.nodeName === 'LI') {\n          DOM$4.insertAfter(li, ulParent);\n        } else if ($_fmlqy7fsjfuw8plr.isListNode(ulParent)) {\n          DOM$4.insertAfter(li, ul);\n        } else {\n          DOM$4.insertAfter($_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li), ul);\n          DOM$4.remove(li);\n        }\n\n        return true;\n      }\n\n      if (ulParent.nodeName === 'LI') {\n        ul = ulParent;\n        newBlock = $_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li, 'LI');\n      } else if ($_fmlqy7fsjfuw8plr.isListNode(ulParent)) {\n        newBlock = $_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li, 'LI');\n      } else {\n        newBlock = $_3c0i4zfxjfuw8pm1.createNewTextBlock(editor, li);\n      }\n\n      $_dbkw03fwjfuw8plz.splitList(editor, ul, li, newBlock);\n      $_7p90zmftjfuw8plu.normalizeLists(editor.dom, ul.parentNode);\n      return true;\n    };\n\n    var outdentSelection = function (editor) {\n      var listElements = $_2bncsnfujfuw8plw.getSelectedListItems(editor);\n\n      if (listElements.length) {\n        var bookmark = $_3byghwfqjfuw8pln.createBookmark(editor.selection.getRng());\n        var i = void 0,\n            y = void 0;\n        var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, editor.selection.getStart(true));\n        i = listElements.length;\n\n        while (i--) {\n          var node = listElements[i].parentNode;\n\n          while (node && node !== root) {\n            y = listElements.length;\n\n            while (y--) {\n              if (listElements[y] === node) {\n                listElements.splice(i, 1);\n                break;\n              }\n            }\n\n            node = node.parentNode;\n          }\n        }\n\n        for (i = 0; i < listElements.length; i++) {\n          if (!outdent(editor, listElements[i]) && i === 0) {\n            break;\n          }\n        }\n\n        editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n        editor.nodeChanged();\n        return true;\n      }\n    };\n\n    var $_b067pwfojfuw8plj = {\n      outdent: outdent,\n      outdentSelection: outdentSelection\n    };\n\n    var updateListStyle = function (dom, el, detail) {\n      var type = detail['list-style-type'] ? detail['list-style-type'] : null;\n      dom.setStyle(el, 'list-style-type', type);\n    };\n\n    var setAttribs = function (elm, attrs) {\n      global$5.each(attrs, function (value, key) {\n        elm.setAttribute(key, value);\n      });\n    };\n\n    var updateListAttrs = function (dom, el, detail) {\n      setAttribs(el, detail['list-attributes']);\n      global$5.each(dom.select('li', el), function (li) {\n        setAttribs(li, detail['list-item-attributes']);\n      });\n    };\n\n    var updateListWithDetails = function (dom, el, detail) {\n      updateListStyle(dom, el, detail);\n      updateListAttrs(dom, el, detail);\n    };\n\n    var removeStyles = function (dom, element, styles) {\n      global$5.each(styles, function (style) {\n        return dom.setStyle(element, (_a = {}, _a[style] = '', _a));\n\n        var _a;\n      });\n    };\n\n    var getEndPointNode = function (editor, rng, start, root) {\n      var container, offset;\n      container = rng[start ? 'startContainer' : 'endContainer'];\n      offset = rng[start ? 'startOffset' : 'endOffset'];\n\n      if (container.nodeType === 1) {\n        container = container.childNodes[Math.min(offset, container.childNodes.length - 1)] || container;\n      }\n\n      if (!start && $_fmlqy7fsjfuw8plr.isBr(container.nextSibling)) {\n        container = container.nextSibling;\n      }\n\n      while (container.parentNode !== root) {\n        if ($_fmlqy7fsjfuw8plr.isTextBlock(editor, container)) {\n          return container;\n        }\n\n        if (/^(TD|TH)$/.test(container.parentNode.nodeName)) {\n          return container;\n        }\n\n        container = container.parentNode;\n      }\n\n      return container;\n    };\n\n    var getSelectedTextBlocks = function (editor, rng, root) {\n      var textBlocks = [],\n          dom = editor.dom;\n      var startNode = getEndPointNode(editor, rng, true, root);\n      var endNode = getEndPointNode(editor, rng, false, root);\n      var block;\n      var siblings = [];\n\n      for (var node = startNode; node; node = node.nextSibling) {\n        siblings.push(node);\n\n        if (node === endNode) {\n          break;\n        }\n      }\n\n      global$5.each(siblings, function (node) {\n        if ($_fmlqy7fsjfuw8plr.isTextBlock(editor, node)) {\n          textBlocks.push(node);\n          block = null;\n          return;\n        }\n\n        if (dom.isBlock(node) || $_fmlqy7fsjfuw8plr.isBr(node)) {\n          if ($_fmlqy7fsjfuw8plr.isBr(node)) {\n            dom.remove(node);\n          }\n\n          block = null;\n          return;\n        }\n\n        var nextSibling = node.nextSibling;\n\n        if (global$4.isBookmarkNode(node)) {\n          if ($_fmlqy7fsjfuw8plr.isTextBlock(editor, nextSibling) || !nextSibling && node.parentNode === root) {\n            block = null;\n            return;\n          }\n        }\n\n        if (!block) {\n          block = dom.create('p');\n          node.parentNode.insertBefore(block, node);\n          textBlocks.push(block);\n        }\n\n        block.appendChild(node);\n      });\n      return textBlocks;\n    };\n\n    var hasCompatibleStyle = function (dom, sib, detail) {\n      var sibStyle = dom.getStyle(sib, 'list-style-type');\n      var detailStyle = detail ? detail['list-style-type'] : '';\n      detailStyle = detailStyle === null ? '' : detailStyle;\n      return sibStyle === detailStyle;\n    };\n\n    var applyList = function (editor, listName, detail) {\n      if (detail === void 0) {\n        detail = {};\n      }\n\n      var rng = editor.selection.getRng(true);\n      var bookmark;\n      var listItemName = 'LI';\n      var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, editor.selection.getStart(true));\n      var dom = editor.dom;\n\n      if (dom.getContentEditable(editor.selection.getNode()) === 'false') {\n        return;\n      }\n\n      listName = listName.toUpperCase();\n\n      if (listName === 'DL') {\n        listItemName = 'DT';\n      }\n\n      bookmark = $_3byghwfqjfuw8pln.createBookmark(rng);\n      global$5.each(getSelectedTextBlocks(editor, rng, root), function (block) {\n        var listBlock, sibling;\n        sibling = block.previousSibling;\n\n        if (sibling && $_fmlqy7fsjfuw8plr.isListNode(sibling) && sibling.nodeName === listName && hasCompatibleStyle(dom, sibling, detail)) {\n          listBlock = sibling;\n          block = dom.rename(block, listItemName);\n          sibling.appendChild(block);\n        } else {\n          listBlock = dom.create(listName);\n          block.parentNode.insertBefore(listBlock, block);\n          listBlock.appendChild(block);\n          block = dom.rename(block, listItemName);\n        }\n\n        removeStyles(dom, block, ['margin', 'margin-right', 'margin-bottom', 'margin-left', 'margin-top', 'padding', 'padding-right', 'padding-bottom', 'padding-left', 'padding-top']);\n        updateListWithDetails(dom, listBlock, detail);\n        mergeWithAdjacentLists(editor.dom, listBlock);\n      });\n      editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n    };\n\n    var removeList = function (editor) {\n      var bookmark = $_3byghwfqjfuw8pln.createBookmark(editor.selection.getRng(true));\n      var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, editor.selection.getStart(true));\n      var listItems = $_2bncsnfujfuw8plw.getSelectedListItems(editor);\n      var emptyListItems = global$5.grep(listItems, function (li) {\n        return editor.dom.isEmpty(li);\n      });\n      listItems = global$5.grep(listItems, function (li) {\n        return !editor.dom.isEmpty(li);\n      });\n      global$5.each(emptyListItems, function (li) {\n        if ($_fmlqy7fsjfuw8plr.isEmpty(editor.dom, li)) {\n          $_b067pwfojfuw8plj.outdent(editor, li);\n          return;\n        }\n      });\n      global$5.each(listItems, function (li) {\n        var node, rootList;\n\n        if (li.parentNode === editor.getBody()) {\n          return;\n        }\n\n        for (node = li; node && node !== root; node = node.parentNode) {\n          if ($_fmlqy7fsjfuw8plr.isListNode(node)) {\n            rootList = node;\n          }\n        }\n\n        $_dbkw03fwjfuw8plz.splitList(editor, rootList, li);\n        $_7p90zmftjfuw8plu.normalizeLists(editor.dom, rootList.parentNode);\n      });\n      editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n    };\n\n    var isValidLists = function (list1, list2) {\n      return list1 && list2 && $_fmlqy7fsjfuw8plr.isListNode(list1) && list1.nodeName === list2.nodeName;\n    };\n\n    var hasSameListStyle = function (dom, list1, list2) {\n      var targetStyle = dom.getStyle(list1, 'list-style-type', true);\n      var style = dom.getStyle(list2, 'list-style-type', true);\n      return targetStyle === style;\n    };\n\n    var hasSameClasses = function (elm1, elm2) {\n      return elm1.className === elm2.className;\n    };\n\n    var shouldMerge = function (dom, list1, list2) {\n      return isValidLists(list1, list2) && hasSameListStyle(dom, list1, list2) && hasSameClasses(list1, list2);\n    };\n\n    var mergeWithAdjacentLists = function (dom, listBlock) {\n      var sibling, node;\n      sibling = listBlock.nextSibling;\n\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.firstChild) {\n          listBlock.appendChild(node);\n        }\n\n        dom.remove(sibling);\n      }\n\n      sibling = listBlock.previousSibling;\n\n      if (shouldMerge(dom, listBlock, sibling)) {\n        while (node = sibling.lastChild) {\n          listBlock.insertBefore(node, listBlock.firstChild);\n        }\n\n        dom.remove(sibling);\n      }\n    };\n\n    var updateList = function (dom, list, listName, detail) {\n      if (list.nodeName !== listName) {\n        var newList = dom.rename(list, listName);\n        updateListWithDetails(dom, newList, detail);\n      } else {\n        updateListWithDetails(dom, list, detail);\n      }\n    };\n\n    var toggleMultipleLists = function (editor, parentList, lists, listName, detail) {\n      if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n        removeList(editor);\n      } else {\n        var bookmark = $_3byghwfqjfuw8pln.createBookmark(editor.selection.getRng(true));\n        global$5.each([parentList].concat(lists), function (elm) {\n          updateList(editor.dom, elm, listName, detail);\n        });\n        editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n      }\n    };\n\n    var hasListStyleDetail = function (detail) {\n      return 'list-style-type' in detail;\n    };\n\n    var toggleSingleList = function (editor, parentList, listName, detail) {\n      if (parentList === editor.getBody()) {\n        return;\n      }\n\n      if (parentList) {\n        if (parentList.nodeName === listName && !hasListStyleDetail(detail)) {\n          removeList(editor);\n        } else {\n          var bookmark = $_3byghwfqjfuw8pln.createBookmark(editor.selection.getRng(true));\n          updateListWithDetails(editor.dom, parentList, detail);\n          mergeWithAdjacentLists(editor.dom, editor.dom.rename(parentList, listName));\n          editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n        }\n      } else {\n        applyList(editor, listName, detail);\n      }\n    };\n\n    var toggleList = function (editor, listName, detail) {\n      var parentList = $_2bncsnfujfuw8plw.getParentList(editor);\n      var selectedSubLists = $_2bncsnfujfuw8plw.getSelectedSubLists(editor);\n      detail = detail ? detail : {};\n\n      if (parentList && selectedSubLists.length > 0) {\n        toggleMultipleLists(editor, parentList, selectedSubLists, listName, detail);\n      } else {\n        toggleSingleList(editor, parentList, listName, detail);\n      }\n    };\n\n    var $_8qbnsrfljfuw8plb = {\n      toggleList: toggleList,\n      removeList: removeList,\n      mergeWithAdjacentLists: mergeWithAdjacentLists\n    };\n\n    var findNextCaretContainer = function (editor, rng, isForward, root) {\n      var node = rng.startContainer;\n      var offset = rng.startOffset;\n      var nonEmptyBlocks, walker;\n\n      if (node.nodeType === 3 && (isForward ? offset < node.data.length : offset > 0)) {\n        return node;\n      }\n\n      nonEmptyBlocks = editor.schema.getNonEmptyElements();\n\n      if (node.nodeType === 1) {\n        node = global$1.getNode(node, offset);\n      }\n\n      walker = new global$2(node, root);\n\n      if (isForward) {\n        if ($_fmlqy7fsjfuw8plr.isBogusBr(editor.dom, node)) {\n          walker.next();\n        }\n      }\n\n      while (node = walker[isForward ? 'next' : 'prev2']()) {\n        if (node.nodeName === 'LI' && !node.hasChildNodes()) {\n          return node;\n        }\n\n        if (nonEmptyBlocks[node.nodeName]) {\n          return node;\n        }\n\n        if (node.nodeType === 3 && node.data.length > 0) {\n          return node;\n        }\n      }\n    };\n\n    var hasOnlyOneBlockChild = function (dom, elm) {\n      var childNodes = elm.childNodes;\n      return childNodes.length === 1 && !$_fmlqy7fsjfuw8plr.isListNode(childNodes[0]) && dom.isBlock(childNodes[0]);\n    };\n\n    var unwrapSingleBlockChild = function (dom, elm) {\n      if (hasOnlyOneBlockChild(dom, elm)) {\n        dom.remove(elm.firstChild, true);\n      }\n    };\n\n    var moveChildren = function (dom, fromElm, toElm) {\n      var node, targetElm;\n      targetElm = hasOnlyOneBlockChild(dom, toElm) ? toElm.firstChild : toElm;\n      unwrapSingleBlockChild(dom, fromElm);\n\n      if (!$_fmlqy7fsjfuw8plr.isEmpty(dom, fromElm, true)) {\n        while (node = fromElm.firstChild) {\n          targetElm.appendChild(node);\n        }\n      }\n    };\n\n    var mergeLiElements = function (dom, fromElm, toElm) {\n      var node, listNode;\n      var ul = fromElm.parentNode;\n\n      if (!$_fmlqy7fsjfuw8plr.isChildOfBody(dom, fromElm) || !$_fmlqy7fsjfuw8plr.isChildOfBody(dom, toElm)) {\n        return;\n      }\n\n      if ($_fmlqy7fsjfuw8plr.isListNode(toElm.lastChild)) {\n        listNode = toElm.lastChild;\n      }\n\n      if (ul === toElm.lastChild) {\n        if ($_fmlqy7fsjfuw8plr.isBr(ul.previousSibling)) {\n          dom.remove(ul.previousSibling);\n        }\n      }\n\n      node = toElm.lastChild;\n\n      if (node && $_fmlqy7fsjfuw8plr.isBr(node) && fromElm.hasChildNodes()) {\n        dom.remove(node);\n      }\n\n      if ($_fmlqy7fsjfuw8plr.isEmpty(dom, toElm, true)) {\n        dom.$(toElm).empty();\n      }\n\n      moveChildren(dom, fromElm, toElm);\n\n      if (listNode) {\n        toElm.appendChild(listNode);\n      }\n\n      dom.remove(fromElm);\n\n      if ($_fmlqy7fsjfuw8plr.isEmpty(dom, ul) && ul !== dom.getRoot()) {\n        dom.remove(ul);\n      }\n    };\n\n    var mergeIntoEmptyLi = function (editor, fromLi, toLi) {\n      editor.dom.$(toLi).empty();\n      mergeLiElements(editor.dom, fromLi, toLi);\n      editor.selection.setCursorLocation(toLi);\n    };\n\n    var mergeForward = function (editor, rng, fromLi, toLi) {\n      var dom = editor.dom;\n\n      if (dom.isEmpty(toLi)) {\n        mergeIntoEmptyLi(editor, fromLi, toLi);\n      } else {\n        var bookmark = $_3byghwfqjfuw8pln.createBookmark(rng);\n        mergeLiElements(dom, fromLi, toLi);\n        editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n      }\n    };\n\n    var mergeBackward = function (editor, rng, fromLi, toLi) {\n      var bookmark = $_3byghwfqjfuw8pln.createBookmark(rng);\n      mergeLiElements(editor.dom, fromLi, toLi);\n      var resolvedBookmark = $_3byghwfqjfuw8pln.resolveBookmark(bookmark);\n      editor.selection.setRng(resolvedBookmark);\n    };\n\n    var backspaceDeleteFromListToListCaret = function (editor, isForward) {\n      var dom = editor.dom,\n          selection = editor.selection;\n      var selectionStartElm = selection.getStart();\n      var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, selectionStartElm);\n      var li = dom.getParent(selection.getStart(), 'LI', root);\n      var ul, rng, otherLi;\n\n      if (li) {\n        ul = li.parentNode;\n\n        if (ul === editor.getBody() && $_fmlqy7fsjfuw8plr.isEmpty(dom, ul)) {\n          return true;\n        }\n\n        rng = $_14fh94frjfuw8plp.normalizeRange(selection.getRng(true));\n        otherLi = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n\n        if (otherLi && otherLi !== li) {\n          if (isForward) {\n            mergeForward(editor, rng, otherLi, li);\n          } else {\n            mergeBackward(editor, rng, li, otherLi);\n          }\n\n          return true;\n        } else if (!otherLi) {\n          if (!isForward && $_8qbnsrfljfuw8plb.removeList(editor)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    var removeBlock = function (dom, block, root) {\n      var parentBlock = dom.getParent(block.parentNode, dom.isBlock, root);\n      dom.remove(block);\n\n      if (parentBlock && dom.isEmpty(parentBlock)) {\n        dom.remove(parentBlock);\n      }\n    };\n\n    var backspaceDeleteIntoListCaret = function (editor, isForward) {\n      var dom = editor.dom;\n      var selectionStartElm = editor.selection.getStart();\n      var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, selectionStartElm);\n      var block = dom.getParent(selectionStartElm, dom.isBlock, root);\n\n      if (block && dom.isEmpty(block)) {\n        var rng = $_14fh94frjfuw8plp.normalizeRange(editor.selection.getRng(true));\n        var otherLi_1 = dom.getParent(findNextCaretContainer(editor, rng, isForward, root), 'LI', root);\n\n        if (otherLi_1) {\n          editor.undoManager.transact(function () {\n            removeBlock(dom, block, root);\n            $_8qbnsrfljfuw8plb.mergeWithAdjacentLists(dom, otherLi_1.parentNode);\n            editor.selection.select(otherLi_1, true);\n            editor.selection.collapse(isForward);\n          });\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    var backspaceDeleteCaret = function (editor, isForward) {\n      return backspaceDeleteFromListToListCaret(editor, isForward) || backspaceDeleteIntoListCaret(editor, isForward);\n    };\n\n    var backspaceDeleteRange = function (editor) {\n      var selectionStartElm = editor.selection.getStart();\n      var root = $_2bncsnfujfuw8plw.getClosestListRootElm(editor, selectionStartElm);\n      var startListParent = editor.dom.getParent(selectionStartElm, 'LI,DT,DD', root);\n\n      if (startListParent || $_2bncsnfujfuw8plw.getSelectedListItems(editor).length > 0) {\n        editor.undoManager.transact(function () {\n          editor.execCommand('Delete');\n          $_7p90zmftjfuw8plu.normalizeLists(editor.dom, editor.getBody());\n        });\n        return true;\n      }\n\n      return false;\n    };\n\n    var backspaceDelete = function (editor, isForward) {\n      return editor.selection.isCollapsed() ? backspaceDeleteCaret(editor, isForward) : backspaceDeleteRange(editor);\n    };\n\n    var setup = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode === global$3.BACKSPACE) {\n          if (backspaceDelete(editor, false)) {\n            e.preventDefault();\n          }\n        } else if (e.keyCode === global$3.DELETE) {\n          if (backspaceDelete(editor, true)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n\n    var $_6qu3vpfhjfuw8pl2 = {\n      setup: setup,\n      backspaceDelete: backspaceDelete\n    };\n\n    var get = function (editor) {\n      return {\n        backspaceDelete: function (isForward) {\n          $_6qu3vpfhjfuw8pl2.backspaceDelete(editor, isForward);\n        }\n      };\n    };\n\n    var $_bgmttlfgjfuw8pl0 = {\n      get: get\n    };\n    var DOM$5 = global$6.DOM;\n\n    var mergeLists = function (from, to) {\n      var node;\n\n      if ($_fmlqy7fsjfuw8plr.isListNode(from)) {\n        while (node = from.firstChild) {\n          to.appendChild(node);\n        }\n\n        DOM$5.remove(from);\n      }\n    };\n\n    var indent = function (li) {\n      var sibling, newList, listStyle;\n\n      if (li.nodeName === 'DT') {\n        DOM$5.rename(li, 'DD');\n        return true;\n      }\n\n      sibling = li.previousSibling;\n\n      if (sibling && $_fmlqy7fsjfuw8plr.isListNode(sibling)) {\n        sibling.appendChild(li);\n        return true;\n      }\n\n      if (sibling && sibling.nodeName === 'LI' && $_fmlqy7fsjfuw8plr.isListNode(sibling.lastChild)) {\n        sibling.lastChild.appendChild(li);\n        mergeLists(li.lastChild, sibling.lastChild);\n        return true;\n      }\n\n      sibling = li.nextSibling;\n\n      if (sibling && $_fmlqy7fsjfuw8plr.isListNode(sibling)) {\n        sibling.insertBefore(li, sibling.firstChild);\n        return true;\n      }\n\n      sibling = li.previousSibling;\n\n      if (sibling && sibling.nodeName === 'LI') {\n        newList = DOM$5.create(li.parentNode.nodeName);\n        listStyle = DOM$5.getStyle(li.parentNode, 'listStyleType');\n\n        if (listStyle) {\n          DOM$5.setStyle(newList, 'listStyleType', listStyle);\n        }\n\n        sibling.appendChild(newList);\n        newList.appendChild(li);\n        mergeLists(li.lastChild, newList);\n        return true;\n      }\n\n      return false;\n    };\n\n    var indentSelection = function (editor) {\n      var listElements = $_2bncsnfujfuw8plw.getSelectedListItems(editor);\n\n      if (listElements.length) {\n        var bookmark = $_3byghwfqjfuw8pln.createBookmark(editor.selection.getRng(true));\n\n        for (var i = 0; i < listElements.length; i++) {\n          if (!indent(listElements[i]) && i === 0) {\n            break;\n          }\n        }\n\n        editor.selection.setRng($_3byghwfqjfuw8pln.resolveBookmark(bookmark));\n        editor.nodeChanged();\n        return true;\n      }\n    };\n\n    var $_4zf6mug0jfuw8pm7 = {\n      indentSelection: indentSelection\n    };\n\n    var queryListCommandState = function (editor, listName) {\n      return function () {\n        var parentList = editor.dom.getParent(editor.selection.getStart(), 'UL,OL,DL');\n        return parentList && parentList.nodeName === listName;\n      };\n    };\n\n    var register = function (editor) {\n      editor.on('BeforeExecCommand', function (e) {\n        var cmd = e.command.toLowerCase();\n        var isHandled;\n\n        if (cmd === 'indent') {\n          if ($_4zf6mug0jfuw8pm7.indentSelection(editor)) {\n            isHandled = true;\n          }\n        } else if (cmd === 'outdent') {\n          if ($_b067pwfojfuw8plj.outdentSelection(editor)) {\n            isHandled = true;\n          }\n        }\n\n        if (isHandled) {\n          editor.fire('ExecCommand', {\n            command: e.command\n          });\n          e.preventDefault();\n          return true;\n        }\n      });\n      editor.addCommand('InsertUnorderedList', function (ui, detail) {\n        $_8qbnsrfljfuw8plb.toggleList(editor, 'UL', detail);\n      });\n      editor.addCommand('InsertOrderedList', function (ui, detail) {\n        $_8qbnsrfljfuw8plb.toggleList(editor, 'OL', detail);\n      });\n      editor.addCommand('InsertDefinitionList', function (ui, detail) {\n        $_8qbnsrfljfuw8plb.toggleList(editor, 'DL', detail);\n      });\n      editor.addQueryStateHandler('InsertUnorderedList', queryListCommandState(editor, 'UL'));\n      editor.addQueryStateHandler('InsertOrderedList', queryListCommandState(editor, 'OL'));\n      editor.addQueryStateHandler('InsertDefinitionList', queryListCommandState(editor, 'DL'));\n    };\n\n    var $_ci56e3fzjfuw8pm5 = {\n      register: register\n    };\n\n    var shouldIndentOnTab = function (editor) {\n      return editor.getParam('lists_indent_on_tab', true);\n    };\n\n    var $_e85xmvg2jfuw8pmc = {\n      shouldIndentOnTab: shouldIndentOnTab\n    };\n\n    var setupTabKey = function (editor) {\n      editor.on('keydown', function (e) {\n        if (e.keyCode !== global$3.TAB || global$3.metaKeyPressed(e)) {\n          return;\n        }\n\n        if (editor.dom.getParent(editor.selection.getStart(), 'LI,DT,DD')) {\n          e.preventDefault();\n\n          if (e.shiftKey) {\n            $_b067pwfojfuw8plj.outdentSelection(editor);\n          } else {\n            $_4zf6mug0jfuw8pm7.indentSelection(editor);\n          }\n        }\n      });\n    };\n\n    var setup$1 = function (editor) {\n      if ($_e85xmvg2jfuw8pmc.shouldIndentOnTab(editor)) {\n        setupTabKey(editor);\n      }\n\n      $_6qu3vpfhjfuw8pl2.setup(editor);\n    };\n\n    var $_1iz32kg1jfuw8pma = {\n      setup: setup$1\n    };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n\n        if (predicate(element)) {\n          return index;\n        }\n      }\n\n      return -1;\n    };\n\n    var listState = function (editor, listName) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('NodeChange', function (e) {\n          var tableCellIndex = findIndex(e.parents, $_fmlqy7fsjfuw8plr.isTableCellNode);\n          var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n          var lists = global$5.grep(parents, $_fmlqy7fsjfuw8plr.isListNode);\n          ctrl.active(lists.length > 0 && lists[0].nodeName === listName);\n        });\n      };\n    };\n\n    var indentPostRender = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('nodechange', function () {\n          var listItemBlocks = $_2bncsnfujfuw8plw.getSelectedListItems(editor);\n          var disable = listItemBlocks.length > 0 && $_fmlqy7fsjfuw8plr.isFirstChild(listItemBlocks[0]);\n          ctrl.disabled(disable);\n        });\n      };\n    };\n\n    var register$1 = function (editor) {\n      var hasPlugin = function (editor, plugin) {\n        var plugins = editor.settings.plugins ? editor.settings.plugins : '';\n        return global$5.inArray(plugins.split(/[ ,]/), plugin) !== -1;\n      };\n\n      if (!hasPlugin(editor, 'advlist')) {\n        editor.addButton('numlist', {\n          active: false,\n          title: 'Numbered list',\n          cmd: 'InsertOrderedList',\n          onPostRender: listState(editor, 'OL')\n        });\n        editor.addButton('bullist', {\n          active: false,\n          title: 'Bullet list',\n          cmd: 'InsertUnorderedList',\n          onPostRender: listState(editor, 'UL')\n        });\n      }\n\n      editor.addButton('indent', {\n        icon: 'indent',\n        title: 'Increase indent',\n        cmd: 'Indent',\n        onPostRender: indentPostRender(editor)\n      });\n    };\n\n    var $_fizi9xg3jfuw8pmd = {\n      register: register$1\n    };\n    global.add('lists', function (editor) {\n      $_1iz32kg1jfuw8pma.setup(editor);\n      $_fizi9xg3jfuw8pmd.register(editor);\n      $_ci56e3fzjfuw8pm5.register(editor);\n      return $_bgmttlfgjfuw8pl0.get(editor);\n    });\n\n    function Plugin() {}\n\n    return Plugin;\n  }();\n})();","map":null,"metadata":{},"sourceType":"script"}