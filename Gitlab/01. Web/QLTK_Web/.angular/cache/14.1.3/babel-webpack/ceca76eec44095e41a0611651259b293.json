{"ast":null,"code":"import { TemplateRef, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let UipermissionDirective = /*#__PURE__*/(() => {\n  class UipermissionDirective {\n    constructor(templateRef, viewContainer) {\n      this.templateRef = templateRef;\n      this.viewContainer = viewContainer;\n    }\n\n    set appUipermission(permission) {\n      var isAuthorize = false;\n      var user = localStorage.getItem('qltkcurrentUser');\n\n      if (user) {\n        var listPermissionString = JSON.parse(user).permissions;\n        var listPermission = listPermissionString != null ? JSON.parse(listPermissionString) : null;\n\n        if (listPermission != null && listPermission.length > 0 && permission && permission.length > 0) {\n          for (let index = 0; index < permission.length; index++) {\n            if (!isAuthorize && listPermission.indexOf(permission[index]) != -1) {\n              isAuthorize = true;\n              index = permission.length;\n            }\n          }\n        }\n      }\n\n      if (!permission || permission.length == 0) {\n        isAuthorize = true;\n      }\n\n      if (isAuthorize) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainer.clear();\n      }\n    }\n\n  }\n\n  UipermissionDirective.ɵfac = function UipermissionDirective_Factory(t) {\n    return new (t || UipermissionDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  UipermissionDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: UipermissionDirective,\n    selectors: [[\"\", \"appUipermission\", \"\"]],\n    inputs: {\n      appUipermission: \"appUipermission\"\n    }\n  });\n  return UipermissionDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}