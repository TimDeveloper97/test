{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/content/layout.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"appointmentTemplate\", \"data\", \"dateText\", \"hideReducedIconTooltip\", \"index\", \"isRecurrent\", \"isReduced\", \"showReducedIconTooltip\", \"text\"];\nimport { createVNode, createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { AppointmentDetails } from \"./details/layout\";\nimport { AppointmentTitle } from \"./title/layout\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      appointmentTemplate: appointmentTemplate,\n      data: data,\n      dateText: dateText,\n      index: index,\n      isRecurrent: isRecurrent,\n      isReduced: isReduced,\n      text: text\n    },\n    refReducedIcon: refReducedIcon\n  } = _ref;\n  var AppointmentTemplate = appointmentTemplate;\n  return createVNode(1, \"div\", \"dx-scheduler-appointment-content\", appointmentTemplate ? AppointmentTemplate({\n    data: data,\n    index: index\n  }) : createFragment([createComponentVNode(2, AppointmentTitle, {\n    text: text\n  }), createComponentVNode(2, AppointmentDetails, {\n    dateText: dateText\n  }), isRecurrent && createVNode(1, \"div\", \"dx-scheduler-appointment-recurrence-icon dx-icon-repeat\"), isReduced && createVNode(1, \"div\", \"dx-scheduler-appointment-reduced-icon\", null, 1, null, null, refReducedIcon)], 0), 0);\n};\nexport var AppointmentContentProps = {\n  text: \"\",\n  dateText: \"\",\n  isRecurrent: false,\n  isReduced: false,\n  index: 0\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let AppointmentContent = /*#__PURE__*/(() => {\n  class AppointmentContent extends InfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n      this.refReducedIcon = infernoCreateRef();\n      this.bindHoverEffect = this.bindHoverEffect.bind(this);\n      this.onReducedIconMouseEnter = this.onReducedIconMouseEnter.bind(this);\n      this.onReducedIconMouseLeave = this.onReducedIconMouseLeave.bind(this);\n    }\n\n    createEffects() {\n      return [new InfernoEffect(this.bindHoverEffect, [this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip])];\n    }\n\n    updateEffects() {\n      var _this$_effects$;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip]);\n    }\n\n    bindHoverEffect() {\n      var _this$refReducedIcon$, _this$refReducedIcon$2;\n\n      var onMouseEnter = () => this.onReducedIconMouseEnter();\n\n      var onMouseLeave = () => this.onReducedIconMouseLeave();\n\n      null === (_this$refReducedIcon$ = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$ ? void 0 : _this$refReducedIcon$.addEventListener(\"mouseenter\", onMouseEnter);\n      null === (_this$refReducedIcon$2 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$2 ? void 0 : _this$refReducedIcon$2.addEventListener(\"mouseleave\", onMouseLeave);\n      return () => {\n        var _this$refReducedIcon$3, _this$refReducedIcon$4;\n\n        null === (_this$refReducedIcon$3 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$3 ? void 0 : _this$refReducedIcon$3.removeEventListener(\"mouseenter\", onMouseEnter);\n        null === (_this$refReducedIcon$4 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$4 ? void 0 : _this$refReducedIcon$4.removeEventListener(\"mouseleave\", onMouseLeave);\n      };\n    }\n\n    onReducedIconMouseEnter() {\n      this.props.showReducedIconTooltip({\n        target: this.refReducedIcon.current,\n        endDate: this.props.data.appointmentData.endDate\n      });\n    }\n\n    onReducedIconMouseLeave() {\n      this.props.hideReducedIconTooltip();\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          appointmentTemplate: getTemplate(props.appointmentTemplate)\n        }),\n        refReducedIcon: this.refReducedIcon,\n        onReducedIconMouseEnter: this.onReducedIconMouseEnter,\n        onReducedIconMouseLeave: this.onReducedIconMouseLeave,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  AppointmentContent.defaultProps = AppointmentContentProps;\n  return AppointmentContent;\n})();","map":null,"metadata":{},"sourceType":"module"}