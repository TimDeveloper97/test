{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"addVerticalSizesClassToRows\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\", \"width\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"../row\";\nimport { AllDayPanelTableBody } from \"./all_day_panel/table_body\";\nimport { LayoutProps } from \"../layout_props\";\nimport { DateTableCellBase } from \"./cell\";\nimport { combineClasses } from \"../../../../../utils/combine_classes\";\nimport { DATE_TABLE_ROW_CLASS } from \"../../const\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      cellTemplate: Cell,\n      dataCellTemplate: dataCellTemplate,\n      viewData: viewData\n    },\n    rowClasses: rowClasses\n  } = _ref;\n  return createFragment(viewData.groupedData.map(_ref2 => {\n    var {\n      allDayPanel: allDayPanel,\n      dateTable: dateTable,\n      isGroupedAllDayPanel: isGroupedAllDayPanel,\n      key: fragmentKey\n    } = _ref2;\n    return createFragment([isGroupedAllDayPanel && createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanel,\n      dataCellTemplate: dataCellTemplate,\n      isVerticalGroupOrientation: true,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount\n    }), dateTable.map(_ref3 => {\n      var {\n        cells: cells,\n        key: rowKey\n      } = _ref3;\n      return createComponentVNode(2, Row, {\n        className: rowClasses,\n        leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n        rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n        leftVirtualCellCount: viewData.leftVirtualCellCount,\n        rightVirtualCellCount: viewData.rightVirtualCellCount,\n        children: cells.map(_ref4 => {\n          var {\n            endDate: endDate,\n            firstDayOfMonth: firstDayOfMonth,\n            groupIndex: cellGroupIndex,\n            groups: groups,\n            index: cellIndex,\n            isFirstGroupCell: isFirstGroupCell,\n            isFocused: isFocused,\n            isLastGroupCell: isLastGroupCell,\n            isSelected: isSelected,\n            key: key,\n            otherMonth: otherMonth,\n            startDate: startDate,\n            text: text,\n            today: today\n          } = _ref4;\n          return Cell({\n            isFirstGroupCell: isFirstGroupCell,\n            isLastGroupCell: isLastGroupCell,\n            startDate: startDate,\n            endDate: endDate,\n            groups: groups,\n            groupIndex: cellGroupIndex,\n            index: cellIndex,\n            dataCellTemplate: dataCellTemplate,\n            key: key,\n            text: text,\n            today: today,\n            otherMonth: otherMonth,\n            firstDayOfMonth: firstDayOfMonth,\n            isSelected: isSelected,\n            isFocused: isFocused\n          });\n        })\n      }, rowKey);\n    })], 0, fragmentKey);\n  }), 0);\n};\nexport var DateTableBodyProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(LayoutProps), Object.getOwnPropertyDescriptors({\n  cellTemplate: DateTableCellBase\n})));\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let DateTableBody = /*#__PURE__*/(() => {\n  class DateTableBody extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    get rowClasses() {\n      var {\n        addVerticalSizesClassToRows: addVerticalSizesClassToRows\n      } = this.props;\n      return combineClasses({\n        [DATE_TABLE_ROW_CLASS]: true,\n        \"dx-scheduler-cell-sizes-vertical\": addVerticalSizesClassToRows\n      });\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          cellTemplate: getTemplate(props.cellTemplate),\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        rowClasses: this.rowClasses,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  DateTableBody.defaultProps = DateTableBodyProps;\n  return DateTableBody;\n})();","map":null,"metadata":{},"sourceType":"module"}