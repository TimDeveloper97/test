{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ScheduleProjectService = /*#__PURE__*/(() => {\n  class ScheduleProjectService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    createStage(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/stage/choose', model, httpOptions);\n      return tr;\n    }\n\n    getVersionName() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/getVersionName', httpOptions);\n      return tr;\n    }\n\n    getListPlanByProjectId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListPlanByProjectId', model, httpOptions);\n      return tr;\n    }\n\n    getListPlanByMonth(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListPlanByMonth', model, httpOptions);\n      return tr;\n    }\n\n    getListProjectProductByProjectId(ProjectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListProjectProductByProjectId?ProjectId=' + ProjectId, httpOptions);\n      return tr;\n    }\n\n    getTaskTimeStandByTaskId(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetTaskTimeStandardByTaskId', model, httpOptions);\n      return tr;\n    }\n\n    getStatisticalProject(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetStatisticalProject', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    exportExcelProjectSchedule(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/ExportExcelProjectSchedule', model, httpOptions);\n      return tr;\n    }\n\n    importExcel(file) {\n      let formData = new FormData();\n      formData.append('File', file); //formData.append('ProjectId', projectId);\n\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/ImportExcel', formData);\n      return tr;\n    }\n\n    updateOTPlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/UpdateOTPlan', model, httpOptions);\n      return tr;\n    }\n\n    searchWorkingReport(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/SearchWorkingReport', model, httpOptions);\n      return tr;\n    }\n\n    exportExcelWorkingReport(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/ExportExcelWorkingReport', model, httpOptions);\n      return tr;\n    }\n\n    searchOverallProject(Id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'OverallProject/SearchOverallProject/' + Id, httpOptions);\n      return tr;\n    }\n\n    searchRiskProblemProject(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'OverallProject/searchRiskProblemProject', model, httpOptions);\n      return tr;\n    }\n\n    createPlanAdjustment(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/createPlanAdjustment', model, httpOptions);\n      return tr;\n    }\n\n    exportExcelProjectPlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/ExportExcelProjectPlan', model, httpOptions);\n      return tr;\n    }\n\n    getListEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListEmployee', model, httpOptions);\n      return tr;\n    }\n\n    getListPlanAdjustment(planId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListPlanAdjustment?planId=' + planId, httpOptions);\n      return tr;\n    }\n\n    updatePlanAssignment(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/UpdatePlanAssignment', model, httpOptions);\n      return tr;\n    }\n\n    getDataCopy(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetDataCopy', model, httpOptions);\n      return tr;\n    }\n\n    createPlanCopy(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/CreatePlanCopy', model, httpOptions);\n      return tr;\n    }\n\n    createStageCopy(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/CreateStageCopy', model, httpOptions);\n      return tr;\n    }\n\n    getListTask() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Plans/GetListTask', httpOptions);\n      return tr;\n    }\n\n    getListHoliday() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListHoliday', httpOptions);\n      return tr;\n    }\n\n    getPlanAdjustment(planId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/get-plan-assignment?planId=' + planId, httpOptions);\n      return tr;\n    }\n\n    getListOrder(projectProductId, stageId, type) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListOrder?projectProductId=' + projectProductId + '&stageId=' + stageId + '&type=' + type, httpOptions);\n      return tr;\n    }\n\n    getPlanHistoryInfo(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetPlanHistoryInfo?id=' + id, httpOptions);\n      return tr;\n    }\n\n    getListSupplier() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/GetListSuppliers', httpOptions);\n      return tr;\n    }\n\n    createPlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/create', model, httpOptions);\n      return tr;\n    }\n\n    deletePlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/delete', model, httpOptions);\n      return tr;\n    }\n\n    deleteStage(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/stage/delete', model, httpOptions);\n      return tr;\n    }\n\n    deleteMultiPlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/delete/multiple', model, httpOptions);\n      return tr;\n    }\n\n    updatePlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/update', model, httpOptions);\n      return tr;\n    }\n\n    modifyPlan(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/modify', model, httpOptions);\n      return tr;\n    }\n\n    pending(planId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/pending?planId=' + planId, httpOptions);\n      return tr;\n    }\n\n    resume(planId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ScheduleProject/plan/resume?planId=' + planId, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ScheduleProjectService.ɵfac = function ScheduleProjectService_Factory(t) {\n    return new (t || ScheduleProjectService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ScheduleProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ScheduleProjectService,\n    factory: ScheduleProjectService.ɵfac,\n    providedIn: 'root'\n  });\n  return ScheduleProjectService;\n})();","map":null,"metadata":{},"sourceType":"module"}