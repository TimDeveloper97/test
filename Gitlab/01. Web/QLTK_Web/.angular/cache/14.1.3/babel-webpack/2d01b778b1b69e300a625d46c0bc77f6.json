{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"addVerticalSizesClassToRows\", \"bottomVirtualRowHeight\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"tableRef\", \"topVirtualRowHeight\", \"viewData\", \"width\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/runtime/inferno\";\nimport { Table } from \"../../table\";\nimport { AllDayPanelTableBody } from \"./table_body\";\nimport { LayoutProps } from \"../../layout_props\";\nimport { DefaultSizes } from \"../../../const\";\nexport var viewFunction = _ref => {\n  var {\n    allDayPanelData: allDayPanelData,\n    emptyTableHeight: emptyTableHeight,\n    props: {\n      dataCellTemplate: dataCellTemplate,\n      tableRef: tableRef,\n      viewData: viewData,\n      width: width\n    }\n  } = _ref;\n  return createComponentVNode(2, Table, {\n    className: \"dx-scheduler-all-day-table\",\n    height: emptyTableHeight,\n    width: width,\n    tableRef: tableRef,\n    children: createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanelData,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount,\n      dataCellTemplate: dataCellTemplate\n    })\n  });\n};\nexport var AllDayTableProps = LayoutProps;\nimport { createReRenderEffect } from \"@devextreme/runtime/inferno\";\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let AllDayTable = /*#__PURE__*/(() => {\n  class AllDayTable extends InfernoWrapperComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n      this.__getterCache = {};\n    }\n\n    createEffects() {\n      return [createReRenderEffect()];\n    }\n\n    get allDayPanelData() {\n      if (void 0 !== this.__getterCache.allDayPanelData) {\n        return this.__getterCache.allDayPanelData;\n      }\n\n      return this.__getterCache.allDayPanelData = (() => this.props.viewData.groupedData[0].allDayPanel)();\n    }\n\n    get emptyTableHeight() {\n      return this.allDayPanelData ? void 0 : DefaultSizes.allDayPanelHeight;\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    componentWillUpdate(nextProps, nextState, context) {\n      super.componentWillUpdate();\n\n      if (this.props.viewData !== nextProps.viewData) {\n        this.__getterCache.allDayPanelData = void 0;\n      }\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        allDayPanelData: this.allDayPanelData,\n        emptyTableHeight: this.emptyTableHeight,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  AllDayTable.defaultProps = AllDayTableProps;\n  return AllDayTable;\n})();","map":null,"metadata":{},"sourceType":"module"}