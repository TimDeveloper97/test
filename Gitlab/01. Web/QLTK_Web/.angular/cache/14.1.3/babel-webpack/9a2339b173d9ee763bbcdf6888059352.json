{"ast":null,"code":"import { ObjectDate } from './ObjectDate';\nimport * as i0 from \"@angular/core\";\nexport let DateUtils = /*#__PURE__*/(() => {\n  class DateUtils {\n    constructor() {}\n\n    getDateNowYYYYMMDD() {\n      var dateNow = new Date();\n      var month = dateNow.getMonth() + 1;\n      var day = dateNow.getDate();\n      return dateNow.getFullYear() + '-' + (month < 10 ? '0' + month : month) + \"-\" + (day < 10 ? '0' + day : day);\n    }\n\n    getDateNowToObject() {\n      var dateNow = new Date();\n      return {\n        year: dateNow.getFullYear(),\n        month: dateNow.getMonth() + 1,\n        day: dateNow.getDate()\n      };\n    }\n\n    getFiscalYearStart() {\n      var dateNow = new Date();\n      return {\n        year: dateNow.getFullYear(),\n        month: 4,\n        day: 1\n      };\n    }\n\n    getFiscalYearEnd() {\n      var dateNow = new Date();\n      return {\n        year: dateNow.getFullYear() + 1,\n        month: 3,\n        day: 31\n      };\n    }\n\n    getObjectDateByDate(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate()\n      };\n    }\n\n    convertDateToObject(date) {\n      let temp = date.split('T')[0].split('-');\n      return {\n        year: Number(temp[0]),\n        month: Number(temp[1]),\n        day: Number(temp[2])\n      };\n    }\n\n    convertDateStringToDDMMYY(date) {\n      let temp = date.split('T')[0].split('-');\n      return (Number(temp[2]) < 10 ? '0' + Number(temp[2]) : Number(temp[2])) + '/' + (Number(temp[1]) < 10 ? '0' + Number(temp[1]) : Number(temp[1])) + \"/\" + Number(temp[0]);\n    }\n\n    getDateToObject(date) {\n      let temp = date.split('-');\n      return {\n        year: Number(temp[0]),\n        month: Number(temp[1]),\n        day: Number(temp[2])\n      };\n    }\n\n    convertObjectToDate(object) {\n      return object.year + \"-\" + object.month + \"-\" + object.day;\n    }\n\n    convertObjectToDateTime(object) {\n      return object.getFullYear() + \"-\" + object.getMonth() + 1 + \"-\" + object.getDate() + \" \" + object.getHours() + \":\" + object.getMinutes() + \":\" + object.getSeconds();\n    }\n\n    convertObjectUTCToDate(object) {\n      let year = object.getFullYear();\n      let month = object.getMonth() + 1;\n      let date = object.getDate();\n      return year + \"-\" + month + \"-\" + date;\n    }\n\n    dateDifference(date2, date1) {\n      const _MS_PER_DAY = 1000 * 60 * 60 * 24; // Discard the time and time-zone information.\n\n\n      const utc1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n      const utc2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n      return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n    }\n\n    convertDateTimeToObject(dateTime) {\n      let split = dateTime.split('T');\n      let date = split[0].split('-');\n      let time = split[1].split(':');\n      return {\n        year: Number(date[0]),\n        month: Number(date[1]),\n        day: Number(date[2]),\n        hours: Number(time[0]),\n        minutes: Number(time[1]),\n        seconds: Number(time[2])\n      };\n    }\n\n    convertObjectToTime(object) {\n      return object.hour + \":\" + object.minute;\n    }\n\n    convertObjectToTimeString(object) {\n      return object.hour + \"\" + object.minute;\n    }\n\n    convertTimeToObject(time) {\n      let temp = time.split(':');\n      return {\n        hour: Number(temp[0]),\n        minute: Number(temp[1])\n      };\n    }\n\n    getNgbDateStructNow() {\n      var dateNow = new Date();\n      var dateSubtract = {\n        year: 1950,\n        month: dateNow.getMonth() + 1,\n        day: dateNow.getDate()\n      };\n      return dateSubtract;\n    }\n\n    getDateNowStart() {\n      var dateNow = new Date();\n      return {\n        year: dateNow.getFullYear(),\n        month: dateNow.getMonth() + 1,\n        day: 1\n      };\n    }\n\n    getDateNowEnd() {\n      var dateNow = new Date();\n      var dateNext = new Date(dateNow.getFullYear(), dateNow.getMonth() + 1, 0);\n      return {\n        year: dateNow.getFullYear(),\n        month: dateNow.getMonth() + 1,\n        day: dateNext.getDate()\n      };\n    }\n\n    createObjectDate(year, month, day) {\n      var objectDate = new ObjectDate();\n      objectDate.day = day;\n      objectDate.month = month;\n      objectDate.year = year;\n      return objectDate;\n    }\n\n  }\n\n  DateUtils.ɵfac = function DateUtils_Factory(t) {\n    return new (t || DateUtils)();\n  };\n\n  DateUtils.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DateUtils,\n    factory: DateUtils.ɵfac,\n    providedIn: 'root'\n  });\n  return DateUtils;\n})();","map":null,"metadata":{},"sourceType":"module"}