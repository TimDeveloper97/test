{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ProjectEmployeeService = /*#__PURE__*/(() => {\n  class ProjectEmployeeService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    getProjectEmployeeByProjectId(projectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetProjectEmployeeByProjectId?projectId=' + projectId, httpOptions);\n      return tr;\n    }\n\n    getProjectExternalEmployeeByProjectId(projectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetProjectExternalEmployeeByProjectId?projectId=' + projectId, httpOptions);\n      return tr;\n    }\n\n    getSubsidyHistory(projectEmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetSubsidyHistory?projectEmployeeId=' + projectEmployeeId, httpOptions);\n      return tr;\n    }\n\n    updateSubsidyPE(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/UpdateSubsidyPE', model, httpOptions);\n      return tr;\n    }\n\n    AddSubsidyHistory(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/AddSubsidyHistory', model, httpOptions);\n      return tr;\n    }\n\n    searchProjectByEmployeeId(EmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/SearchProjectByEmployeeId?EmployeeId=' + EmployeeId, httpOptions);\n      return tr;\n    }\n\n    getEmployeeName(EmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetEmployeeName?EmployeeId=' + EmployeeId, httpOptions);\n      return tr;\n    }\n\n    getExternalEmployeeName(EmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetExternalEmployeeName?EmployeeId=' + EmployeeId, httpOptions);\n      return tr;\n    }\n\n    getDescriptionRoleById(RoleId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetDescriptionRoleById?RoleId=' + RoleId, httpOptions);\n      return tr;\n    }\n\n    searchProjectByExEmployeeId(EmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/SearchProjectByExEmployeeId?EmployeeId=' + EmployeeId, httpOptions);\n      return tr;\n    }\n\n    searchProjectEmployeeGroup(EmployeeId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/SearchProjectEmployeeGroup', EmployeeId, httpOptions);\n      return tr;\n    }\n\n    getProjectEmployeeNotByProjectId(projectId) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetProjectEmployeeNotByProjectId?projectId=' + projectId, httpOptions);\n      return tr;\n    } ///\n\n\n    getListEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetListEmployee', model, httpOptions);\n      return tr;\n    }\n\n    getListExEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetListExEmployee', model, httpOptions);\n      return tr;\n    }\n\n    getRole() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/GetRole', httpOptions);\n      return tr;\n    }\n\n    addMoreProjectEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/AddMoreProjectEmployee', model, httpOptions);\n      return tr;\n    }\n\n    CreateProjectEmployeeAndExternalEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/CreateProjectEmployeeAndExternalEmployee', model, httpOptions);\n      return tr;\n    }\n\n    deleteProjectDeleteEmployee(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/DeleteEmployee', model, httpOptions);\n      return tr;\n    }\n\n    ExportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ProjectEmployee/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    uploadImage(file, model) {\n      let formData = new FormData();\n      formData.append('Model', JSON.stringify(model));\n      formData.append('File', file);\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/UploadImage', formData);\n      return tr;\n    }\n\n  }\n\n  ProjectEmployeeService.ɵfac = function ProjectEmployeeService_Factory(t) {\n    return new (t || ProjectEmployeeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ProjectEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectEmployeeService,\n    factory: ProjectEmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectEmployeeService;\n})();","map":null,"metadata":{},"sourceType":"module"}