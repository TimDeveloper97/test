{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/events_strategy.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Callbacks from \"./utils/callbacks\";\nimport { each } from \"./utils/iterator\";\nimport { isFunction, isPlainObject } from \"./utils/type\";\nexport class EventsStrategy {\n  constructor(owner) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    this._events = {};\n    this._owner = owner;\n    this._options = options;\n  }\n\n  static create(owner, strategy) {\n    if (strategy) {\n      return isFunction(strategy) ? strategy(owner) : strategy;\n    } else {\n      return new EventsStrategy(owner);\n    }\n  }\n\n  hasEvent(eventName) {\n    var callbacks = this._events[eventName];\n    return callbacks ? callbacks.has() : false;\n  }\n\n  fireEvent(eventName, eventArgs) {\n    var callbacks = this._events[eventName];\n\n    if (callbacks) {\n      callbacks.fireWith(this._owner, eventArgs);\n    }\n\n    return this._owner;\n  }\n\n  on(eventName, eventHandler) {\n    if (isPlainObject(eventName)) {\n      each(eventName, (e, h) => {\n        this.on(e, h);\n      });\n    } else {\n      var callbacks = this._events[eventName];\n\n      if (!callbacks) {\n        callbacks = Callbacks({\n          syncStrategy: this._options.syncStrategy\n        });\n        this._events[eventName] = callbacks;\n      }\n\n      var addFn = callbacks.originalAdd || callbacks.add;\n      addFn.call(callbacks, eventHandler);\n    }\n  }\n\n  off(eventName, eventHandler) {\n    var callbacks = this._events[eventName];\n\n    if (callbacks) {\n      if (isFunction(eventHandler)) {\n        callbacks.remove(eventHandler);\n      } else {\n        callbacks.empty();\n      }\n    }\n  }\n\n  dispose() {\n    each(this._events, (eventName, event) => {\n      event.empty();\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}