{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"isValid\", \"label\", \"labelMode\", \"max\", \"min\", \"mode\", \"name\", \"onClick\", \"onFocusIn\", \"onKeyDown\", \"readOnly\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"validationError\", \"validationErrors\", \"validationMessageMode\", \"validationStatus\", \"value\", \"valueChange\", \"visible\", \"width\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport LegacyNumberBox from \"../../../ui/number_box\";\nimport { DomComponentWrapper } from \"../common/dom_component_wrapper\";\nimport { EditorProps } from \"./common/editor\";\nimport { EditorStateProps } from \"./common/editor_state_props\";\nimport { EditorLabelProps } from \"./common/editor_label_props\";\nvar DEFAULT_VALUE = 0;\nexport var viewFunction = _ref => {\n  var {\n    componentProps: componentProps,\n    restAttributes: restAttributes\n  } = _ref;\n  return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\n    componentType: LegacyNumberBox,\n    componentProps: componentProps,\n    templateNames: []\n  }, restAttributes)));\n};\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(EditorProps), Object.getOwnPropertyDescriptors({\n  defaultValue: DEFAULT_VALUE,\n  isReactComponentWrapper: true\n})));\nexport var NumberBoxPropsType = {\n  get defaultValue() {\n    return NumberBoxProps.defaultValue;\n  },\n\n  get readOnly() {\n    return NumberBoxProps.readOnly;\n  },\n\n  get name() {\n    return NumberBoxProps.name;\n  },\n\n  get validationError() {\n    return NumberBoxProps.validationError;\n  },\n\n  get validationErrors() {\n    return NumberBoxProps.validationErrors;\n  },\n\n  get validationMessageMode() {\n    return NumberBoxProps.validationMessageMode;\n  },\n\n  get validationStatus() {\n    return NumberBoxProps.validationStatus;\n  },\n\n  get isValid() {\n    return NumberBoxProps.isValid;\n  },\n\n  get className() {\n    return NumberBoxProps.className;\n  },\n\n  get activeStateEnabled() {\n    return EditorStateProps.activeStateEnabled;\n  },\n\n  get disabled() {\n    return NumberBoxProps.disabled;\n  },\n\n  get focusStateEnabled() {\n    return EditorStateProps.focusStateEnabled;\n  },\n\n  get hoverStateEnabled() {\n    return EditorStateProps.hoverStateEnabled;\n  },\n\n  get tabIndex() {\n    return NumberBoxProps.tabIndex;\n  },\n\n  get visible() {\n    return NumberBoxProps.visible;\n  },\n\n  get label() {\n    return EditorLabelProps.label;\n  },\n\n  get labelMode() {\n    return EditorLabelProps.labelMode;\n  },\n\n  isReactComponentWrapper: true\n};\nexport let NumberBox = /*#__PURE__*/(() => {\n  class NumberBox extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\n      };\n    }\n\n    get componentProps() {\n      return _extends({}, this.props, {\n        value: void 0 !== this.props.value ? this.props.value : this.state.value\n      });\n    }\n\n    get restAttributes() {\n      var _this$props$value = _extends({}, this.props, {\n        value: void 0 !== this.props.value ? this.props.value : this.state.value\n      }),\n          restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          value: void 0 !== this.props.value ? this.props.value : this.state.value\n        }),\n        componentProps: this.componentProps,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  NumberBox.defaultProps = NumberBoxPropsType;\n  return NumberBox;\n})();","map":null,"metadata":{},"sourceType":"module"}