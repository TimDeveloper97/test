{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../devices\";\nimport { isEmptyObject, isFunction } from \"../utils/type\";\nimport { findBestMatches } from \"../utils/common\";\nimport { extend } from \"../utils/extend\";\nimport { compileGetter } from \"../utils/data\";\nvar cachedGetters = {};\nexport var convertRulesToOptions = rules => {\n  var currentDevice = devices.current();\n  return rules.reduce((options, _ref) => {\n    var {\n      device: device,\n      options: ruleOptions\n    } = _ref;\n    var deviceFilter = device || {};\n    var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\n\n    if (match) {\n      extend(true, options, ruleOptions);\n    }\n\n    return options;\n  }, {});\n};\nexport var normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\n  [options]: value\n};\nexport var deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\nexport var getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\nexport var getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\nexport var getNestedOptionValue = function (optionsObject, name) {\n  cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n  return cachedGetters[name](optionsObject, {\n    functionsAsIs: true\n  });\n};\nexport var createDefaultOptionRules = function () {\n  var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  return options;\n};","map":null,"metadata":{},"sourceType":"module"}