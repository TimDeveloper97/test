{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let MeetingService = /*#__PURE__*/(() => {\n  class MeetingService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchMeeting(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/SearchMeeting', model, httpOptions);\n      return tr;\n    }\n\n    searchMeetingFinish(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/SearchMeetingFinish', model, httpOptions);\n      return tr;\n    }\n\n    createMeeting(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/CreateMeeting', model, httpOptions);\n      return tr;\n    }\n\n    generateCode(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/GenerateCode', model, httpOptions);\n      return tr;\n    }\n\n    getById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'Meeting/get-by-id/' + id, httpOptions);\n      return tr;\n    }\n\n    update(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/update/' + id, model, httpOptions);\n      return tr;\n    }\n\n    update1(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/update-customer-requirment/' + id, model, httpOptions);\n      return tr;\n    }\n\n    addCustomerRequirement(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/add-customer-requirement/' + id, model, httpOptions);\n      return tr;\n    }\n\n    delete(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/delete/' + id, httpOptions);\n      return tr;\n    }\n\n    doMeeting(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/do-meeting/' + id, httpOptions);\n      return tr;\n    }\n\n    cancelMeeting(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/cancel-meeting', model, httpOptions);\n      return tr;\n    }\n\n    finishMeeting(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/finish-meeting/' + id, httpOptions);\n      return tr;\n    }\n\n    getMeetingCustomerContactInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/getMeetingCustomerContactInfo', model, httpOptions);\n      return tr;\n    }\n\n    exportExcel(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/ExportExcel/' + id, model, httpOptions);\n      return tr;\n    }\n\n    createUpdateMeetingRequimentNeedHandle(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/UpdateMeetingRequimentNeedHandle', model, httpOptions);\n      return tr;\n    }\n\n    deleteMeetingRequimentNeedHandle(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/DeleteMeetingRequimentNeedHandle', model, httpOptions);\n      return tr;\n    }\n\n    createUpdateMeetingFileRequimentNeedHandle(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/UpdateMeetingFileRequimentNeedHandle', model, httpOptions);\n      return tr;\n    }\n\n    deleteMeetingFileRequimentNeedHandle(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/DeleteMeetingFileRequimentNeedHandle', model, httpOptions);\n      return tr;\n    }\n\n    getRequimentContent(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/GetRequimentContent/' + id, httpOptions);\n      return tr;\n    }\n\n    createMeetingCustomerContact(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/CreateMeetingCustomerContact', model, httpOptions);\n      return tr;\n    }\n\n    uploadImage(file, model) {\n      let formData = new FormData();\n      formData.append('Model', JSON.stringify(model));\n      formData.append('File', file);\n      var tr = this.http.post(this.config.ServerFileApiUrl + 'HandlingImage/UploadImage', formData);\n      return tr;\n    }\n\n    createCustomerRequimentMeetingContent(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Meeting/CreateCustomerRequimentMeetingContent', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  MeetingService.ɵfac = function MeetingService_Factory(t) {\n    return new (t || MeetingService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  MeetingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MeetingService,\n    factory: MeetingService.ɵfac,\n    providedIn: 'root'\n  });\n  return MeetingService;\n})();","map":null,"metadata":{},"sourceType":"module"}