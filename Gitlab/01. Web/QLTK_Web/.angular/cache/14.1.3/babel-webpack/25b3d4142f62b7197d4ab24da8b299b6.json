{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BlockUI } from 'ng-block-ui';\nimport { BroadcastEventListener } from 'src/app/signalr/broadcast.event.listener';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"src/app/signalR/signal-r.service\";\n\nfunction CheckElectronicComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1);\n  }\n}\n\nexport class CheckElectronicComponent {\n  constructor(constant, config, modalService, signalRService, messageService, componentService) {\n    this.constant = constant;\n    this.config = config;\n    this.modalService = modalService;\n    this.signalRService = signalRService;\n    this.messageService = messageService;\n    this.componentService = componentService;\n    this.listDMVT = [];\n    this.onCheckElectronic = new BroadcastEventListener('checkElectronic');\n    this.modelCheck = {\n      ModuleId: '',\n      TypeFunctionDefinitionId: 3,\n      Path: '' // ModuleCode: '',\n      // ModuleGroupCode: '',\n      // ModuleGroupId: '',\n      // ListError: [],\n      // ListMaterialModel: [],\n      // ListRawMaterialsModel: [],\n      // ListManufacturerModel: [],\n      // ListFolderModel:[],\n      // ListFileModel: [],\n      // ListMaterialGroupModel: [],\n      // ListUnitModel:[],\n      // LstError:[],\n      // ListResult:[],\n      // ListCodeRule:[]\n\n    };\n  }\n\n  ngOnInit() {// this.signalRService.listen(this.onUploadFolder);\n    // this.uploadSub = this.onUploadFolder.subscribe((data: any) => {\n    //   this.blockUI.stop();\n    //   if (data.LstError.length > 0) {\n    //     var errorMessage = data.LstError.join(\".\")\n    //     this.messageService.showMessage(errorMessage);\n    //   }\n    //   // else{\n    //   //   this.insertDatabase(data);\n    //   // }  \n    // });\n    // this.signalRService.listen(this.onCheckElectronic, false);\n    // this.notiSub = this.onCheckElectronic.subscribe((data: any) => {\n    //   this.blockUI.stop();\n    //   if (data) {\n    //     this.listError = data.LstError;\n    //     this.listDMVT = data.resultCheckDMVTModel.ListResult;\n    //   }\n    // });\n  }\n\n  ngOnDestroy() {// this.notiSub.unsubscribe();\n    // this.signalRService.stopListening(this.onCheckElectronic);\n  }\n\n}\n\nCheckElectronicComponent.ɵfac = function CheckElectronicComponent_Factory(t) {\n  return new (t || CheckElectronicComponent)(i0.ɵɵdirectiveInject(i1.Constants), i0.ɵɵdirectiveInject(i1.Configuration), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.SignalRService), i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i1.ComponentService));\n};\n\nCheckElectronicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckElectronicComponent,\n  selectors: [[\"app-check-electronic\"]],\n  inputs: {\n    pathDMVT: \"pathDMVT\",\n    moduleCode: \"moduleCode\",\n    txtPathSC: \"txtPathSC\",\n    selectedPath: \"selectedPath\",\n    listError: \"listError\"\n  },\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-md-12\", \"col-sm-12\", \"col-lg-12\", \"col-lg-12\", \"col-xl-12\"], [1, \"form-label\"], [2, \"height\", \"auto\", \"width\", \"100%\", 3, \"config\"], [1, \"table\", \"table-bordered\", 2, \"min-width\", \"600px\"], [\"width\", \"100px\", 1, \"text-center\"], [\"min-width\", \"500px\", 1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-center\"]],\n  template: function CheckElectronicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Danh s\\u00E1ch l\\u1ED7i c\\u1EA5u tr\\u00FAc thi\\u1EBFt k\\u1EBF \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerStart(4);\n      i0.ɵɵelementStart(5, \"perfect-scrollbar\", 3)(6, \"table\", 4)(7, \"thead\")(8, \"tr\")(9, \"th\", 5);\n      i0.ɵɵtext(10, \"STT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 6);\n      i0.ɵɵtext(12, \"T\\u00EAn l\\u1ED7i\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, CheckElectronicComponent_tr_14_Template, 5, 2, \"tr\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"config\", ctx.constant.ScrollXConfig);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listError);\n    }\n  },\n  styles: [\".warning_material{background-color:#ff0}\\n\"],\n  encapsulation: 2\n});\n\n__decorate([BlockUI()], CheckElectronicComponent.prototype, \"blockUI\", void 0);","map":null,"metadata":{},"sourceType":"module"}