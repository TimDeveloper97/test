{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ExpertService = /*#__PURE__*/(() => {\n  class ExpertService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchExpert(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/SearchExpert', model, httpOptions);\n      return tr;\n    }\n\n    searchWorkPlace(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/SearchWorkPlace', model, httpOptions);\n      return tr;\n    }\n\n    searchSpecialize(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/SearchSpecialize', model, httpOptions);\n      return tr;\n    }\n\n    createExpert(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/AddExpert', model, httpOptions);\n      return tr;\n    }\n\n    deleteExpert(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/DeleteExpert', model, httpOptions);\n      return tr;\n    }\n\n    updateExpert(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/UpdateExpert', model, httpOptions);\n      return tr;\n    }\n\n    getExpert(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/GetExpert', model, httpOptions);\n      return tr;\n    }\n\n    ExportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'Expert/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    checkDeleteBank(expertId) {\n      var tr = this.http.delete(this.config.ServerWithApiUrl + 'Expert/Checkdelete/' + expertId);\n      return tr;\n    }\n\n  }\n\n  ExpertService.ɵfac = function ExpertService_Factory(t) {\n    return new (t || ExpertService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ExpertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExpertService,\n    factory: ExpertService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExpertService;\n})();","map":null,"metadata":{},"sourceType":"module"}