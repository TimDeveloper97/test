{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../navigation/navigation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../item/item.component\";\n\nfunction NavCollapsableComponent_li_1_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.item.icon);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"mdi mdi-\" + ctx_r2.item.icon);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.item.title);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.item.title);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_ng_container_9_nav_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nav-item\", 13);\n  }\n\n  if (rf & 2) {\n    const child_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", child_r6);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_ng_container_9_nav_collapsable_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nav-collapsable\", 13);\n  }\n\n  if (rf & 2) {\n    const child_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", child_r6);\n  }\n}\n\nfunction NavCollapsableComponent_li_1_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NavCollapsableComponent_li_1_ng_container_9_nav_item_1_Template, 1, 1, \"nav-item\", 12);\n    i0.ɵɵtemplate(2, NavCollapsableComponent_li_1_ng_container_9_nav_collapsable_2_Template, 1, 1, \"nav-collapsable\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const child_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r6.type == \"item\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r6.type == \"collapsable\");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nfunction NavCollapsableComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 1)(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NavCollapsableComponent_li_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.toggleOpen($event));\n    });\n    i0.ɵɵtemplate(2, NavCollapsableComponent_li_1_i_2_Template, 2, 1, \"i\", 3);\n    i0.ɵɵtemplate(3, NavCollapsableComponent_li_1_i_3_Template, 1, 3, \"i\", 4);\n    i0.ɵɵtemplate(4, NavCollapsableComponent_li_1_span_4_Template, 2, 1, \"span\", 5);\n    i0.ɵɵtemplate(5, NavCollapsableComponent_li_1_span_5_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"keyboard_arrow_right\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ul\", 8);\n    i0.ɵɵtemplate(9, NavCollapsableComponent_li_1_ng_container_9_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r0.isOpen));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.item.ismdi && ctx_r0.item.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.ismdi && ctx_r0.item.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.item.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.item.icon);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.item.children);\n  }\n}\n\nexport let NavCollapsableComponent = /*#__PURE__*/(() => {\n  class NavCollapsableComponent {\n    constructor(_ntsNavigationService, _router) {\n      this._ntsNavigationService = _ntsNavigationService;\n      this._router = _router;\n      this.isOpen = false; // Set the private defaults\n\n      this._unsubscribeAll = new Subject();\n    }\n\n    ngOnInit() {\n      // Listen for router events\n      this._router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(e => {\n        if (e instanceof NavigationEnd) {\n          // Check if the url can be found in\n          // one of the children of this item\n          if (this.isUrlInChildren(this.item, e.urlAfterRedirects)) {\n            this.expand();\n          } else {\n            this.collapse();\n          }\n        }\n      }); // Listen for collapsing of any navigation item\n\n\n      this._ntsNavigationService.onItemCollapsed.pipe(takeUntil(this._unsubscribeAll)).subscribe(clickedItem => {\n        if (clickedItem && clickedItem.children) {\n          // Check if the clicked item is one\n          // of the children of this item\n          if (this.isChildrenOf(this.item, clickedItem)) {\n            return;\n          } // Check if the url can be found in\n          // one of the children of this item\n\n\n          if (this.isUrlInChildren(this.item, this._router.url)) {\n            return;\n          } // If the clicked item is not this item, collapse...\n\n\n          if (this.item !== clickedItem) {\n            this.collapse();\n          }\n        }\n      }); // Check if the url can be found in\n      // one of the children of this item\n\n\n      if (this.isUrlInChildren(this.item, this._router.url)) {\n        this.expand();\n      } else {\n        this.collapse();\n      }\n    }\n    /**\r\n     * On destroy\r\n     */\n\n\n    ngOnDestroy() {\n      // Unsubscribe from all subscriptions\n      this._unsubscribeAll.next();\n\n      this._unsubscribeAll.complete();\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\r\n     * Toggle collapse\r\n     *\r\n     * @param ev\r\n     */\n\n\n    toggleOpen(ev) {\n      ev.preventDefault();\n      this.isOpen = !this.isOpen; // Navigation collapse toggled...\n\n      this._ntsNavigationService.onItemCollapsed.next(this.item);\n\n      this._ntsNavigationService.onItemCollapseToggled.next();\n    }\n    /**\r\n     * Expand the collapsable navigation\r\n     */\n\n\n    expand() {\n      if (this.isOpen) {\n        return;\n      }\n\n      this.isOpen = true;\n\n      this._ntsNavigationService.onItemCollapseToggled.next();\n    }\n    /**\r\n     * Collapse the collapsable navigation\r\n     */\n\n\n    collapse() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.isOpen = false;\n\n      this._ntsNavigationService.onItemCollapseToggled.next();\n    }\n    /**\r\n     * Check if the given parent has the\r\n     * given item in one of its children\r\n     *\r\n     * @param parent\r\n     * @param item\r\n     * @returns {boolean}\r\n     */\n\n\n    isChildrenOf(parent, item) {\n      if (!parent.children) {\n        return false;\n      }\n\n      if (parent.children.indexOf(item) !== -1) {\n        return true;\n      }\n\n      for (const children of parent.children) {\n        if (children.children) {\n          return this.isChildrenOf(children, item);\n        }\n      }\n    }\n    /**\r\n     * Check if the given url can be found\r\n     * in one of the given parent's children\r\n     *\r\n     * @param parent\r\n     * @param url\r\n     * @returns {boolean}\r\n     */\n\n\n    isUrlInChildren(parent, url) {\n      if (!parent.children) {\n        return false;\n      }\n\n      for (let i = 0; i < parent.children.length; i++) {\n        if (parent.children[i].children) {\n          if (this.isUrlInChildren(parent.children[i], url)) {\n            return true;\n          }\n        }\n\n        if (parent.children[i].url === url || url.includes(parent.children[i].url)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  }\n\n  NavCollapsableComponent.ɵfac = function NavCollapsableComponent_Factory(t) {\n    return new (t || NavCollapsableComponent)(i0.ɵɵdirectiveInject(i1.NtsNavigationService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  NavCollapsableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavCollapsableComponent,\n    selectors: [[\"nav-collapsable\"]],\n    inputs: {\n      item: \"item\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"ngClass\", 4, \"appUipermission\"], [3, \"ngClass\"], [\"href\", \"javascript:;\", 3, \"click\"], [\"class\", \"material-icons notranslate\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"title\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"arrow\", \"material-icons\", \"notranslate\"], [1, \"wraplist\", \"wraplist-sub\", \"wraplist\", \"wraplist-sub\", \"sub-menu\", \"dk\", \"dk\"], [4, \"ngFor\", \"ngForOf\"], [1, \"material-icons\", \"notranslate\"], [1, \"title\"], [3, \"item\", 4, \"ngIf\"], [3, \"item\"]],\n    template: function NavCollapsableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0);\n        i0.ɵɵtemplate(1, NavCollapsableComponent_li_1_Template, 10, 8, \"li\", 0);\n        i0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appUipermission\", ctx.item.permission);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, NavCollapsableComponent, i4.NavItemComponent]\n  });\n  return NavCollapsableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}