{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\nimport { createComponentVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { SelectBox } from \"../../editors/drop_down_editors/select_box\";\nimport { calculateValuesFittedWidth } from \"../utils/calculate_values_fitted_width\";\nimport { getElementMinWidth } from \"../utils/get_element_width\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      pageSize: pageSize,\n      pageSizeChange: pageSizeChange,\n      pageSizes: pageSizes\n    },\n    width: width\n  } = _ref;\n  return createComponentVNode(2, SelectBox, {\n    displayExpr: \"text\",\n    valueExpr: \"value\",\n    dataSource: pageSizes,\n    value: pageSize,\n    valueChange: pageSizeChange,\n    width: width\n  });\n};\nexport var PageSizeSmallProps = {};\nvar PageSizeSmallPropsType = {\n  get pageSize() {\n    return InternalPagerProps.pageSize;\n  }\n\n};\nexport let PageSizeSmall = /*#__PURE__*/(() => {\n  class PageSizeSmall extends InfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        minWidth: 10\n      };\n      this.updateWidth = this.updateWidth.bind(this);\n    }\n\n    createEffects() {\n      return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])];\n    }\n\n    updateEffects() {\n      var _this$_effects$;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes]);\n    }\n\n    updateWidth() {\n      this.setState(__state_argument => ({\n        minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\n      }));\n    }\n\n    get width() {\n      return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value));\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        width: this.width,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  PageSizeSmall.defaultProps = PageSizeSmallPropsType;\n  return PageSizeSmall;\n})();","map":null,"metadata":{},"sourceType":"module"}