{"ast":null,"code":"import { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { navigation } from '../navigation/navigation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../navigation/navigation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../collapsable/collapsable.component\";\nimport * as i5 from \"../item/item.component\";\n\nfunction NavbarComponent_ng_container_1_nav_collapsable_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nav-collapsable\", 3);\n  }\n\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", item_r1);\n  }\n}\n\nfunction NavbarComponent_ng_container_1_nav_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nav-item\", 3);\n  }\n\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", item_r1);\n  }\n}\n\nfunction NavbarComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NavbarComponent_ng_container_1_nav_collapsable_1_Template, 1, 1, \"nav-collapsable\", 2);\n    i0.ɵɵtemplate(2, NavbarComponent_ng_container_1_nav_item_2_Template, 1, 1, \"nav-item\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1.type == \"collapsable\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1.type == \"item\");\n  }\n}\n\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(_ntsNavigationService, router) {\n      this._ntsNavigationService = _ntsNavigationService;\n      this.router = router; // Set the private defaults\n\n      this._unsubscribeAll = new Subject();\n    }\n\n    ngOnInit() {\n      this._ntsNavigationService.register('menu', navigation);\n\n      this._ntsNavigationService.setCurrentNavigation('menu');\n\n      if (this._ntsNavigationService.isCurrentNavigation()) {\n        this.navigation = this._ntsNavigationService.getCurrentNavigation();\n      }\n\n      this._ntsNavigationService.onNavigationChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {\n        this.navigation = this._ntsNavigationService.getCurrentNavigation();\n      });\n    }\n    /**\r\n      * On destroy\r\n      */\n\n\n    ngOnDestroy() {\n      // Unsubscribe from all subscriptions\n      this._unsubscribeAll.next();\n\n      this._unsubscribeAll.complete();\n    }\n\n  }\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.NtsNavigationService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"wraplist\", \"wrapper-menu\"], [4, \"ngFor\", \"ngForOf\"], [3, \"item\", 4, \"ngIf\"], [3, \"item\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, NavbarComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.navigation);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.NavCollapsableComponent, i5.NavItemComponent]\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}