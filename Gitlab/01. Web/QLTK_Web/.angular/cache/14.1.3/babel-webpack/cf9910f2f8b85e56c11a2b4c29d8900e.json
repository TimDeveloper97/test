{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/window.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport domAdapter from \"../dom_adapter\";\nvar hasWindowValue = \"undefined\" !== typeof window;\n\nvar hasWindow = () => hasWindowValue;\n\nvar windowObject = hasWindow() ? window : void 0;\n\nif (!windowObject) {\n  windowObject = {};\n  windowObject.window = windowObject;\n}\n\nvar getWindow = () => windowObject;\n\nvar setWindow = (newWindowObject, hasWindow) => {\n  if (void 0 === hasWindow) {\n    hasWindowValue = \"undefined\" !== typeof window && window === newWindowObject;\n  } else {\n    hasWindowValue = hasWindow;\n  }\n\n  windowObject = newWindowObject;\n};\n\nvar hasProperty = prop => hasWindow() && prop in windowObject;\n\nvar defaultScreenFactorFunc = width => {\n  if (width < 768) {\n    return \"xs\";\n  } else if (width < 992) {\n    return \"sm\";\n  } else if (width < 1200) {\n    return \"md\";\n  } else {\n    return \"lg\";\n  }\n};\n\nvar getCurrentScreenFactor = screenFactorCallback => {\n  var screenFactorFunc = screenFactorCallback || defaultScreenFactorFunc;\n  var windowWidth = domAdapter.getDocumentElement().clientWidth;\n  return screenFactorFunc(windowWidth);\n};\n\nvar getNavigator = () => hasWindow() ? windowObject.navigator : {\n  userAgent: \"\"\n};\n\nexport { hasWindow, getWindow, setWindow, hasProperty, defaultScreenFactorFunc, getCurrentScreenFactor, getNavigator };","map":null,"metadata":{},"sourceType":"module"}