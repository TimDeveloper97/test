{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ModuleGroupService = /*#__PURE__*/(() => {\n  class ModuleGroupService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchModuleGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchGroupModules', model, httpOptions);\n      return tr;\n    }\n\n    searchModuleGroupById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchGroupModulesById', model, httpOptions);\n      return tr;\n    }\n\n    deleteModuleGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/DeleteGroupModule', model, httpOptions);\n      return tr;\n    }\n\n    getCbbModuleGroup() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ComboboxCommon/GetGroupModuleParentChild', httpOptions);\n      return tr;\n    }\n\n    getCbbModuleGroupForUpdate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchGroupModulesExpect', model, httpOptions);\n      return tr;\n    }\n\n    createModuleGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/AddGroupModule', model, httpOptions);\n      return tr;\n    }\n\n    searchProductStandard(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchProductStandard', model, httpOptions);\n      return tr;\n    }\n\n    SearchStage(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchStage', model, httpOptions);\n      return tr;\n    }\n\n    getModuleGroupInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/GetGroupModuleInfo', model, httpOptions);\n      return tr;\n    }\n\n    updateMmoduleGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/UpdateGroupModule', model, httpOptions);\n      return tr;\n    }\n\n    deleteProductStandard(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/DeleteProductStandard', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  ModuleGroupService.ɵfac = function ModuleGroupService_Factory(t) {\n    return new (t || ModuleGroupService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ModuleGroupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModuleGroupService,\n    factory: ModuleGroupService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModuleGroupService;\n})();","map":null,"metadata":{},"sourceType":"module"}