{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let CandidateService = /*#__PURE__*/(() => {\n  class CandidateService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchCandidate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/search', model, httpOptions);\n      return tr;\n    }\n\n    searchCandidatesByRecruitmentRequestId(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'candidate/search-by-recruitment-request-id/' + id, httpOptions);\n      return tr;\n    }\n\n    deleteCandidate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/delete-candidate', model, httpOptions);\n      return tr;\n    }\n\n    getById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'candidate/get-candidate-by-id/' + id, httpOptions);\n      return tr;\n    }\n\n    create(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/create-candidate', model, httpOptions);\n      return tr;\n    }\n\n    update(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/update-candidate/' + id, model, httpOptions);\n      return tr;\n    }\n\n    updateFollow(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/update-follow/' + id, model, httpOptions);\n      return tr;\n    }\n\n    getFollow(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'candidate/get-follow/' + id, httpOptions);\n      return tr;\n    }\n\n    getApplys(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'candidate/get-applys/' + id, httpOptions);\n      return tr;\n    }\n\n    generateCode() {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'candidate/GenerateCode', httpOptions);\n      return tr;\n    }\n\n    cancel(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'candidate/cancel-candidate/' + id, httpOptions);\n      return tr;\n    }\n\n  }\n\n  CandidateService.ɵfac = function CandidateService_Factory(t) {\n    return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  CandidateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CandidateService,\n    factory: CandidateService.ɵfac,\n    providedIn: 'root'\n  });\n  return CandidateService;\n})();","map":null,"metadata":{},"sourceType":"module"}