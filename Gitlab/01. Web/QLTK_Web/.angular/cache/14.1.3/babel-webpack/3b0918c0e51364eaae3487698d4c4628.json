{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/utils.caret.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { isDefined } from \"../../core/utils/type\";\nimport devices from \"../../core/devices\";\nimport domAdapter from \"../../core/dom_adapter\";\nvar {\n  ios: ios,\n  mac: mac\n} = devices.real();\nvar isFocusingOnCaretChange = ios || mac;\n\nvar getCaret = function (input) {\n  var range;\n\n  try {\n    range = {\n      start: input.selectionStart,\n      end: input.selectionEnd\n    };\n  } catch (e) {\n    range = {\n      start: 0,\n      end: 0\n    };\n  }\n\n  return range;\n};\n\nvar setCaret = function (input, position) {\n  var body = domAdapter.getBody();\n\n  if (!body.contains(input) && !body.contains(input.getRootNode().host)) {\n    return;\n  }\n\n  try {\n    input.selectionStart = position.start;\n    input.selectionEnd = position.end;\n  } catch (e) {}\n};\n\nvar caret = function (input, position) {\n  var force = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n  input = $(input).get(0);\n\n  if (!isDefined(position)) {\n    return getCaret(input);\n  }\n\n  if (!force && isFocusingOnCaretChange && domAdapter.getActiveElement(input) !== input) {\n    return;\n  }\n\n  setCaret(input, position);\n};\n\nexport default caret;","map":null,"metadata":{},"sourceType":"module"}