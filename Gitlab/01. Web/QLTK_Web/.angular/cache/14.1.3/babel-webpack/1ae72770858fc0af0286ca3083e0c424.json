{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/modules/popup.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight } from \"../../../core/utils/size\";\nimport Quill from \"devextreme-quill\";\nimport $ from \"../../../core/renderer\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { getWindow } from \"../../../core/utils/window\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { addNamespace } from \"../../../events/utils/index\";\nimport BaseModule from \"./base\";\nimport Popup from \"../../popup\";\nimport List from \"../../list_light\";\nvar MODULE_NAMESPACE = \"dxHtmlEditorPopupModule\";\nvar ListPopupModule = BaseModule;\n\nif (Quill) {\n  var SUGGESTION_LIST_CLASS = \"dx-suggestion-list\";\n  var SUGGESTION_LIST_WRAPPER_CLASS = \"dx-suggestion-list-wrapper\";\n  var MIN_HEIGHT = 100;\n  ListPopupModule = class extends BaseModule {\n    _getDefaultOptions() {\n      return {\n        dataSource: null\n      };\n    }\n\n    constructor(quill, options) {\n      super(quill, options);\n      this.options = extend({}, this._getDefaultOptions(), options);\n      this._popup = this.renderPopup();\n\n      this._popup.$wrapper().addClass(SUGGESTION_LIST_WRAPPER_CLASS);\n\n      this._renderPreventFocusOut();\n    }\n\n    renderList($container, options) {\n      var $list = $(\"<div>\").addClass(SUGGESTION_LIST_CLASS).appendTo($container);\n      this._list = this.options.editorInstance._createComponent($list, List, options);\n    }\n\n    renderPopup() {\n      var editorInstance = this.options.editorInstance;\n      var $container = $(\"<div>\").appendTo(editorInstance.$element());\n\n      var popupConfig = this._getPopupConfig();\n\n      return editorInstance._createComponent($container, Popup, popupConfig);\n    }\n\n    _getPopupConfig() {\n      return {\n        contentTemplate: contentElem => {\n          var listConfig = this._getListConfig(this.options);\n\n          this.renderList($(contentElem), listConfig);\n        },\n        deferRendering: false,\n        onShown: () => {\n          this._list.focus();\n        },\n        onHidden: () => {\n          this._list.unselectAll();\n\n          this._list.option(\"focusedElement\", null);\n        },\n        showTitle: false,\n        width: \"auto\",\n        height: \"auto\",\n        shading: false,\n        hideOnParentScroll: true,\n        hideOnOutsideClick: true,\n        animation: {\n          show: {\n            type: \"fade\",\n            duration: 0,\n            from: 0,\n            to: 1\n          },\n          hide: {\n            type: \"fade\",\n            duration: 400,\n            from: 1,\n            to: 0\n          }\n        },\n        fullScreen: false,\n        maxHeight: this.maxHeight\n      };\n    }\n\n    _getListConfig(options) {\n      return {\n        dataSource: options.dataSource,\n        onSelectionChanged: this.selectionChangedHandler.bind(this),\n        selectionMode: \"single\",\n        pageLoadMode: \"scrollBottom\"\n      };\n    }\n\n    get maxHeight() {\n      var window = getWindow();\n      var windowHeight = window && getHeight(window) || 0;\n      return Math.max(MIN_HEIGHT, .5 * windowHeight);\n    }\n\n    selectionChangedHandler(e) {\n      if (this._popup.option(\"visible\")) {\n        this._popup.hide();\n\n        this.insertEmbedContent(e);\n      }\n    }\n\n    _renderPreventFocusOut() {\n      var eventName = addNamespace(\"mousedown\", MODULE_NAMESPACE);\n      eventsEngine.on(this._popup.$wrapper(), eventName, e => {\n        e.preventDefault();\n      });\n    }\n\n    insertEmbedContent(selectionChangedEvent) {}\n\n    showPopup() {\n      this._popup && this._popup.show();\n    }\n\n    savePosition(position) {\n      this.caretPosition = position;\n    }\n\n    getPosition() {\n      return this.caretPosition;\n    }\n\n  };\n}\n\nexport default ListPopupModule;","map":null,"metadata":{},"sourceType":"module"}