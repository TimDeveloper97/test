{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/components/parse_utils.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { isDefined } from \"../../core/utils/type\";\nvar parsers = {\n  string: function (val) {\n    return isDefined(val) ? \"\" + val : val;\n  },\n  numeric: function (val) {\n    if (!isDefined(val)) {\n      return val;\n    }\n\n    var parsedVal = Number(val);\n\n    if (isNaN(parsedVal)) {\n      parsedVal = void 0;\n    }\n\n    return parsedVal;\n  },\n  datetime: function (val) {\n    if (!isDefined(val)) {\n      return val;\n    }\n\n    var parsedVal;\n    var numVal = Number(val);\n\n    if (!isNaN(numVal)) {\n      parsedVal = new Date(numVal);\n    } else {\n      parsedVal = dateSerialization.deserializeDate(val);\n    }\n\n    if (isNaN(Number(parsedVal))) {\n      parsedVal = void 0;\n    }\n\n    return parsedVal;\n  }\n};\nexport function correctValueType(type) {\n  return \"numeric\" === type || \"datetime\" === type || \"string\" === type ? type : \"\";\n}\nexport var getParser = function (valueType) {\n  return parsers[correctValueType(valueType)] || noop;\n};","map":null,"metadata":{},"sourceType":"module"}