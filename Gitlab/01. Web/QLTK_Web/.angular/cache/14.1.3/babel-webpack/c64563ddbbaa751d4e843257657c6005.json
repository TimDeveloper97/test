{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let RecruitmentRequestService = /*#__PURE__*/(() => {\n  class RecruitmentRequestService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    search(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/search', model, httpOptions);\n      return tr;\n    }\n\n    generateCode() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/GenerateCode', httpOptions);\n      return tr;\n    }\n\n    create(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/create', model, httpOptions);\n      return tr;\n    }\n\n    getById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'recruitment-request/get-by-id/' + id, httpOptions);\n      return tr;\n    }\n\n    getWorkTypeSalaryById(id) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'recruitment-request/get-worktype-salary-by-id/' + id, httpOptions);\n      return tr;\n    }\n\n    update(id, model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/update/' + id, model, httpOptions);\n      return tr;\n    }\n\n    delete(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/delete/' + id, httpOptions);\n      return tr;\n    }\n\n    cancelStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/cancel-status/' + id, httpOptions);\n      return tr;\n    }\n\n    nextStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/next-status/' + id, httpOptions);\n      return tr;\n    }\n\n    backStatus(id) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'recruitment-request/back-status/' + id, httpOptions);\n      return tr;\n    }\n\n  }\n\n  RecruitmentRequestService.ɵfac = function RecruitmentRequestService_Factory(t) {\n    return new (t || RecruitmentRequestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  RecruitmentRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecruitmentRequestService,\n    factory: RecruitmentRequestService.ɵfac,\n    providedIn: 'root'\n  });\n  return RecruitmentRequestService;\n})();","map":null,"metadata":{},"sourceType":"module"}