{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/radio_group/radio_group.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nimport { deferRender } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport registerComponent from \"../../core/component_registrator\";\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\nimport DataExpressionMixin from \"../editor/ui.data_expression\";\nimport Editor from \"../editor/editor\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar RADIO_BUTTON_CHECKED_CLASS = \"dx-radiobutton-checked\";\nvar RADIO_BUTTON_CLASS = \"dx-radiobutton\";\nvar RADIO_BUTTON_ICON_CHECKED_CLASS = \"dx-radiobutton-icon-checked\";\nvar RADIO_BUTTON_ICON_CLASS = \"dx-radiobutton-icon\";\nvar RADIO_BUTTON_ICON_DOT_CLASS = \"dx-radiobutton-icon-dot\";\nvar RADIO_GROUP_HORIZONTAL_CLASS = \"dx-radiogroup-horizontal\";\nvar RADIO_GROUP_VERTICAL_CLASS = \"dx-radiogroup-vertical\";\nvar RADIO_VALUE_CONTAINER_CLASS = \"dx-radio-value-container\";\nvar RADIO_GROUP_CLASS = \"dx-radiogroup\";\nvar RADIO_FEEDBACK_HIDE_TIMEOUT = 100;\n\nclass RadioCollection extends CollectionWidget {\n  _focusTarget() {\n    return this.$element().parent();\n  }\n\n  _nullValueSelectionSupported() {\n    return true;\n  }\n\n  _getDefaultOptions() {\n    var defaultOptions = super._getDefaultOptions();\n\n    return extend(defaultOptions, DataExpressionMixin._dataExpressionDefaultOptions(), {\n      _itemAttributes: {\n        role: \"radio\"\n      }\n    });\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    deferRender(() => {\n      this.itemElements().addClass(RADIO_BUTTON_CLASS);\n    });\n  }\n\n  _keyboardEventBindingTarget() {\n    return this._focusTarget();\n  }\n\n  _postprocessRenderItem(args) {\n    var {\n      itemData: {\n        html: html\n      },\n      itemElement: itemElement\n    } = args;\n\n    if (!html) {\n      var $radio = $(\"<div>\").addClass(RADIO_BUTTON_ICON_CLASS);\n      $(\"<div>\").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo($radio);\n      var $radioContainer = $(\"<div>\").append($radio).addClass(RADIO_VALUE_CONTAINER_CLASS);\n      $(itemElement).prepend($radioContainer);\n    }\n\n    super._postprocessRenderItem(args);\n  }\n\n  _processSelectableItem($itemElement, isSelected) {\n    super._processSelectableItem($itemElement, isSelected);\n\n    $itemElement.toggleClass(RADIO_BUTTON_CHECKED_CLASS, isSelected).find(\".\".concat(RADIO_BUTTON_ICON_CLASS)).first().toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, isSelected);\n    this.setAria(\"checked\", isSelected, $itemElement);\n  }\n\n  _refreshContent() {\n    this._prepareContent();\n\n    this._renderContent();\n  }\n\n  _supportedKeys() {\n    var parent = super._supportedKeys();\n\n    return extend({}, parent, {\n      enter: function (e) {\n        e.preventDefault();\n        return parent.enter.apply(this, arguments);\n      },\n      space: function (e) {\n        e.preventDefault();\n        return parent.space.apply(this, arguments);\n      }\n    });\n  }\n\n  _itemElements() {\n    return this._itemContainer().children(this._itemSelector());\n  }\n\n}\n\nclass RadioGroup extends Editor {\n  _dataSourceOptions() {\n    return {\n      paginate: false\n    };\n  }\n\n  _defaultOptionsRules() {\n    var defaultOptionsRules = super._defaultOptionsRules();\n\n    return defaultOptionsRules.concat([{\n      device: {\n        tablet: true\n      },\n      options: {\n        layout: \"horizontal\"\n      }\n    }, {\n      device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  }\n\n  _fireContentReadyAction(force) {\n    force && super._fireContentReadyAction();\n  }\n\n  _focusTarget() {\n    return this.$element();\n  }\n\n  _getAriaTarget() {\n    return this.$element();\n  }\n\n  _getDefaultOptions() {\n    var defaultOptions = super._getDefaultOptions();\n\n    return extend(defaultOptions, extend(DataExpressionMixin._dataExpressionDefaultOptions(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      layout: \"vertical\"\n    }));\n  }\n\n  _getItemValue(item) {\n    return this._valueGetter ? this._valueGetter(item) : item.text;\n  }\n\n  _getSubmitElement() {\n    return this._$submitElement;\n  }\n\n  _init() {\n    super._init();\n\n    this._activeStateUnit = \".\".concat(RADIO_BUTTON_CLASS);\n    this._feedbackHideTimeout = RADIO_FEEDBACK_HIDE_TIMEOUT;\n\n    this._initDataExpressions();\n  }\n\n  _initMarkup() {\n    this.$element().addClass(RADIO_GROUP_CLASS);\n\n    this._renderSubmitElement();\n\n    this.setAria(\"role\", \"radiogroup\");\n\n    this._renderRadios();\n\n    this._renderLayout();\n\n    super._initMarkup();\n  }\n\n  _itemClickHandler(_ref) {\n    var {\n      itemElement: itemElement,\n      event: event,\n      itemData: itemData\n    } = _ref;\n\n    if (this.itemElements().is(itemElement)) {\n      var newValue = this._getItemValue(itemData);\n\n      if (newValue !== this.option(\"value\")) {\n        this._saveValueChangeEvent(event);\n\n        this.option(\"value\", newValue);\n      }\n    }\n  }\n\n  _getSelectedItemKeys() {\n    var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option(\"value\");\n    var isNullSelectable = \"this\" !== this.option(\"valueExpr\");\n    var shouldSelectValue = isNullSelectable && null === value || isDefined(value);\n    return shouldSelectValue ? [value] : [];\n  }\n\n  _setSelection(currentValue) {\n    var value = this._unwrappedValue(currentValue);\n\n    this._setCollectionWidgetOption(\"selectedItemKeys\", this._getSelectedItemKeys(value));\n  }\n\n  _optionChanged(args) {\n    var {\n      name: name,\n      value: value\n    } = args;\n\n    this._dataExpressionOptionChanged(args);\n\n    switch (name) {\n      case \"dataSource\":\n        this._invalidate();\n\n        break;\n\n      case \"focusStateEnabled\":\n      case \"accessKey\":\n      case \"tabIndex\":\n        this._setCollectionWidgetOption(name, value);\n\n        break;\n\n      case \"disabled\":\n        super._optionChanged(args);\n\n        this._setCollectionWidgetOption(name, value);\n\n        break;\n\n      case \"valueExpr\":\n        this._setCollectionWidgetOption(\"keyExpr\", this._getCollectionKeyExpr());\n\n        break;\n\n      case \"value\":\n        this._setSelection(value);\n\n        this._setSubmitValue(value);\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"items\":\n        this._setSelection(this.option(\"value\"));\n\n        break;\n\n      case \"itemTemplate\":\n      case \"displayExpr\":\n        break;\n\n      case \"layout\":\n        this._renderLayout();\n\n        this._updateItemsSize();\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _render() {\n    super._render();\n\n    this._updateItemsSize();\n  }\n\n  _renderLayout() {\n    var layout = this.option(\"layout\");\n    var $element = this.$element();\n    $element.toggleClass(RADIO_GROUP_VERTICAL_CLASS, \"vertical\" === layout);\n    $element.toggleClass(RADIO_GROUP_HORIZONTAL_CLASS, \"horizontal\" === layout);\n  }\n\n  _renderRadios() {\n    this._areRadiosCreated = new Deferred();\n    var $radios = $(\"<div>\").appendTo(this.$element());\n    var {\n      displayExpr: displayExpr,\n      accessKey: accessKey,\n      focusStateEnabled: focusStateEnabled,\n      itemTemplate: itemTemplate,\n      tabIndex: tabIndex\n    } = this.option();\n\n    this._createComponent($radios, RadioCollection, {\n      onInitialized: _ref2 => {\n        var {\n          component: component\n        } = _ref2;\n        this._radios = component;\n      },\n      onContentReady: e => {\n        this._fireContentReadyAction(true);\n      },\n      onItemClick: this._itemClickHandler.bind(this),\n      displayExpr: displayExpr,\n      accessKey: accessKey,\n      dataSource: this._dataSource,\n      focusStateEnabled: focusStateEnabled,\n      itemTemplate: itemTemplate,\n      keyExpr: this._getCollectionKeyExpr(),\n      noDataText: \"\",\n      scrollingEnabled: false,\n      selectionByClick: false,\n      selectionMode: \"single\",\n      selectedItemKeys: this._getSelectedItemKeys(),\n      tabIndex: tabIndex\n    });\n\n    this._areRadiosCreated.resolve();\n  }\n\n  _renderSubmitElement() {\n    this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n\n    this._setSubmitValue();\n  }\n\n  _setOptionsByReference() {\n    super._setOptionsByReference();\n\n    extend(this._optionsByReference, {\n      value: true\n    });\n  }\n\n  _setSubmitValue(value) {\n    var _value;\n\n    value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\n    var submitValue = \"this\" === this.option(\"valueExpr\") ? this._displayGetter(value) : value;\n\n    this._$submitElement.val(submitValue);\n  }\n\n  _setCollectionWidgetOption() {\n    this._areRadiosCreated.done(this._setWidgetOption.bind(this, \"_radios\", arguments));\n  }\n\n  _updateItemsSize() {\n    if (\"horizontal\" === this.option(\"layout\")) {\n      this.itemElements().css(\"height\", \"auto\");\n    } else {\n      var itemsCount = this.option(\"items\").length;\n      this.itemElements().css(\"height\", 100 / itemsCount + \"%\");\n    }\n  }\n\n  focus() {\n    var _this$_radios;\n\n    null === (_this$_radios = this._radios) || void 0 === _this$_radios ? void 0 : _this$_radios.focus();\n  }\n\n  itemElements() {\n    var _this$_radios2;\n\n    return null === (_this$_radios2 = this._radios) || void 0 === _this$_radios2 ? void 0 : _this$_radios2.itemElements();\n  }\n\n}\n\nRadioGroup.include(DataExpressionMixin);\nregisterComponent(\"dxRadioGroup\", RadioGroup);\nexport default RadioGroup;","map":null,"metadata":{},"sourceType":"module"}