{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.folder_chooser.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport messageLocalization from \"../../localization/message\";\nimport { getMapFromObject } from \"./ui.file_manager.common\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\nimport FileManagerFilesTreeView from \"./ui.file_manager.files_tree_view\";\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER = \"dx-filemanager-dialog-folder-chooser\";\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP = \"dx-filemanager-dialog-folder-chooser-popup\";\n\nclass FileManagerFolderChooserDialog extends FileManagerDialogBase {\n  show() {\n    var _this$_filesTreeView;\n\n    this._setSelectedDirInfo(null);\n\n    null === (_this$_filesTreeView = this._filesTreeView) || void 0 === _this$_filesTreeView ? void 0 : _this$_filesTreeView.refresh();\n    super.show();\n  }\n\n  switchToCopyDialog(targetItemInfos) {\n    this._targetItemInfos = targetItemInfos;\n\n    this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyTitle\"));\n\n    this._setApplyButtonOptions({\n      text: messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyButtonText\"),\n      disabled: true\n    });\n  }\n\n  switchToMoveDialog(targetItemInfos) {\n    this._targetItemInfos = targetItemInfos;\n\n    this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveTitle\"));\n\n    this._setApplyButtonOptions({\n      text: messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveButtonText\"),\n      disabled: true\n    });\n  }\n\n  _getDialogOptions() {\n    return extend(super._getDialogOptions(), {\n      contentCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER,\n      popupCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP\n    });\n  }\n\n  _createContentTemplate(element) {\n    super._createContentTemplate(element);\n\n    this._filesTreeView = this._createComponent($(\"<div>\"), FileManagerFilesTreeView, {\n      getDirectories: this.option(\"getDirectories\"),\n      getCurrentDirectory: () => this._getDialogSelectedDirectory(),\n      onDirectoryClick: e => this._onFilesTreeViewDirectoryClick(e),\n      onFilesTreeViewContentReady: () => this._toggleUnavailableLocationsDisabled(true)\n    });\n\n    this._$contentElement.append(this._filesTreeView.$element());\n  }\n\n  _getDialogResult() {\n    var result = this._getDialogSelectedDirectory();\n\n    return result ? {\n      folder: result\n    } : result;\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      getItems: null\n    });\n  }\n\n  _getDialogSelectedDirectory() {\n    return this._selectedDirectoryInfo;\n  }\n\n  _onFilesTreeViewDirectoryClick(_ref) {\n    var {\n      itemData: itemData\n    } = _ref;\n\n    this._setSelectedDirInfo(itemData);\n\n    this._filesTreeView.updateCurrentDirectory();\n  }\n\n  _setSelectedDirInfo(dirInfo) {\n    this._selectedDirectoryInfo = dirInfo;\n\n    this._setApplyButtonOptions({\n      disabled: !dirInfo\n    });\n  }\n\n  _onPopupShown() {\n    this._toggleUnavailableLocationsDisabled(true);\n\n    super._onPopupShown();\n  }\n\n  _onPopupHidden() {\n    this._toggleUnavailableLocationsDisabled(false);\n\n    super._onPopupHidden();\n  }\n\n  _toggleUnavailableLocationsDisabled(isDisabled) {\n    if (!this._filesTreeView) {\n      return;\n    }\n\n    var locations = this._getLocationsToProcess(isDisabled);\n\n    this._filesTreeView.toggleDirectoryExpandedStateRecursive(locations.locationsToExpand[0], isDisabled).then(() => this._filesTreeView.toggleDirectoryLineExpandedState(locations.locationsToCollapse, !isDisabled).then(() => locations.locationKeysToDisable.forEach(key => this._filesTreeView.toggleNodeDisabledState(key, isDisabled))));\n  }\n\n  _getLocationsToProcess(isDisabled) {\n    var expandLocations = {};\n    var collapseLocations = {};\n\n    this._targetItemInfos.forEach(itemInfo => {\n      if (itemInfo.parentDirectory) {\n        expandLocations[itemInfo.parentDirectory.getInternalKey()] = itemInfo.parentDirectory;\n      }\n\n      if (itemInfo.fileItem.isDirectory) {\n        collapseLocations[itemInfo.getInternalKey()] = itemInfo;\n      }\n    });\n\n    var expandMap = getMapFromObject(expandLocations);\n    var collapseMap = getMapFromObject(collapseLocations);\n    return {\n      locationsToExpand: isDisabled ? expandMap.values : [],\n      locationsToCollapse: isDisabled ? collapseMap.values : [],\n      locationKeysToDisable: expandMap.keys.concat(...collapseMap.keys)\n    };\n  }\n\n}\n\nexport default FileManagerFolderChooserDialog;","map":null,"metadata":{},"sourceType":"module"}