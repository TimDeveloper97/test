{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.clear.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport TextEditorButton from \"./texteditor_button_collection/button\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointer from \"../../events/pointer\";\nimport { name as click } from \"../../events/click\";\nvar pointerDown = pointer.down;\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar TEXTEDITOR_CLEAR_ICON_CLASS = \"dx-icon-clear\";\nvar TEXTEDITOR_ICON_CLASS = \"dx-icon\";\nvar TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS = \"dx-show-clear-button\";\nexport default class ClearButton extends TextEditorButton {\n  _create() {\n    var $element = $(\"<span>\").addClass(TEXTEDITOR_CLEAR_BUTTON_CLASS).append($(\"<span>\").addClass(TEXTEDITOR_ICON_CLASS).addClass(TEXTEDITOR_CLEAR_ICON_CLASS));\n\n    this._addToContainer($element);\n\n    this.update(true);\n    return {\n      instance: $element,\n      $element: $element\n    };\n  }\n\n  _isVisible() {\n    var {\n      editor: editor\n    } = this;\n    return editor._isClearButtonVisible();\n  }\n\n  _attachEvents(instance, $button) {\n    var {\n      editor: editor\n    } = this;\n    var editorName = editor.NAME;\n    eventsEngine.on($button, addNamespace(pointerDown, editorName), e => {\n      e.preventDefault();\n\n      if (\"mouse\" !== e.pointerType) {\n        editor._clearValueHandler(e);\n      }\n    });\n    eventsEngine.on($button, addNamespace(click, editorName), e => editor._clearValueHandler(e));\n  }\n\n  _legacyRender($editor, isVisible) {\n    $editor.toggleClass(TEXTEDITOR_SHOW_CLEAR_BUTTON_CLASS, isVisible);\n  }\n\n  update() {\n    var rendered = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    !rendered && super.update();\n    var {\n      editor: editor,\n      instance: instance\n    } = this;\n    var $editor = editor.$element();\n\n    var isVisible = this._isVisible();\n\n    instance && instance.toggleClass(STATE_INVISIBLE_CLASS, !isVisible);\n\n    this._legacyRender($editor, isVisible);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}