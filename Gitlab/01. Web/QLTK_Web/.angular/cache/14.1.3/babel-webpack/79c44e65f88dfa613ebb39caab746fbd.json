{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/cell.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"cellTemplate\", \"className\", \"colSpan\", \"color\", \"data\", \"id\", \"index\", \"isFirstGroupCell\", \"isLastGroupCell\", \"text\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { combineClasses } from \"../../../../../../utils/combine_classes\";\nimport { GroupPanelCellProps } from \"../cell_props\";\nexport var viewFunction = _ref => {\n  var {\n    classes: classes,\n    props: {\n      cellTemplate: CellTemplate,\n      colSpan: colSpan,\n      color: color,\n      data: data,\n      id: id,\n      index: index,\n      text: text\n    }\n  } = _ref;\n  return createVNode(1, \"th\", classes, createVNode(1, \"div\", \"dx-scheduler-group-header-content\", [!!CellTemplate && CellTemplate({\n    data: {\n      data: data,\n      id: id,\n      color: color,\n      text: text\n    },\n    index: index\n  }), !CellTemplate && createVNode(1, \"div\", null, text, 0)], 0), 2, {\n    colSpan: colSpan\n  });\n};\nexport var GroupPanelHorizontalCellProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(GroupPanelCellProps), Object.getOwnPropertyDescriptors({\n  isFirstGroupCell: false,\n  isLastGroupCell: false,\n  colSpan: 1\n})));\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport let GroupPanelHorizontalCell = /*#__PURE__*/(() => {\n  class GroupPanelHorizontalCell extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    get classes() {\n      var {\n        className: className,\n        isFirstGroupCell: isFirstGroupCell,\n        isLastGroupCell: isLastGroupCell\n      } = this.props;\n      return combineClasses({\n        \"dx-scheduler-group-header\": true,\n        \"dx-scheduler-first-group-cell\": isFirstGroupCell,\n        \"dx-scheduler-last-group-cell\": isLastGroupCell,\n        [className]: !!className\n      });\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          cellTemplate: getTemplate(props.cellTemplate)\n        }),\n        classes: this.classes,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  GroupPanelHorizontalCell.defaultProps = GroupPanelHorizontalCellProps;\n  return GroupPanelHorizontalCell;\n})();","map":null,"metadata":{},"sourceType":"module"}