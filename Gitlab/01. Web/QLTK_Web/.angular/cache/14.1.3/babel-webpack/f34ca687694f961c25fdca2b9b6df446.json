{"ast":null,"code":"import { NgbDateParserFormatter } from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i0 from \"@angular/core\";\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return \"\";\n  }\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\n\nexport let NgbDateVNParserFormatter = /*#__PURE__*/(() => {\n  class NgbDateVNParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n      if (value) {\n        const dateParts = value.trim().split('/');\n\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: null,\n            day: null\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[1]),\n            month: toInteger(dateParts[0]),\n            day: null\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[2]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[0])\n          };\n        }\n      }\n\n      return null;\n    }\n\n    format(date) {\n      let stringDate = \"\";\n\n      if (date) {\n        stringDate += isNumber(date.day) ? padNumber(date.day) + \"/\" : \"\";\n        stringDate += isNumber(date.month) ? padNumber(date.month) + \"/\" : \"\";\n        stringDate += date.year;\n      }\n\n      return stringDate;\n    }\n\n  }\n\n  NgbDateVNParserFormatter.ɵfac = /*@__PURE__*/function () {\n    let ɵNgbDateVNParserFormatter_BaseFactory;\n    return function NgbDateVNParserFormatter_Factory(t) {\n      return (ɵNgbDateVNParserFormatter_BaseFactory || (ɵNgbDateVNParserFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateVNParserFormatter)))(t || NgbDateVNParserFormatter);\n    };\n  }();\n\n  NgbDateVNParserFormatter.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NgbDateVNParserFormatter,\n    factory: NgbDateVNParserFormatter.ɵfac,\n    providedIn: 'root'\n  });\n  return NgbDateVNParserFormatter;\n})();","map":null,"metadata":{},"sourceType":"module"}