{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/core/wheel.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerEvent from \"./event_registrator\";\nimport { addNamespace, fireEvent } from \"../utils/index\";\nvar EVENT_NAME = \"dxmousewheel\";\nvar EVENT_NAMESPACE = \"dxWheel\";\nvar NATIVE_EVENT_NAME = \"wheel\";\nvar PIXEL_MODE = 0;\nvar DELTA_MUTLIPLIER = 30;\nvar wheel = {\n  setup: function (element) {\n    var $element = $(element);\n    eventsEngine.on($element, addNamespace(NATIVE_EVENT_NAME, EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel));\n  },\n  teardown: function (element) {\n    eventsEngine.off(element, \".\".concat(EVENT_NAMESPACE));\n  },\n  _wheelHandler: function (e) {\n    var {\n      deltaMode: deltaMode,\n      deltaY: deltaY,\n      deltaX: deltaX,\n      deltaZ: deltaZ\n    } = e.originalEvent;\n    fireEvent({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: this._normalizeDelta(deltaY, deltaMode),\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaZ: deltaZ,\n      deltaMode: deltaMode,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n\n  _normalizeDelta(delta) {\n    var deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : PIXEL_MODE;\n\n    if (deltaMode === PIXEL_MODE) {\n      return -delta;\n    } else {\n      return -DELTA_MUTLIPLIER * delta;\n    }\n  }\n\n};\nregisterEvent(EVENT_NAME, wheel);\nexport { EVENT_NAME as name };","map":null,"metadata":{},"sourceType":"module"}