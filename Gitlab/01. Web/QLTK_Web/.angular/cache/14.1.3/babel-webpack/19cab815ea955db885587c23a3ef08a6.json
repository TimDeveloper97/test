{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { addToStyles } from \"../../workspaces/utils\";\nimport { getAppointmentColor } from \"../../resources/utils\";\nexport var getOverflowIndicatorStyles = viewModel => {\n  var {\n    geometry: {\n      height: height,\n      left: left,\n      top: top,\n      width: width\n    }\n  } = viewModel;\n  var result = addToStyles([{\n    attr: \"left\",\n    value: \"\".concat(left, \"px\")\n  }, {\n    attr: \"top\",\n    value: \"\".concat(top, \"px\")\n  }, {\n    attr: \"width\",\n    value: \"\".concat(width, \"px\")\n  }, {\n    attr: \"height\",\n    value: \"\".concat(height, \"px\")\n  }, {\n    attr: \"boxShadow\",\n    value: \"inset \".concat(width, \"px 0 0 0 rgba(0, 0, 0, 0.3)\")\n  }]);\n  return result;\n};\nexport var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;\nexport var getIndicatorColor = (appointmentContext, viewModel, groups) => {\n  var _viewModel$groupIndex;\n\n  var groupIndex = null !== (_viewModel$groupIndex = viewModel.groupIndex) && void 0 !== _viewModel$groupIndex ? _viewModel$groupIndex : 0;\n  var {\n    appointment: appointment\n  } = viewModel.items.settings[0];\n  return getAppointmentColor({\n    resources: appointmentContext.resources,\n    resourceLoaderMap: appointmentContext.resourceLoaderMap,\n    resourcesDataAccessors: appointmentContext.dataAccessors.resources,\n    loadedResources: appointmentContext.loadedResources\n  }, {\n    itemData: appointment,\n    groupIndex: groupIndex,\n    groups: groups\n  });\n};","map":null,"metadata":{},"sourceType":"module"}