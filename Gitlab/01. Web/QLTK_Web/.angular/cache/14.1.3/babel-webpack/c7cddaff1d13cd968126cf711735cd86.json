{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colSpan\", \"isHeaderCell\", \"width\"];\nimport { createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { addWidthToStyle } from \"../utils\";\nimport { HeaderCell } from \"./header_cell\";\nimport { OrdinaryCell } from \"./ordinary_cell\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      colSpan: colSpan,\n      isHeaderCell: isHeaderCell\n    },\n    style: style\n  } = _ref;\n  var Cell = isHeaderCell ? HeaderCell : OrdinaryCell;\n  return createComponentVNode(2, Cell, {\n    className: \"dx-scheduler-virtual-cell\",\n    styles: style,\n    colSpan: colSpan\n  });\n};\nexport var VirtualCellProps = {\n  width: 0,\n  isHeaderCell: false\n};\nexport let VirtualCell = /*#__PURE__*/(() => {\n  class VirtualCell extends BaseInfernoComponent {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    get style() {\n      var {\n        width: width\n      } = this.props;\n      var {\n        style: style\n      } = this.restAttributes;\n      return addWidthToStyle(width, style);\n    }\n\n    get restAttributes() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n\n    render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        style: this.style,\n        restAttributes: this.restAttributes\n      });\n    }\n\n  }\n\n  VirtualCell.defaultProps = VirtualCellProps;\n  return VirtualCell;\n})();","map":null,"metadata":{},"sourceType":"module"}