{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let QuestionService = /*#__PURE__*/(() => {\n  class QuestionService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchQuestionGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question-group/search', model, httpOptions);\n      return tr;\n    }\n\n    createQuestionGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question-group/create', model, httpOptions);\n      return tr;\n    }\n\n    updateQuestionGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question-group/update', model, httpOptions);\n      return tr;\n    }\n\n    getInfoQuestionGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question-group/getQuestionGroupInfo', model, httpOptions);\n      return tr;\n    }\n\n    deleteQuestionGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question-group/delete', model, httpOptions);\n      return tr;\n    } // Gọi api câu hỏi\n\n\n    searchQuestion(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question/search', model, httpOptions);\n      return tr;\n    }\n\n    createQuestion(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question/create', model, httpOptions);\n      return tr;\n    }\n\n    updateQuestion(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question/update', model, httpOptions);\n      return tr;\n    }\n\n    getInfoQuestion(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question/getQuestionInfo', model, httpOptions);\n      return tr;\n    }\n\n    deleteQuestion(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'question/delete', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  QuestionService.ɵfac = function QuestionService_Factory(t) {\n    return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  QuestionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionService,\n    factory: QuestionService.ɵfac,\n    providedIn: 'root'\n  });\n  return QuestionService;\n})();","map":null,"metadata":{},"sourceType":"module"}