{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/resize_observer.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"./utils/common\";\nimport { getWindow, hasWindow } from \"./utils/window\";\nvar window = getWindow();\nvar ResizeObserverMock = {\n  observe: noop,\n  unobserve: noop,\n  disconnect: noop\n};\n\nclass ResizeObserverSingleton {\n  constructor() {\n    if (!hasWindow() || !window.ResizeObserver) {\n      return ResizeObserverMock;\n    }\n\n    this._callbacksMap = new Map();\n    this._observer = new window.ResizeObserver(entries => {\n      entries.forEach(entry => {\n        var _this$_callbacksMap$g;\n\n        null === (_this$_callbacksMap$g = this._callbacksMap.get(entry.target)) || void 0 === _this$_callbacksMap$g ? void 0 : _this$_callbacksMap$g(entry);\n      });\n    });\n  }\n\n  observe(element, callback) {\n    this._callbacksMap.set(element, callback);\n\n    this._observer.observe(element);\n  }\n\n  unobserve(element) {\n    this._callbacksMap.delete(element);\n\n    this._observer.unobserve(element);\n  }\n\n  disconnect() {\n    this._callbacksMap.clear();\n\n    this._observer.disconnect();\n  }\n\n}\n\nvar resizeObserverSingleton = new ResizeObserverSingleton();\nexport default resizeObserverSingleton;","map":null,"metadata":{},"sourceType":"module"}