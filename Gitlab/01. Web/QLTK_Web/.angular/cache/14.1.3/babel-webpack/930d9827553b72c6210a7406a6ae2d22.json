{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/tooltip_strategies/desktopTooltipStrategy.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { TooltipStrategyBase } from \"./tooltipStrategyBase\";\nimport Tooltip from \"../../tooltip\";\nimport { touch } from \"../../../core/utils/support\";\nvar APPOINTMENT_TOOLTIP_WRAPPER_CLASS = \"dx-scheduler-appointment-tooltip-wrapper\";\nvar MAX_TOOLTIP_HEIGHT = 200;\nexport class DesktopTooltipStrategy extends TooltipStrategyBase {\n  _prepareBeforeVisibleChanged(dataList) {\n    this._tooltip.option(\"position\", {\n      my: \"bottom\",\n      at: \"top\",\n      boundary: this._getBoundary(dataList),\n      offset: this._extraOptions.offset,\n      collision: \"fit flipfit\"\n    });\n  }\n\n  _getBoundary(dataList) {\n    return this._options.isAppointmentInAllDayPanel(dataList[0].appointment) ? this._options.container : this._options.getScrollableContainer();\n  }\n\n  _onShown() {\n    super._onShown();\n\n    if (this._extraOptions.isButtonClick) {\n      this._list.focus();\n\n      this._list.option(\"focusedElement\", null);\n    }\n  }\n\n  _createListOption(target, dataList) {\n    var result = super._createListOption(target, dataList);\n\n    result.showScrollbar = touch ? \"always\" : \"onHover\";\n    return result;\n  }\n\n  _createTooltip(target, dataList) {\n    var tooltip = this._createTooltipElement(APPOINTMENT_TOOLTIP_WRAPPER_CLASS);\n\n    return this._options.createComponent(tooltip, Tooltip, {\n      target: target,\n      maxHeight: MAX_TOOLTIP_HEIGHT,\n      rtlEnabled: this._extraOptions.rtlEnabled,\n      onShown: this._onShown.bind(this),\n      contentTemplate: this._getContentTemplate(dataList),\n      copyRootClassesToWrapper: true,\n      _ignoreCopyRootClassesToWrapperDeprecation: true\n    });\n  }\n\n  _onListRender(e) {\n    return this._extraOptions.dragBehavior && this._extraOptions.dragBehavior(e);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}