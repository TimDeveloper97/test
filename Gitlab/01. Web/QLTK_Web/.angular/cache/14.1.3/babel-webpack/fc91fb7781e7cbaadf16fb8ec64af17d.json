{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let ClassRoomService = /*#__PURE__*/(() => {\n  class ClassRoomService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchClassRoom(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchClassRoom', model, httpOptions);\n      return tr;\n    }\n\n    searchRoomType(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchRoomType', model, httpOptions);\n      return tr;\n    }\n\n    searchMaterial(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchMaterial', model, httpOptions);\n      return tr;\n    }\n\n    searchModule(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchModule', model, httpOptions);\n      return tr;\n    }\n\n    searchProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchProduct', model, httpOptions);\n      return tr;\n    }\n\n    searchPractice(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchPractice', model, httpOptions);\n      return tr;\n    }\n\n    searchSkill(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/SearchSkill', model, httpOptions);\n      return tr;\n    }\n\n    createClassRoom(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/AddClassRoom', model, httpOptions);\n      return tr;\n    }\n\n    deleteClassRoom(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/DeleteClassRoom', model, httpOptions);\n      return tr;\n    }\n\n    updateClassRoom(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/UpdateClassRoom', model, httpOptions);\n      return tr;\n    }\n\n    getClassRoom(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/GetClassRoom', model, httpOptions);\n      return tr;\n    }\n\n    ExportExcel(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/ExportExcel', model, httpOptions);\n      return tr;\n    }\n\n    DownloadAFile(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'HandlingImage/DownloadFile', model, httpOptions);\n      return tr;\n    }\n\n    uploadDesignDocument(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/UploadDesignDocument', model, httpOptions);\n      return tr;\n    }\n\n    getListFolderClassRoom(classRoomId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ClassRoom/GetListFolderClassRoom?classRoomId=' + classRoomId, httpOptions);\n      return tr;\n    }\n\n    getListFileClassRoom(folderId) {\n      var tr = this.http.get(this.config.ServerWithApiUrl + 'ClassRoom/GetListFileClassRoom?folderId=' + folderId, httpOptions);\n      return tr;\n    }\n\n    getPriceModule(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/GetPriceModule', model, httpOptions);\n      return tr;\n    }\n\n    GetPricePractice(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/GetPricePractice', model, httpOptions);\n      return tr;\n    }\n\n    GetPriceProduct(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/GetPriceProduct', model, httpOptions);\n      return tr;\n    }\n\n    updatePriceClass() {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'ClassRoom/UpdatePriceClassRoom', httpOptions);\n      return tr;\n    }\n\n  }\n\n  ClassRoomService.ɵfac = function ClassRoomService_Factory(t) {\n    return new (t || ClassRoomService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  ClassRoomService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClassRoomService,\n    factory: ClassRoomService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClassRoomService;\n})();","map":null,"metadata":{},"sourceType":"module"}