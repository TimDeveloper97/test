{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/shared\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let PracticeGroupService = /*#__PURE__*/(() => {\n  class PracticeGroupService {\n    constructor(http, config) {\n      this.http = http;\n      this.config = config;\n    }\n\n    searchPracticeGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/SearchPracticeGroup', model, httpOptions);\n      return tr;\n    }\n\n    searchPracticeGroupById(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/SearchPracticeGroupById', model, httpOptions);\n      return tr;\n    }\n\n    deletePracticeGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/DeletePracticeGroup', model, httpOptions);\n      return tr;\n    }\n\n    getCbbPracticeGroupForUpdate(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/SearchPracticeGroupExpect', model, httpOptions);\n      return tr;\n    }\n\n    createPracticeGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/AddPracticeGroup', model, httpOptions);\n      return tr;\n    }\n\n    searchPracticeStandard(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'GroupModule/SearchPracticeStandard', model, httpOptions);\n      return tr;\n    }\n\n    getPracticeGroupInfo(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/GetPracticeGroupInfo', model, httpOptions);\n      return tr;\n    }\n\n    updatePracticeGroup(model) {\n      var tr = this.http.post(this.config.ServerWithApiUrl + 'PracticeGroup/UpdatePracticeGroup', model, httpOptions);\n      return tr;\n    }\n\n  }\n\n  PracticeGroupService.ɵfac = function PracticeGroupService_Factory(t) {\n    return new (t || PracticeGroupService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Configuration));\n  };\n\n  PracticeGroupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PracticeGroupService,\n    factory: PracticeGroupService.ɵfac,\n    providedIn: 'root'\n  });\n  return PracticeGroupService;\n})();","map":null,"metadata":{},"sourceType":"module"}