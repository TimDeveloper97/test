{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\nimport { getViewStartByOptions } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { formatWeekdayAndDay } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { VIEWS } from \"../constants\";\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\n\nclass SchedulerTimelineMonth extends SchedulerTimeline {\n  get type() {\n    return VIEWS.TIMELINE_MONTH;\n  }\n\n  get viewDirection() {\n    return \"horizontal\";\n  }\n\n  get renovatedHeaderPanelComponent() {\n    return dxrDateHeader;\n  }\n\n  _renderView() {\n    super._renderView();\n\n    this._updateScrollable();\n  }\n\n  _getElementClass() {\n    return TIMELINE_CLASS;\n  }\n\n  _getDateHeaderTemplate() {\n    return this.option(\"dateCellTemplate\");\n  }\n\n  _calculateDurationInCells(timeDiff) {\n    return timeDiff / this.getCellDuration();\n  }\n\n  isIndicatorVisible() {\n    return true;\n  }\n\n  _getFormat() {\n    return formatWeekdayAndDay;\n  }\n\n  _getIntervalBetween(currentDate) {\n    var firstViewDate = this.getStartViewDate();\n    var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n    return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset;\n  }\n\n  _getViewStartByOptions() {\n    return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")));\n  }\n\n  generateRenderOptions() {\n    var options = super.generateRenderOptions(true);\n    return _extends({}, options, {\n      getDateForHeaderText: (_, date) => date\n    });\n  }\n\n}\n\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\nexport default SchedulerTimelineMonth;","map":null,"metadata":{},"sourceType":"module"}